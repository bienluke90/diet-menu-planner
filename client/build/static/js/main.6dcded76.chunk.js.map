{"version":3,"sources":["routes/index.js","actions/index.js","templates/Header.js","views/Login.js","views/Register.js","templates/Card.js","components/RemoveModal.js","utils/index.js","components/MealSnippet.js","components/DayModal.js","components/DayNote.js","views/Dashboard.js","views/SavedMeals.js","components/IngredientModal.js","components/OkModal.js","components/IngredientSnippet.js","views/SavedIngredients.js","views/Configuration.js","components/MealModal.js","components/MealNote.js","views/Day.js","reducer/index.js","store/index.js","views/Root.js","index.js","assets/logo.svg"],"names":["routes","urlOrigin","window","location","origin","Header","state","navOpened","componentDidMount","document","addEventListener","handleClickOutside","componentWillUnmount","removeEventListener","handleNavClick","e","body","clientWidth","setState","prevState","domNode","ReactDOM","findDOMNode","contains","target","this","props","loggedAs","logout","history","className","to","onClick","src","logo","alt","type","aria-label","aria-expanded","data-target","aria-hidden","id","push","React","Component","defaultProps","withRouter","connect","dispatch","Login","error","email","password","loginError","handleInputChange","getAttribute","split","attr","value","handleLoginButton","login","htmlFor","placeholder","onChange","loginSuccess","axios","post","then","payload","data","catch","loginAction","Register","errorPswd","errorEmail","password2","registerError","handleInputBlur","test","length","handleRegisterButton","register","onBlur","registerErr","registerSuccess","newState","registerAction","Card","children","title","subtitle","href","RemoveModal","click","floorToOne","n","Math","floor","saveDB","token","localStorage","getItem","Array","isArray","join","url","method","headers","MealSnippet","removeModalShow","handleRemoveButton","preventDefault","handleBackButton","handleRemoveModal","sure","name","removeBookmarkedMeal","time","substances","ingredients","isRemovable","thetime","Date","ingredientsList","map","i","getHours","toString","getMinutes","proteins","fats","carbs","calories","removeBookmarkedMealAction","DayModal","date","isSelected","dateExists","getElementById","classList","add","remove","handleDateChange","days","d","getTime","includes","handleSaveDay","saveNewDay","close","isEdit","editDay","dayId","selected","shouldCloseOnSelect","editDayAction","saveNewDayAction","DayNote","editModalShow","handleEditButton","identity","removeDay","path","config","numdate","getFullYear","getMonth","getDate","Pmin","Pmax","Fmin","Fmax","Cmin","Cmax","BMR","goal","removeDayAction","Dashboard","modalOpened","handleAddNew","handleCloseModal","dayList","mealList","meals","m","key","savedMeals","IngredientModal","quantity","nameExists","searchOpened","searchField","searchError","searchServerFail","searched","prevName","ingredientNames","handleSaveButton","addIngredient","mealType","editIngredient","recountSubstances","handleFromBookmarks","savedIngredients","filter","ingredient","handleOpenSearch","handleSearchProduct","ua","navigator","oscpu","search","products","p","generic_name","product_name","img","image_small_url","nutriments","proteins_100g","fat_100g","carbohydrates_100g","console","log","handleUseProduct","theProduct","searchedProducts","s","data-id","min","addIngredientAction","editIngredientAction","OkModal","IngredientSnippet","bookmarkModalShow","removeIngredient","removeBookmarkedIngredient","isntEditable","handleBookmarkIngredient","bookmarkIngredient","removeIngredientAction","removeBookmarkedIngredientAction","bookmarkIngredientAction","Configuration","bmrForm","bodyMass","bodyHeight","age","activity","sex","result","proportionsForm","handleMassChange","persist","handleHeightChange","handleAgeChange","handleActivityChange","handleSexChange","sexTo","handleCalculateButton","Object","values","indexOf","handleProteinChange","handleFatsChange","handleCarbsChange","handleSaveBMR","yourProteins","yourFats","yourCarbs","yourGoal","saveBMR","saveProportions","minProteins","maxProteins","minFats","maxFats","minCarbs","maxCarbs","ratioP","ratioF","ratioC","handleSaveProportions","yourBMR","handleGoalChange","handleSaveGoal","saveGoal","errorBMR","propError","errorGoal","checked","BMRresult","saveBMRAction","properties","saveProportionsAction","saveGoalAction","MealModal","timeExists","times","types","handleNameChange","handleTimeChange","handleTypeChange","handleSaveMeal","saveNewMeal","prevTime","prevType","editMeal","parts","timeFormat","setHours","setMinutes","meal","maxDetail","clearIcon","saveNewMealAction","editMealAction","MealNote","ingredientModalShow","bookmarkModal","names","handleIngredientBackButton","removeMeal","handleAddIngredient","handleBookmarkMeal","bookmarkMeal","timeObj","rightTime","PropTypes","shape","removeMealAction","bookmarkMealAction","Day","match","dayParam","params","day","thisDate","thisDay","ingredientList","v","initialState","rootReducer","helper","action","max","sort","a","b","reduce","removeItem","setItem","persistConfig","storage","persistedReducer","persistReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","Root","exact","component","SavedMeals","SavedIngredients","render","StrictMode","module","exports"],"mappings":"qQACaA,EACL,IADKA,EAEA,cAFAA,EAGN,uBAHMA,EAIJ,UAJIA,EAKE,gBALFA,EAMH,iBANGA,EAOJ,SAPIA,EAQD,Y,+ECeNC,EAAYC,OAAOC,SAASC,OCf5BC,E,4MACJC,MAAQ,CACNC,WAAW,G,EAGbC,kBAAoB,WAClBC,SAASC,iBAAiB,QAAS,EAAKC,oBAAoB,I,EAG9DC,qBAAuB,WACrBH,SAASI,oBAAoB,QAAS,EAAKF,oBAAoB,I,EAGjEG,eAAiB,SAACC,GACFN,SAASO,KAAKC,YAChB,MACV,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BZ,WAAYY,EAAUZ,e,EAK5BI,mBAAqB,SAACI,GACpB,IAAMK,EAAUC,IAASC,YAAT,gBAEXF,GAAYA,EAAQG,SAASR,EAAES,SAClC,EAAKN,SAAS,CACZX,WAAW,K,uDAKP,IAAD,EAC+BkB,KAAKC,MAAnCC,EADD,EACCA,SAAUC,EADX,EACWA,OAAQC,EADnB,EACmBA,QAClBtB,EAAckB,KAAKnB,MAAnBC,UACR,OACE,gCACE,yBAAKuB,UAAU,UACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMA,UAAU,cAAcC,GAAI/B,EAAagC,QAASP,KAAKX,gBAC3D,yBAAKmB,IAAKC,IAAMC,IAAI,2BACpB,0BAAML,UAAU,gBAAhB,sBAEF,4BACEM,KAAK,SACLN,UAAU,uBACVO,aAAW,OACXC,gBAAA,UAAkB/B,GAClBgC,cAAY,aACZP,QAASP,KAAKX,gBAEd,0BAAM0B,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAGtB,yBAAKC,GAAG,aAAaX,UAAS,sBAAiBvB,EAAY,SAAW,KACpE,yBAAKuB,UAAU,gBACb,kBAAC,IAAD,CAAMA,UAAU,cAAcC,GAAI/B,EAAkBgC,QAASP,KAAKX,gBAAlE,aAGA,kBAAC,IAAD,CAAMgB,UAAU,cAAcC,GAAI/B,EAAcgC,QAASP,KAAKX,gBAA9D,SAGA,kBAAC,IAAD,CAAMgB,UAAU,cAAcC,GAAI/B,EAAoBgC,QAASP,KAAKX,gBAApE,eAGA,kBAAC,IAAD,CAAMgB,UAAU,cAAcC,GAAI/B,EAAegC,QAASP,KAAKX,gBAA/D,kBAIF,yBAAKgB,UAAU,cACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CACEA,UAAU,oBACVC,GAAI/B,EACJgC,QAASP,KAAKX,gBAHhB,aAOEa,GACA,kBAAC,IAAD,CACEG,UAAU,kBACVC,GAAI/B,EACJgC,QAASP,KAAKX,gBAHhB,UAQDa,GACC,4BACEK,QAAS,WACPJ,IACAC,EAAQa,KAAK1C,IAEfoC,KAAK,SACLN,UAAU,mBANZ,sB,GA5FDa,IAAMC,WAmI3BvC,EAAOwC,aAAe,CACpBlB,SAAU,IAGGmB,kBAAWC,aAjBF,SAACzC,GAEvB,MAAO,CACLqB,SAFmBrB,EAAbqB,aALiB,SAACqB,GAAD,MAAe,CACxCpB,OAAQ,kBAAMoB,EDsHP,CACLZ,KA7NuB,oBC0HDW,CAA6C1C,I,gBCzIjE4C,E,4MACJ3C,MAAQ,CACN4C,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,YAAY,G,EAGdC,kBAAoB,SAACvC,GAAO,IAAD,EACRA,EAAES,OAAO+B,aAAa,MAAMC,MAAM,KAA1CC,EADgB,oBAEzB,EAAKvC,SAAL,aACEgC,MAAO,GACPG,YAAY,GACXI,EAAO1C,EAAES,OAAOkC,S,EAIrBC,kBAAoB,WAAO,IAAD,EACI,EAAKrD,MAAzB6C,EADgB,EAChBA,MAAOC,EADS,EACTA,SADS,EAEG,EAAK1B,MAAxBkC,EAFgB,EAEhBA,MAAO/B,EAFS,EAETA,QACVsB,GAAUC,EAOfQ,EACET,EACAC,GACA,SAACrC,GACC,EAAKG,SAAS,CAAEmC,WAAYtC,OAE9B,WACEc,EAAQa,KAAK1C,MAbf,EAAKkB,SAAS,CACZgC,MAAO,wC,uDAiBH,IAAD,EACwCzB,KAAKnB,MAA5C6C,EADD,EACCA,MAAOC,EADR,EACQA,SAAUF,EADlB,EACkBA,MAAOG,EADzB,EACyBA,WAChC,OACE,yBAAKvB,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,kCACb,uBAAGA,UAAU,SAAb,UACA,uBAAGA,UAAU,YAAb,kFAGA,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,0CACX,2BAAOA,UAAU,QAAQ+B,QAAQ,cAAjC,sBAEE,2BACEpB,GAAG,aACHX,UAAU,QACVM,KAAK,QACL0B,YAAY,QACZJ,MAAOP,EACPY,SAAUtC,KAAK6B,oBAEjB,0BAAMxB,UAAU,yBACd,uBAAGA,UAAU,qBAEf,0BAAMA,UAAU,0BACd,uBAAGA,UAAU,qBAKrB,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,0BACX,2BAAOA,UAAU,QAAQ+B,QAAQ,iBAAjC,gBAEE,2BACEpB,GAAG,gBACHX,UAAU,QACVM,KAAK,WACL0B,YAAY,WACZJ,MAAON,EACPW,SAAUtC,KAAK6B,oBAEjB,0BAAMxB,UAAU,yBACd,uBAAGA,UAAU,mBAIlBoB,GAAS,uBAAGpB,UAAU,mBAAmBoB,GACzCG,GAAc,uBAAGvB,UAAU,mBAAmBuB,IAEjD,yBAAKvB,UAAU,SACb,uBAAGA,UAAU,WACX,4BACEA,UAAU,oBACVM,KAAK,SACLJ,QAASP,KAAKkC,mBAHhB,kB,GA5FIhB,IAAMC,WAsHXE,cAAWC,YAAQ,MALP,SAACC,GAAD,MAAe,CACxCY,MAAO,SAACT,EAAOC,EAAUF,EAAOc,GAAzB,OACLhB,EFiGiB,SAACG,EAAOC,EAAUF,EAAOc,GAAzB,OAA0C,SAAChB,GAC9D,OAAOiB,IACJC,KADI,UACIjE,EADJ,cAC2B,CAC9BkD,QACAC,aAEDe,MAAK,SAACC,GACDA,EAAQC,KAAKnB,MACfA,EAAMkB,EAAQC,KAAKnB,QAGrBF,EAAS,CACPZ,KAlNkB,aAmNlBgC,YAEFJ,QAEDM,OAAM,WACLpB,EAAM,gFEnHCqB,CAAYpB,EAAOC,EAAUF,EAAOc,QAGvBjB,CAAkCE,ICtHtDuB,E,4MACJlE,MAAQ,CACNmE,WAAW,EACXC,YAAY,EACZtB,SAAU,GACVuB,UAAW,GACXxB,MAAO,GACPyB,eAAe,G,EAGjBtB,kBAAoB,SAACvC,GAAO,IAAD,EACRA,EAAES,OAAO+B,aAAa,MAAMC,MAAM,KAA1CC,EADgB,oBAEZ,UAATA,EAQJ,EAAKvC,SAAL,aACEuD,WAAW,GACVhB,EAAO1C,EAAES,OAAOkC,QATjB,EAAKxC,SAAL,aACEwD,YAAY,EACZE,eAAe,GACdnB,EAAO1C,EAAES,OAAOkC,S,EAUvBmB,gBAAkB,SAAC9D,GAAO,IAAD,EACgB,EAAKT,MAApC8C,EADe,EACfA,SAAUuB,EADK,EACLA,UAAWxB,EADN,EACMA,MADN,EAENpC,EAAES,OAAO+B,aAAa,MAAMC,MAAM,KAA1CC,EAFc,oBAGV,UAATA,GAAqB,mCAAmCqB,KAAK3B,KAAUA,GAO/D,cAATM,GAAkC,aAATA,GAAuBL,GAAYuB,KAC5DvB,IAAauB,GAAavB,EAAS2B,OAAS,GAAKJ,EAAUI,OAAS,IAErE,EAAK7D,SAAS,CACZuD,WAAW,IAVb,EAAKvD,SAAS,CACZwD,YAAY,K,EAclBM,qBAAuB,WAAO,IAAD,EACmC,EAAK1E,MAA3DoE,EADmB,EACnBA,WAAYD,EADO,EACPA,UAAWtB,EADJ,EACIA,MAAOC,EADX,EACWA,SAAUuB,EADrB,EACqBA,UADrB,EAEU,EAAKjD,MAAlCpB,EAFmB,EAEnBA,MAAO2E,EAFY,EAEZA,SAAUpD,EAFE,EAEFA,SACrB6C,IAAcD,GAActB,GAAUC,GAAauB,GAIvDM,EACE9B,EACAC,EACA9C,GACA,SAACS,GACC,EAAKG,SAAS,CAAE0D,cAAe7D,OAEjC,WACEc,EAAQa,KAAK1C,O,uDAKT,IAAD,EACsEyB,KAAKnB,MAA1E8C,EADD,EACCA,SAAUuB,EADX,EACWA,UAAWxB,EADtB,EACsBA,MAAOsB,EAD7B,EAC6BA,UAAWC,EADxC,EACwCA,WAAYE,EADpD,EACoDA,cAC3D,OACE,yBAAK9C,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,kCACb,uBAAGA,UAAU,SAAb,gBACA,uBAAGA,UAAU,YAAb,sLAKA,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,0CACX,2BAAOA,UAAU,QAAQ+B,QAAQ,cAAjC,sBAEE,2BACE/B,UAAU,QACVW,GAAG,aACHL,KAAK,QACL0B,YAAY,QACZJ,MAAOP,EACPY,SAAUtC,KAAK6B,kBACf4B,OAAQzD,KAAKoD,kBAEf,0BAAM/C,UAAU,yBACd,uBAAGA,UAAU,uBAIlB4C,GAAc,uBAAG5C,UAAU,mBAAb,oCAEjB,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,0BACX,2BAAOA,UAAU,QAAQ+B,QAAQ,iBAAjC,gBAEE,2BACE/B,UAAU,QACVW,GAAG,gBACHL,KAAK,WACL0B,YAAY,iBACZJ,MAAON,EACPW,SAAUtC,KAAK6B,kBACf4B,OAAQzD,KAAKoD,kBAEf,0BAAM/C,UAAU,yBACd,uBAAGA,UAAU,oBAKrB,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,0BACX,2BAAOA,UAAU,QAAQ+B,QAAQ,kBAAjC,mBAEE,2BACE/B,UAAU,QACVW,GAAG,iBACHL,KAAK,WACL0B,YAAY,kBACZJ,MAAOiB,EACPZ,SAAUtC,KAAK6B,kBACf4B,OAAQzD,KAAKoD,kBAEf,0BAAM/C,UAAU,yBACd,uBAAGA,UAAU,mBAIlB2C,GACC,uBAAG3C,UAAU,mBAAb,4EAKJ,yBAAKA,UAAU,SACb,uBAAGA,UAAU,WACX,4BACEA,UAAU,oBACVM,KAAK,SACLJ,QAASP,KAAKuD,sBAHhB,aAQDJ,GAAiB,uBAAG9C,UAAU,mBAAmB8C,W,GAtJzCjC,IAAMC,WAmMdE,cAAWC,aANF,SAACzC,GACvB,MAAO,CACLA,YAPuB,SAAC0C,GAAD,MAAe,CACxCiC,SAAU,SAAC9B,EAAOC,EAAU9C,EAAO6E,EAAaC,GAAtC,OACRpC,EHGoB,SAACG,EAAOC,EAAU9C,EAAO6E,EAAaC,GAAtC,OAA0D,SAACpC,GACjF,IAAMqC,EAAQ,eACT/E,EADS,CAEZqB,SAAUwB,IAEZ,OAAOc,IACJC,KADI,UACIjE,EADJ,iBAC8B,CAAEkD,QAAOC,WAAU9C,MAAO+E,IAC5DlB,MAAK,SAACC,GACDA,EAAQC,KAAKnB,MACfiC,EAAYf,EAAQC,KAAKnB,QAG3BF,EAAS,CACPZ,KA7LqB,gBA8LrBgC,YAEFgB,QAEDd,OAAM,WACLa,EAAY,gFGtBLG,CAAenC,EAAOC,EAAU9C,EAAO6E,EAAaC,QASvCrC,CAA6CyB,IClLxDe,EArBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,SAApB,OACX,oCACE,yBAAK5D,UAAU,QACb,wBAAIA,UAAU,2BAA2B2D,GACzC,uBAAG3D,UAAU,8BAA8B4D,IAE7C,yBAAK5D,UAAU,QACb,yBAAKA,UAAU,gBAAgB0D,IAEjC,yBAAK1D,UAAU,qBACb,uBAAG6D,KAAK,oCAAR,mCCiBSC,EA3BK,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUG,EAApB,EAAoBA,MAApB,OAClB,yBAAK/D,UAAU,SACb,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,cACb,4BAAQA,UAAU,mBAChB,uBAAGA,UAAU,oBAAoB2D,IAEnC,6BAAS3D,UAAU,mBACjB,uBAAGA,UAAU,YAAY4D,GAEzB,4BAAQtD,KAAK,SAASJ,QAAS,kBAAM6D,GAAM,IAAO/D,UAAU,oBAA5D,UAGA,4BAAQM,KAAK,SAASJ,QAAS,kBAAM6D,GAAM,IAAQ/D,UAAU,qBAA7D,cCdFgE,EAAa,SAACC,GAElB,OADaC,KAAKC,MAAU,GAAJF,GACV,IAGVG,EAAS,SAAC5F,GACd,IAAML,EAAYC,OAAOC,SAASC,OAC9B+F,EAAQC,aAAaC,QAAQ,SAkBjC,OAjBIC,MAAMC,QAAQJ,KAChBA,EAAQA,EAAMK,KAAK,KAGjBL,GACFlC,IAAM,CACJwC,IAAI,GAAD,OAAKxG,EAAL,SACHyG,OAAQ,OACRrC,KAAM,CACJ/D,SAEFqG,QAAS,CACP,eAAgBR,EAChB,eAAgB,sBAIf7F,GCpBHsG,E,4MACJtG,MAAQ,CACNuG,iBAAiB,G,EAGnBC,mBAAqB,SAAC/F,GACpBA,EAAEgG,iBACF,EAAK7F,SAAS,CACZ2F,iBAAiB,K,EAIrBG,iBAAmB,WACjB,EAAK9F,SAAS,CACZ2F,iBAAiB,K,EAIrBI,kBAAoB,SAACC,GAAU,IAAD,EACiB,EAAKxF,MAA1CU,EADoB,EACpBA,KAAM+E,EADc,EACdA,KAAMC,EADQ,EACRA,qBAChBF,GACFE,EAAqBhF,EAAM+E,GAE7B,EAAKjG,SAAS,CACZ2F,iBAAiB,K,uDAIX,IAAD,EAC4DpF,KAAKC,MAAhEyF,EADD,EACCA,KAAM/E,EADP,EACOA,KAAMiF,EADb,EACaA,KAAMC,EADnB,EACmBA,WAAYC,EAD/B,EAC+BA,YAAaC,EAD5C,EAC4CA,YAC3CX,EAAoBpF,KAAKnB,MAAzBuG,gBACFY,EAAU,IAAIC,KAAKL,GACnBM,EAAkBJ,EAAYK,KAAI,SAACC,GAAD,OAAOA,EAAEV,QAAMX,KAAK,MAC5D,OACE,oCACGgB,GAAeX,GACd,kBAAC,EAAD,CACEpB,MAAM,gBACNC,SAAQ,0DAAqDyB,GAC7DtB,MAAOpE,KAAKwF,oBAGhB,yBAAKnF,UAAU,yCACb,wBAAIA,UAAU,mBAAmBqF,GAChCE,GACC,wBAAIvF,UAAU,oCAAd,UACMM,EADN,YAE6C,IAAzCqF,EAAQK,WAAWC,WAAWhD,OAC1B0C,EAAQK,WADZ,WAEQL,EAAQK,YAJpB,YAM+C,IAA3CL,EAAQO,aAAaD,WAAWhD,OAC5B0C,EAAQO,aADZ,WAEQP,EAAQO,cARpB,MAYDR,GAAe,wBAAI1F,UAAU,oCAAoC6F,GACjEH,GACC,uBAAG7B,KAAK,IAAI3D,QAASP,KAAKqF,mBAAoBhF,UAAU,mBAAxD,UAIF,4BAAQA,UAAU,aAChB,2BACE,0CAEE,+BAAKwF,EAAWW,SAAWnC,EAAWwB,EAAWW,UAAY,MAA7D,MAEF,sCAEE,+BAAKX,EAAWY,KAAOpC,EAAWwB,EAAWY,MAAQ,MAArD,MAEF,uCAEE,+BAAKZ,EAAWa,MAAQrC,EAAWwB,EAAWa,OAAS,MAAvD,MAEF,sCAEE,+BAAKb,EAAWc,SAAWtC,EAAWwB,EAAWc,UAAY,MAA7D,iB,GA/EUzF,IAAMC,WAkHhCgE,EAAY/D,aAAe,CACzB2E,aAAa,EACbD,YAAa,GACbnF,KAAM,IAGOW,kBAAQ,MA/BI,SAACC,GAAD,MAAe,CACxCoE,qBAAsB,SAAChF,EAAM+E,GAAP,OAAgBnE,EPgCJ,SAACZ,EAAM+E,GACzC,MAAO,CACL/E,KAlHkC,yBAmHlCgC,QAAS,CACPhC,OACA+E,SOrC2CkB,CAA2BjG,EAAM+E,QA8BnEpE,CAAkC6D,G,iBCxH3C0B,G,kNACJhI,MAAQ,CACNiI,KAAM,KACNC,YAAY,EACZtF,OAAO,EACPuF,YAAY,G,EAGdjI,kBAAoB,WACLC,SAASiI,eAAe,iBAChCC,UAAUC,IAAI,gB,EAGrBhI,qBAAuB,WACRH,SAASiI,eAAe,iBAChCC,UAAUE,OAAO,gB,EAGxBC,iBAAmB,SAACP,GACD,EAAK7G,MAAdqH,KACWnB,KAAI,SAACoB,GACtB,OAAO,IAAItB,KAAKsB,EAAET,MAAMU,aAEhBC,SAAS,IAAIxB,KAAKa,GAAMU,WAChC,EAAK/H,SAAS,CACZqH,KAAM,KACNE,YAAY,IAIhB,EAAKvH,SAAS,CACZqH,OACAC,YAAY,EACZC,YAAY,EACZvF,OAAO,K,EAIXiG,cAAgB,WAAO,IAAD,EACS,EAAK7I,MAA1BiI,EADY,EACZA,KAAMC,EADM,EACNA,WADM,EAEkC,EAAK9G,MAAnD0H,EAFY,EAEZA,WAAYC,EAFA,EAEAA,MAAOC,EAFP,EAEOA,OAAQC,EAFf,EAEeA,QAASC,EAFxB,EAEwBA,MAE5C,GAAKhB,EAAL,CAOA,GAAIc,EAOF,OANA,EAAKpI,SAAS,CACZsH,YAAY,EACZC,YAAY,IAEdc,EAAQC,EAAOjB,QACfc,IAIF,EAAKnI,SAAS,CACZsH,YAAY,EACZC,YAAY,IAGdW,EAAWb,GACXc,SAtBE,EAAKnI,SAAS,CACZgC,OAAO,K,uDAwBH,IAAD,EAC6BzB,KAAKnB,MAAjCiI,EADD,EACCA,KAAMrF,EADP,EACOA,MAAOuF,EADd,EACcA,WADd,EAEmBhH,KAAKC,MAAvB4H,EAFD,EAECA,OAAQD,EAFT,EAESA,MAEhB,OACE,yBAAKvH,UAAU,SACb,yBAAKA,UAAU,oBAAf,KACA,yBAAKA,UAAU,cACb,4BAAQA,UAAU,mBAChB,wBAAIA,UAAU,aAAawH,EAAS,WAAa,gBAEnD,iCACE,yBAAKxH,UAAU,WACb,wBAAIA,UAAU,sCAAd,gBACA,kBAAC,IAAD,CACEA,UAAU,QACV2H,SAAUlB,EACVxE,SAAUtC,KAAKqH,iBACfY,qBAAmB,KAGtBxG,GAAS,uBAAGpB,UAAU,mBAAb,6BACT2G,GAAc,uBAAG3G,UAAU,mBAAb,2BACf,6BACA,4BAAQM,KAAK,SAASN,UAAU,oBAAoBE,QAASqH,GAA7D,QAGA,4BAAQjH,KAAK,SAASN,UAAU,iBAAiBE,QAASP,KAAK0H,eAA/D,e,GA/FWxG,IAAMC,YA+HdG,eAjBS,SAACzC,GAEvB,MAAO,CACLyI,KAFezI,EAATyI,KAGNzI,YATuB,SAAC0C,GAAD,MAAe,CACxCuG,QAAS,SAACC,EAAOjB,GAAR,OAAiBvF,ERnDL,SAACwG,EAAOjB,GAC7B,MAAO,CACLnG,KA1DoB,WA2DpBgC,QAAS,CACPoF,QACAjB,SQ8C+BoB,CAAcH,EAAOjB,KACxDa,WAAY,SAACb,GAAD,OAAUvF,ER7DE,SAACuF,GACzB,MAAO,CACLnG,KAlDwB,eAmDxBgC,QAAS,CACPmE,SQyD2BqB,CAAiBrB,QAoBnCxF,CAA6CuF,GC9HtDuB,E,4MACJvJ,MAAQ,CACNuG,iBAAiB,EACjBiD,eAAe,G,EAGjBC,iBAAmB,SAAChJ,GAClBA,EAAEgG,iBACF,EAAK7F,SAAS,CACZ4I,eAAe,K,EAInBhD,mBAAqB,SAAC/F,GACpBA,EAAEgG,iBACF,EAAK7F,SAAS,CACZ2F,iBAAiB,K,EAIrBG,iBAAmB,WACjB,EAAK9F,SAAS,CACZ4I,eAAe,K,EAInB7C,kBAAoB,SAACC,GAAU,IAAD,EACI,EAAKxF,MAA7BsI,EADoB,EACpBA,SAAUC,EADU,EACVA,UACd/C,GACF+C,EAAUD,GAEZ,EAAK9I,SAAS,CACZ2F,iBAAiB,K,uDAIX,IAAD,EACwDpF,KAAKC,MAA5D8D,EADD,EACCA,SAAU0E,EADX,EACWA,KAAM3B,EADjB,EACiBA,KAAMjB,EADvB,EACuBA,WAAY6C,EADnC,EACmCA,OAAQH,EAD3C,EAC2CA,SAD3C,EAEoCvI,KAAKnB,MAAxCuG,EAFD,EAECA,gBAAiBiD,EAFlB,EAEkBA,cACnBM,EAAU,IAAI1C,KAAKa,GACzB,OACE,oCACG1B,GACC,kBAAC,EAAD,CACEpB,MAAM,gBACNC,SAAS,yCACTG,MAAOpE,KAAKwF,oBAGf6C,GACC,kBAAC,EAAD,CACErE,MAAM,oBACNC,SAAS,kCACT6C,KAAMA,EACNc,MAAO5H,KAAKuF,iBACZwC,MAAOQ,EACPV,QAAM,IAGV,yBAAKxH,UAAU,eACb,4BAAQA,UAAU,eAChB,wBAAIA,UAAU,+BAAd,UACMsI,EAAQC,cADd,YAE6C,IAAzCD,EAAQE,WAAWvC,WAAWhD,OAC1BqF,EAAQE,WAAa,EADzB,WAEQF,EAAQE,WAAa,GAJjC,YAM4C,IAAxCF,EAAQG,UAAUxC,WAAWhD,OACzBqF,EAAQG,UADZ,WAEQH,EAAQG,aAGpB,yBAAKzI,UAAU,kCACb,uBAAG6D,KAAI,yBAAoBuE,GAAQpI,UAAU,oBAA7C,QAGA,uBACE6D,KAAM3F,EACNgC,QAASP,KAAKsI,iBACdjI,UAAU,oBAHZ,QAOA,uBACE6D,KAAM3F,EACNgC,QAASP,KAAKqF,mBACdhF,UAAU,oCAHZ,YASJ,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,WAAW0D,IAE5B,4BAAQ1D,UAAU,2BAChB,uBAAGA,UAAU,8BAAb,YAEGwF,EAAWW,SAAWkC,EAAOK,MAC5B,4BAAQ1I,UAAU,mBAAlB,IAAsCwF,EAAWW,SAAjD,SAEDX,EAAWW,SAAWkC,EAAOM,MAC5B,4BAAQ3I,UAAU,mBAAlB,IAAsCwF,EAAWW,SAAjD,SAEDX,EAAWW,SAAWkC,EAAOK,MAAQlD,EAAWW,SAAWkC,EAAOM,MACjE,oCAAUnD,EAAWW,SAArB,MAGJ,uBAAGnG,UAAU,8BAAb,QAEGwF,EAAWY,KAAOiC,EAAOO,MACxB,4BAAQ5I,UAAU,mBAAlB,IAAsCwF,EAAWY,KAAjD,SAEDZ,EAAWY,KAAOiC,EAAOQ,MACxB,4BAAQ7I,UAAU,mBAAlB,IAAsCwF,EAAWY,KAAjD,SAEDZ,EAAWY,KAAOiC,EAAOO,MAAQpD,EAAWY,KAAOiC,EAAOQ,MACzD,oCAAUrD,EAAWY,KAArB,MAGJ,uBAAGpG,UAAU,8BAAb,SAEGwF,EAAWa,MAAQgC,EAAOS,MACzB,4BAAQ9I,UAAU,mBAAlB,IAAsCwF,EAAWa,MAAjD,SAEDb,EAAWa,MAAQgC,EAAOU,MACzB,4BAAQ/I,UAAU,mBAAlB,IAAsCwF,EAAWa,MAAjD,SAEDb,EAAWa,MAAQgC,EAAOS,MAAQtD,EAAWa,MAAQgC,EAAOU,MAC3D,oCAAUvD,EAAWa,MAArB,MAGJ,uBAAGrG,UAAU,8BAAb,YAEGwF,EAAWc,SAAW+B,EAAOW,IAAM,IAAM,IAAMX,EAAOY,MACrD,4BAAQjJ,UAAU,mBAAlB,IAAsCwF,EAAWc,SAAjD,SAEDd,EAAWc,SAAW+B,EAAOW,IAAM,IAAM,IAAMX,EAAOY,MACrD,4BAAQjJ,UAAU,mBAAlB,IAAsCwF,EAAWc,SAAjD,SAEDd,EAAWc,SAAW+B,EAAOW,IAAM,IAAM,IAAMX,EAAOY,MACrDzD,EAAWc,SAAW+B,EAAOW,IAAM,IAAM,IAAMX,EAAOY,MACpD,oCAAUzD,EAAWc,SAArB,iB,GA9IIzF,IAAMC,WAoL5BiH,EAAQhH,aAAe,CACrByE,WAAY,CACVW,SAAU,EACVC,KAAM,EACNC,MAAO,EACPC,SAAU,IAICrF,kBAAQ,MArCI,SAACC,GAAD,MAAe,CACxCiH,UAAW,SAACxH,GAAD,OAAQO,ETzFI,SAACP,GACxB,MAAO,CACLL,KAjEsB,aAkEtBgC,QAAS,CACP3B,OSqFwBuI,CAAgBvI,QAoC/BM,CAAkC8G,GC7L3CoB,E,4MACJ3K,MAAQ,CACN4K,aAAa,G,EAGfC,aAAe,SAACpK,GACdA,EAAEgG,iBACF,EAAK7F,SAAS,CACZgK,aAAa,K,EAIjBE,iBAAmB,WACjB,EAAKlK,SAAS,CACZgK,aAAa,K,uDAIP,IAAD,EAC4BzJ,KAAKC,MAAhCqH,EADD,EACCA,KAAMoB,EADP,EACOA,OAAQxI,EADf,EACeA,SACduJ,EAAgBzJ,KAAKnB,MAArB4K,YACFG,EAAWtC,EAAKhE,OAGpBgE,EAAKnB,KAAI,SAACoB,GACR,IAAMsC,EAAYtC,EAAEuC,MAAMxG,OAGxBiE,EAAEuC,MAAM3D,KAAI,SAAC4D,GAAD,OACV,kBAAC,EAAD,CACEC,IAAG,UAAKD,EAAErE,KAAP,YAAe6B,EAAEvG,IACpBL,KAAMoJ,EAAEpJ,KACR+E,KAAMqE,EAAErE,KACRE,KAAMmE,EAAEnE,KACRC,WAAYkE,EAAElE,gBARlB,uBAAGxF,UAAU,wCAAb,4BAYF,OACE,oCACE,kBAAC,EAAD,CACE2J,IAAG,UAAKzC,EAAEvG,IACVuH,SAAUhB,EAAEvG,GACZ8F,KAAMS,EAAET,KACR2B,KAAMlB,EAAEkB,KACR5C,WAAY0B,EAAE1B,WACd6C,OAAQA,GAEPmB,OA1BT,uBAAGxJ,UAAU,wCAAb,uBAgCF,OACE,oCACGoJ,GAAe,kBAAC,EAAD,CAAUnC,KAAMA,EAAMM,MAAO5H,KAAK2J,mBAClD,kBAAC,EAAD,CACE3F,MAAM,YACNC,SAAQ,UAAK/D,GAAQ,oBAAiBA,EAAjB,MAAb,qCAER,yBAAKG,UAAU,6BACb,uBAAGA,UAAU,8BAAb,wBACA,4BAAQM,KAAK,SAASN,UAAU,SAASE,QAASP,KAAK0J,cAAvD,YAIDE,Q,GAnEa1I,IAAMC,WAiGfG,eAvBS,SAACzC,GAEvB,MAAO,CACLyI,KAFiCzI,EAA3ByI,KAGNoB,OAHiC7J,EAArB6J,OAIZxI,SAJiCrB,EAAbqB,YAsBToB,CAAyBkI,GCpEzBlI,eATS,SAACzC,GAEvB,MAAO,CAAEoL,WADcpL,EAAfoL,cAQK3I,EA/BI,SAAC,GAAoB,IAChCwI,EAD+B,EAAjBG,WACK9D,KAAI,SAAC4D,GAAD,OAC3B,kBAAC,EAAD,CACEC,IAAG,UAAKD,EAAErE,KAAP,YAAeqE,EAAEpJ,MACpB+E,KAAMqE,EAAErE,KACRG,WAAYkE,EAAElE,WACdC,YAAaiE,EAAEjE,YACf2C,KAAMsB,EAAEtB,KACR1C,aAAW,OAIf,OACE,kBAAC,EAAD,CAAM/B,MAAM,cAAcC,SAAS,0CACf,IAAjB6F,EAAMxG,QACL,uBAAGjD,UAAU,wCAAb,gCAEDyJ,MCXDI,E,4MACJrL,MAAQ,CACN6G,KAAM,EAAKzF,MAAMyF,MAAQ,GACzByE,SAAU,EAAKlK,MAAMkK,UAAY,EACjC3D,SAAU,EAAKvG,MAAM4F,WAAWW,UAAY,EAC5CC,KAAM,EAAKxG,MAAM4F,WAAWY,MAAQ,EACpCC,MAAO,EAAKzG,MAAM4F,WAAWa,OAAS,EACtCC,SAAU,EAAK1G,MAAM4F,WAAWc,UAAY,EAC5ClF,OAAO,EACP2I,YAAY,EACZC,cAAc,EACdC,YAAa,GACbC,aAAa,EACbC,kBAAkB,EAClBC,SAAU,I,EAGZC,SACmB,EAAKzK,MAAdyF,K,EAIV3G,kBAAoB,WACLC,SAASiI,eAAe,iBAChCC,UAAUC,IAAI,gB,EAGrBhI,qBAAuB,WACRH,SAASiI,eAAe,iBAChCC,UAAUE,OAAO,gB,EAGxBvF,kBAAoB,SAACvC,GAAO,IAWwC,EARC,EAF3DqL,EAAoB,EAAK1K,MAAzB0K,gBADiB,EAEPrL,EAAES,OAAO+B,aAAa,MAAMC,MAAM,KAA3CE,EAFgB,oBAGX,SAAVA,GAAqB0I,EAAgBlD,SAASnI,EAAES,OAAOkC,OAQ7C,SAAVA,GAAoB0I,EAAgBlD,SAASnI,EAAES,OAAOkC,OACxD,EAAKxC,UAAL,mBACGwC,EAAQ3C,EAAES,OAAOkC,OADpB,4BAEc,GAFd,KAOY,WAAVA,GACF,EAAKxC,SAAS,CACZ6K,YAAahL,EAAES,OAAOkC,MACtBsI,aAAa,IAIjB,EAAK9K,SAAL,eACGwC,GAAS3C,EAAES,OAAOkC,SAvBnB,EAAKxC,UAAL,mBACGwC,EAAQ3C,EAAES,OAAOkC,OADpB,4BAEc,GAFd,K,EA2BJ2I,iBAAmB,WAAO,IAAD,EACiD,EAAK/L,MAArE6G,EADe,EACfA,KAAMyE,EADS,EACTA,SAAU3D,EADD,EACCA,SAAUC,EADX,EACWA,KAAMC,EADjB,EACiBA,MAAOC,EADxB,EACwBA,SAAUyD,EADlC,EACkCA,WADlC,EAWnB,EAAKnK,MARP0K,EAHqB,EAGrBA,gBACAE,EAJqB,EAIrBA,cACA9C,EALqB,EAKrBA,MACA+C,EANqB,EAMrBA,SACAlD,EAPqB,EAOrBA,MACAC,EARqB,EAQrBA,OACAkD,EATqB,EASrBA,eACAC,EAVqB,EAUrBA,mBAGEL,EAAgBlD,SAAS/B,IAAUmC,GAQrCnC,GACAyE,GACA3D,GAAY,GACZC,GAAQ,GACRC,GAAS,GACTC,IACCyD,IACAvC,IAED,EAAKpI,SAAS,CACZgC,OAAO,EACP2I,YAAY,IAGdS,EAAc9C,EAAO+C,EAAUpF,EAAMrB,EAAW8F,GAAW,CACzD3D,SAAUnC,EAAYmC,EAAW2D,EAAY,KAC7C1D,KAAMpC,EAAYoC,EAAO0D,EAAY,KACrCzD,MAAOrC,EAAYqC,EAAQyD,EAAY,KACvCxD,SAAUtC,EAAYsC,EAAWwD,EAAY,OAE/Ca,IACApD,KAGEuC,GAAY3D,GAAY,GAAKC,GAAQ,GAAKC,GAAS,GAAKC,IAAayD,GAAcvC,IACrF,EAAKpI,SAAS,CACZgC,OAAO,EACP2I,YAAY,IAGdW,EACEhD,EACA+C,EACApF,EACArB,EAAW8F,GACX,CACE3D,SAAUnC,EAAYmC,EAAW2D,EAAY,KAC7C1D,KAAMpC,EAAYoC,EAAO0D,EAAY,KACrCzD,MAAOrC,EAAYqC,EAAQyD,EAAY,KACvCxD,SAAUtC,EAAYsC,EAAWwD,EAAY,MAE/C,EAAKO,UAEPM,IACApD,KAEF,EAAKnI,SAAS,CACZgC,OAAO,KAtDP,EAAKhC,SAAS,CACZ2K,YAAY,K,EAyDlBa,oBAAsB,SAAC3L,GAAO,IACpB4L,EAAqB,EAAKjL,MAA1BiL,iBACAjJ,EAAU3C,EAAES,OAAZkC,MAFmB,EAGNiJ,EAAiBC,QAAO,SAAC/E,GAAD,OAAOA,EAAEV,OAASzD,KAAxDmJ,EAHoB,oBAIvBA,GAAcnJ,EAChB,EAAKxC,SAAS,CACZiG,KAAMzD,EACNuE,SAAU4E,EAAWvF,WAAWW,SAChCC,KAAM2E,EAAWvF,WAAWY,KAC5BC,MAAO0E,EAAWvF,WAAWa,MAC7BC,SAAUyE,EAAWvF,WAAWc,WAIpC,EAAKlH,SAAS,CACZiG,KAAM,GACNc,SAAU,EACVC,KAAM,EACNC,MAAO,EACPC,SAAU,K,EAId0E,iBAAmB,WACjB,EAAK5L,UAAS,SAACC,GAAD,MAAgB,CAC5B2K,cAAe3K,EAAU2K,aACzBG,kBAAkB,O,EAItBc,oBAAsB,WAAO,IACnBhB,EAAgB,EAAKzL,MAArByL,YACR,GAAIA,EAAYhH,OAAS,EACvB,EAAK7D,SAAS,CAAE8K,aAAa,QAD/B,CAKA,IAAM/L,EAAYC,OAAOC,SAASC,OAC5B4M,EAAK9M,OAAO+M,UAAUC,MAE5BjJ,IAAM,CACJwC,IAAI,GAAD,OAAKxG,EAAL,eACHyG,OAAQ,OACRrC,KAAM,CACJ8I,OAAQpB,EACRiB,QAGD7I,MAAK,SAACE,GACL,EAAKnD,UAAS,SAACC,GAAD,MAAgB,CAC5B8K,kBAAkB,EAClBD,aAAa,EACbE,SAAU7H,EAAKA,KAAK+I,SAASxF,KAAI,SAACyF,EAAGxF,GAAJ,MAAW,CAC1CpF,IAAKoF,EACLV,KAAMkG,EAAEC,cAAgBD,EAAEE,cAAgB,UAC1CC,IAAKH,EAAEI,gBACPnG,WAAY,CACVW,UAAWoF,EAAEK,WAAWC,eAAiB,EACzCzF,MAAOmF,EAAEK,WAAWE,UAAY,EAChCzF,OAAQkF,EAAEK,WAAWG,oBAAsB,EAC3CzF,UAAWiF,EAAEK,WAAW,sBAAwB,cAKvDpJ,OAAM,SAACvD,GACN+M,QAAQC,IAAIhN,GACZ,EAAKG,SAAS,CACZ+K,kBAAkB,S,EAK1B+B,iBAAmB,SAACjN,GAClBA,EAAEgG,iBACF,IAAMtE,GAAM1B,EAAES,OAAO+B,aAAa,WAFV,EAGP,EAAKjD,MAAM4L,SACEU,QAAO,SAACS,GAAD,OAAO5K,IAAO4K,EAAE5K,MAA9CwL,EAJiB,oBAKxB,EAAK/M,SAAS,CACZiG,KAAM8G,EAAW9G,KACjBc,UAAWgG,EAAW3G,WAAWW,SACjCC,MAAO+F,EAAW3G,WAAWY,KAC7BC,OAAQ8F,EAAW3G,WAAWa,MAC9BC,UAAW6F,EAAW3G,WAAWc,SACjC0D,cAAc,K,uDAIR,IAAD,SACqCrK,KAAKC,MAAzC2H,EADD,EACCA,MAAOsD,EADR,EACQA,iBAAkBrD,EAD1B,EAC0BA,OAD1B,EAgBH7H,KAAKnB,MAbP6G,EAHK,EAGLA,KACAyE,EAJK,EAILA,SACA3D,EALK,EAKLA,SACAC,EANK,EAMLA,KACAC,EAPK,EAOLA,MACAC,EARK,EAQLA,SACAlF,EATK,EASLA,MACA2I,EAVK,EAULA,WACAC,EAXK,EAWLA,aACAC,EAZK,EAYLA,YACAC,EAbK,EAaLA,YACAC,EAdK,EAcLA,iBACAC,EAfK,EAeLA,SAEIgC,EACJhC,EAASnH,QACTmH,EAAStE,KAAI,SAACuG,GAAD,OACX,yBAAK1C,IAAG,UAAK0C,EAAE/F,SAAP,aAAoB+F,EAAEhH,MAAQrF,UAAU,eAC9C,yBAAKA,UAAU,WACb,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,sCAAsCqM,EAAEhH,MACrD,uBAAGrF,UAAU,aACX,2CAAiBqM,EAAE7G,WAAWW,SAA9B,KACA,uCAAakG,EAAE7G,WAAWY,KAA1B,KACA,wCAAciG,EAAE7G,WAAWa,MAA3B,KACA,2CAAiBgG,EAAE7G,WAAWc,SAA9B,OAGJ,yBAAKtG,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKG,IAAG,UAAKkM,EAAEX,KAAOrL,IAAKgM,EAAEhH,QAE/B,uBACE/E,KAAK,SACLN,UAAU,iBACVsM,UAASD,EAAE1L,GACXT,QAAS,EAAKgM,iBACdrI,KAAK,KALP,aAaV,OACE,yBAAK7D,UAAU,SACb,yBAAKA,UAAU,oBAAf,KACA,yBAAKA,UAAU,cACb,4BAAQA,UAAU,mBAChB,uBAAGA,UAAU,gCAAgCwH,EAAS,OAAS,UAA/D,eACA,4BAAQlH,KAAK,SAASN,UAAU,SAASO,aAAW,QAAQL,QAASqH,MAErEyC,GACA,6BAAShK,UAAU,cACjB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WACb,2BAAO+B,QAAQ,kBAAkB/B,UAAU,sCAA3C,sBAEE,2BACEW,GAAG,kBACHX,UAAU,QACVM,KAAK,OACL2B,SAAUtC,KAAK6B,kBACfI,MAAOyD,KAGV0E,GACC,uBAAG/J,UAAU,mBAAb,4DAKJ,6BACA,yBAAKA,UAAU,WACb,2BACE+B,QAAQ,sBACR/B,UAAU,sCAFZ,sBAKE,2BACEW,GAAG,sBACHX,UAAU,QACVM,KAAK,SACLiM,IAAI,IACJtK,SAAUtC,KAAK6B,kBACfI,MAAOuE,MAIb,yBAAKnG,UAAU,WACb,2BAAO+B,QAAQ,kBAAkB/B,UAAU,sCAA3C,kBAEE,2BACEW,GAAG,kBACHX,UAAU,QACVM,KAAK,SACLiM,IAAI,IACJtK,SAAUtC,KAAK6B,kBACfI,MAAOwE,MAIb,yBAAKpG,UAAU,WACb,2BACE+B,QAAQ,mBACR/B,UAAU,sCAFZ,mBAKE,2BACEW,GAAG,mBACHX,UAAU,QACVM,KAAK,SACLiM,IAAI,IACJtK,SAAUtC,KAAK6B,kBACfI,MAAOyE,MAIb,yBAAKrG,UAAU,WACb,2BACE+B,QAAQ,sBACR/B,UAAU,sCAFZ,2BAKE,2BACEW,GAAG,sBACHX,UAAU,QACVM,KAAK,SACLiM,IAAI,IACJtK,SAAUtC,KAAK6B,kBACfI,MAAO0E,MAIb,6BACA,yBAAKtG,UAAU,WACb,2BACE+B,QAAQ,sBACR/B,UAAU,sCAFZ,mBAKE,2BACEW,GAAG,sBACHX,UAAU,QACVM,KAAK,SACLiM,IAAI,IACJtK,SAAUtC,KAAK6B,kBACfI,MAAOkI,OAKf,yBAAK9J,UAAU,kBACb,yBAAKA,UAAU,WACb,2BACE+B,QAAQ,sBACR/B,UAAU,sCAFZ,wBAKE,yBAAKA,UAAU,UACb,4BAAQiC,SAAUtC,KAAKiL,oBAAqBjK,GAAG,uBAC7C,4BAAQiB,MAAO,MAAf,wBACGiJ,EAAiB5H,QAClB4H,EAAiB/E,KAAI,SAACC,GAAD,OACnB,4BAAQ4D,IAAG,UAAK5D,EAAEV,KAAP,YAAeU,EAAEO,UAAY1E,MAAOmE,EAAEV,MAC9CU,EAAEV,aAOjB,yBAAKrF,UAAU,WACb,uBAAGA,UAAU,sCAAb,gCAGA,6BACA,4BACEW,GAAG,oBACHX,UAAU,oBACVM,KAAK,SACLJ,QAASP,KAAKqL,kBAJhB,kBAWN,uBAAGhL,UAAU,0BACX,0BAAMA,UAAU,4BAAhB,mCACA,6BAFF,oBAGgBgE,EAAYmC,EAAW2D,EAAY,KAHnD,OAIE,6BAJF,gBAKY9F,EAAYoC,EAAO0D,EAAY,KAL3C,OAME,6BANF,iBAOa9F,EAAYqC,EAAQyD,EAAY,KAP7C,OAQE,6BARF,oBASgB9F,EAAYsC,EAAWwD,EAAY,KATnD,UAWC1I,GAAS,uBAAGpB,UAAU,mBAAb,6BACV,4BAAQM,KAAK,SAASN,UAAU,oBAAoBE,QAASqH,GAA7D,QAGA,4BAAQjH,KAAK,SAASN,UAAU,iBAAiBE,QAASP,KAAK4K,kBAA/D,SAKHP,GACC,6BAAShK,UAAU,cACjB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WACb,2BAAOA,UAAU,qCAAqC+B,QAAQ,kBAA9D,qBAEE,2BACEpB,GAAG,iBACHX,UAAU,QACVM,KAAK,OACL2B,SAAUtC,KAAK6B,kBACfI,MAAOqI,KAGVC,GACC,oCACE,uBAAGlK,UAAU,mBAAb,gEAGA,8BAGHmK,GACC,oCACE,uBAAGnK,UAAU,mBAAb,kCACA,8BAGJ,4BACEA,UAAU,oBACVM,KAAK,SACLJ,QAASP,KAAKsL,qBAHhB,UAOA,4BACEjL,UAAU,iBACVM,KAAK,SACLJ,QAASP,KAAKqL,kBAHhB,WAUN,yBAAKhL,UAAU,kBAAkBoM,GAAsC,a,GAlevDvL,IAAMC,WA+fpC+I,EAAgB9I,aAAe,CAC7BsE,KAAM,GACNyE,SAAU,EACVtC,QAAQ,EACRhC,WAAY,CACVW,SAAU,EACVC,KAAM,EACNC,MAAO,EACPC,SAAU,IAId,IAeerF,gBAfS,SAACzC,GAEvB,MAAO,CACLqM,iBAF2BrM,EAArBqM,qBAMiB,SAAC3J,GAAD,MAAe,CACxCsJ,cAAe,SAAC9C,EAAO+C,EAAUpF,EAAMyE,EAAUtE,GAAlC,OACbtE,EZrZyB,SAACwG,EAAO+C,EAAUpF,EAAMyE,EAAUtE,GAC7D,MAAO,CACLlF,KAjI0B,iBAkI1BgC,QAAS,CACPoF,QACA+C,WACApF,OACAyE,WACAtE,eY6YOgH,CAAoB9E,EAAO+C,EAAUpF,EAAMyE,EAAUtE,KAChEkF,eAAgB,SAAChD,EAAO+C,EAAUpF,EAAMyE,EAAUtE,EAAY6E,GAA9C,OACdnJ,EZ1Y0B,SAACwG,EAAO+C,EAAUpF,EAAMyE,EAAUtE,EAAY6E,GAC1E,MAAO,CACL/J,KA5I2B,kBA6I3BgC,QAAS,CACPoF,QACA+C,WACApF,OACAyE,WACAtE,aACA6E,aYiYOoC,CAAqB/E,EAAO+C,EAAUpF,EAAMyE,EAAUtE,EAAY6E,KAC7EM,kBAAmB,kBAAMzJ,EZvalB,CACLZ,KAlH8B,2BY2hBnBW,CAA6C4I,GC1gB7C6C,GAzBC,SAAC,GAAD,IAAG/I,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUG,EAApB,EAAoBA,MAApB,OACd,yBAAK/D,UAAU,SACb,yBAAKA,UAAU,oBAAf,KACA,yBAAKA,UAAU,cACb,4BAAQA,UAAU,mBAChB,wBAAIA,UAAU,aAAa2D,IAG7B,iCACE,uBAAG3D,UAAU,aAAa4D,GAC1B,6BACA,4BAAQtD,KAAK,SAASN,UAAU,iBAAiBE,QAAS6D,GAA1D,UCAF4I,G,4MACJnO,MAAQ,CACNuG,iBAAiB,EACjBiD,eAAe,EACf4E,mBAAmB,G,EAGrB5H,mBAAqB,SAAC/F,GACpBA,EAAEgG,iBAEF,EAAK7F,SAAS,CACZ2F,iBAAiB,K,EAIrBkD,iBAAmB,SAAChJ,GAClBA,EAAEgG,iBACF,EAAK7F,SAAS,CACZ4I,eAAe,K,EAInB9C,iBAAmB,WACjB,EAAK9F,SAAS,CACZ4I,eAAe,K,EAInB7C,kBAAoB,SAACC,GAAU,IAAD,EASxB,EAAKxF,MAPP8H,EAF0B,EAE1BA,MACA+C,EAH0B,EAG1BA,SACApF,EAJ0B,EAI1BA,KACAwH,EAL0B,EAK1BA,iBACAlC,EAN0B,EAM1BA,kBACAmC,EAP0B,EAO1BA,2BACAC,EAR0B,EAQ1BA,aAGF,GAAI3H,GAAQ2H,EAKV,OAJAD,EAA2BzH,QAC3B,EAAKjG,SAAS,CACZ2F,iBAAiB,IAKjBK,IACFyH,EAAiBnF,EAAO+C,EAAUpF,GAClCsF,KAEF,EAAKvL,SAAS,CACZ2F,iBAAiB,K,EAIrBiI,yBAA2B,SAAC/N,GAAO,IAAD,EAC2B,EAAKW,MAAxDyF,EADwB,EACxBA,KAAMG,EADkB,EAClBA,WAAYyH,EADM,EACNA,mBAAoBnD,EADd,EACcA,SAC9C7K,EAAEgG,iBACFgI,EAAmB5H,EAAM,CACvBc,SAAUnC,EAAkC,IAAtBwB,EAAWW,SAAkB2D,GACnD1D,KAAMpC,EAA8B,IAAlBwB,EAAWY,KAAc0D,GAC3CzD,MAAOrC,EAA+B,IAAnBwB,EAAWa,MAAeyD,GAC7CxD,SAAUtC,EAAkC,IAAtBwB,EAAWc,SAAkBwD,KAErD,EAAK1K,SAAS,CACZwN,mBAAmB,K,uDAIb,IAAD,SAUHjN,KAAKC,MARPyF,EAFK,EAELA,KACAG,EAHK,EAGLA,WACAsE,EAJK,EAILA,SACAQ,EALK,EAKLA,gBACA5C,EANK,EAMLA,MACA+C,EAPK,EAOLA,SACAI,EARK,EAQLA,iBACAkC,EATK,EASLA,aATK,EAWuDpN,KAAKnB,MAA3DuG,EAXD,EAWCA,gBAAiBiD,EAXlB,EAWkBA,cAAe4E,EAXjC,EAWiCA,kBAExC,OACE,oCACG7H,GACC,kBAAC,EAAD,CACEpB,MAAM,gBACNC,SAAQ,wDAAmDyB,EAAnD,KACRtB,MAAOpE,KAAKwF,oBAGf6C,GACC,kBAAC,GAAD,CACE3C,KAAMA,EACNyE,SAAUA,EACVtE,WAAYA,EACZ+B,MAAO5H,KAAKuF,iBACZoF,gBAAiBA,EACjB5C,MAAOA,EACP+C,SAAUA,EACVjD,QAAM,IAGToF,GACC,kBAAC,GAAD,CACEjJ,MAAM,wBACNC,SAAS,oDACTG,MAAO,kBAAM,EAAK3E,SAAS,CAAEwN,mBAAmB,OAGpD,yBAAK5M,UAAU,wDACb,wBAAIA,UAAU,mBAAmBqF,IAC/B0H,GAAgB,wBAAI/M,UAAU,oCAAd,UAAqD8J,EAArD,MAClB,8BACIiD,GACA,uBAAGlJ,KAAK,IAAI3D,QAASP,KAAKsI,kBAA1B,SAIA4C,EAAiB/E,KAAI,SAACC,GAAD,OAAOA,EAAEV,QAAM+B,SAAS/B,IAC7C,uBAAGxB,KAAK,IAAI3D,QAASP,KAAKqN,0BAA1B,YAIF,uBAAGnJ,KAAK,IAAI3D,QAASP,KAAKqF,mBAAoBhF,UAAU,mBAAxD,WAIF,4BAAQA,UAAU,aAChB,2BACE,0CAEE,+BAAKgE,EAAWwB,EAAWW,UAA3B,MAEF,sCAEE,+BAAKnC,EAAWwB,EAAWY,MAA3B,MAEF,uCAEE,+BAAKpC,EAAWwB,EAAWa,OAA3B,MAEF,sCAEE,+BAAKrC,EAAWwB,EAAWc,oB,GAjJXzF,IAAMC,WA+KtC6L,GAAkB5L,aAAe,CAC/B+I,SAAU,EACVtE,WAAY,CACVW,SAAU,EACVC,KAAM,EACNC,MAAO,EACPC,SAAU,GAEZyG,cAAc,GAGhB,IAee9L,gBAfS,SAACzC,GAEvB,MAAO,CACLqM,iBAF2BrM,EAArBqM,qBAMiB,SAAC3J,GAAD,MAAe,CACxC2L,iBAAkB,SAACnF,EAAO+C,EAAUpF,GAAlB,OAChBnE,EdtH4B,SAACwG,EAAO+C,EAAUpF,GAChD,MAAO,CACL/E,KAhF6B,oBAiF7BgC,QAAS,CACPoF,QACA+C,WACApF,ScgHO6H,CAAuBxF,EAAO+C,EAAUpF,KACnDsF,kBAAmB,kBAAMzJ,EdtFlB,CACLZ,KAlH8B,wBcwMhCwM,2BAA4B,SAACzH,GAAD,OAAUnE,EdlCE,SAACmE,GACzC,MAAO,CACL/E,KAjKwC,+BAkKxCgC,QAAS,CACP+C,Sc8B2C8H,CAAiC9H,KAChF4H,mBAAoB,SAAC5H,EAAMG,GAAP,OAAsBtE,Ed1BV,SAACmE,EAAMG,GACvC,MAAO,CACLlF,KA5K+B,sBA6K/BgC,QAAS,CACP+C,OACAG,ecqB+C4H,CAAyB/H,EAAMG,QAGrEvE,CAA6C0L,ICzL7C1L,gBATS,SAACzC,GAEvB,MAAO,CAAEqM,iBADoBrM,EAArBqM,oBAQK5J,EAxBU,SAAC,GAA0B,IAC5CwE,EAD2C,EAAvBoF,iBACW/E,KAAI,SAACC,GAAD,OACvC,kBAAC,GAAD,CAAmB4D,IAAK5D,EAAEV,KAAMA,KAAMU,EAAEV,KAAMG,WAAYO,EAAEP,WAAYuH,cAAY,OAGtF,OACE,kBAAC,EAAD,CAAMpJ,MAAM,oBAAoBC,SAAS,gDACf,IAAvB6B,EAAYxC,QACX,uBAAGjD,UAAU,wCAAb,sCAEDyF,MCLD4H,G,4MACJ7O,MAAQ,CACN8O,QAAS,CACPC,SAAU,EACVC,WAAY,EACZC,IAAK,EACLC,SAAU,EACVC,IAAK,EACLvM,OAAO,EACPwM,OAAQ,MAEVC,gBAAiB,CACf1H,SAAU,EACVC,KAAM,EACNC,MAAO,EACPjF,OAAO,GAET6H,KAAM,CACJrH,OAAQ,EACRR,OAAO,I,EAIX0M,iBAAmB,SAAC7O,GAClBA,EAAE8O,UACF,EAAK3O,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZiO,QAAQ,eACHjO,EAAUiO,QADR,CAELC,UAAWtO,EAAES,OAAOkC,c,EAK1BoM,mBAAqB,SAAC/O,GACpBA,EAAE8O,UACF,EAAK3O,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZiO,QAAQ,eACHjO,EAAUiO,QADR,CAELE,YAAavO,EAAES,OAAOkC,c,EAK5BqM,gBAAkB,SAAChP,GACjBA,EAAE8O,UACF,EAAK3O,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZiO,QAAQ,eACHjO,EAAUiO,QADR,CAELG,KAAMxO,EAAES,OAAOkC,c,EAKrBsM,qBAAuB,SAACjP,GACtBA,EAAE8O,UACF,EAAK3O,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZiO,QAAQ,eACHjO,EAAUiO,QADR,CAELI,UAAWzO,EAAES,OAAOkC,c,EAK1BuM,gBAAkB,SAAClP,GACjBA,EAAE8O,UACF,IAAMJ,GAAO1O,EAAES,OAAOkC,MAClBwM,EAAQ,KACA,IAART,IACFS,EAAQ,GAEE,IAART,IACFS,EAAQ,GAEV,EAAKhP,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZiO,QAAQ,eACHjO,EAAUiO,QADR,CAELK,IAAKS,U,EAKXC,sBAAwB,WAAO,IACrBf,EAAY,EAAK9O,MAAjB8O,QACR,GAAIgB,OAAOC,OAAOjB,GAASkB,QAAQ,IAAM,EACvC,EAAKpP,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZiO,QAAQ,eACHjO,EAAUiO,QADR,CAELlM,OAAO,EACPwM,OAAQ,gBANd,CAF4B,IAexBA,EADIL,EAA6CD,EAA7CC,SAAUC,EAAmCF,EAAnCE,WAAYC,EAAuBH,EAAvBG,IAAKC,EAAkBJ,EAAlBI,SAAUC,EAAQL,EAARK,IAGjC,IAARA,IACFC,GAAU,KAAOL,EAAW,KAAOC,EAAa,KAAOC,EAAM,KAAOC,GAE1D,IAARC,IACFC,GAAU,KAAOL,EAAW,KAAOC,EAAa,KAAOC,EAAM,GAAKC,GAGpE,EAAKtO,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZiO,QAAQ,eACHjO,EAAUiO,QADR,CAELlM,OAAO,EACPwM,OAAQ5J,EAAW4J,Y,EAKzBa,oBAAsB,SAACxP,GACrBA,EAAE8O,UACF,EAAK3O,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZwO,gBAAgB,eACXxO,EAAUwO,gBADA,CAEb1H,UAAWlH,EAAES,OAAOkC,MACpBR,OAAO,U,EAKbsN,iBAAmB,SAACzP,GAClBA,EAAE8O,UACF,EAAK3O,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZwO,gBAAgB,eACXxO,EAAUwO,gBADA,CAEbzH,MAAOnH,EAAES,OAAOkC,c,EAKtB+M,kBAAoB,SAAC1P,GACnBA,EAAE8O,UACF,EAAK3O,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZwO,gBAAgB,eACXxO,EAAUwO,gBADA,CAEbxH,OAAQpH,EAAES,OAAOkC,MACjBR,OAAO,U,EAKbwN,cAAgB,WAAO,IAAD,EAC8D,EAAKhP,MAA/EiP,EADY,EACZA,aAAcC,EADF,EACEA,SAAUC,EADZ,EACYA,UAAWC,EADvB,EACuBA,SAAUC,EADjC,EACiCA,QAASC,EAD1C,EAC0CA,gBACtD5B,EAAY,EAAK9O,MAAjB8O,QAEF6B,EAAcnL,EAChB6K,GAAgBA,EAAeC,EAAWC,IACzCzB,EAAQM,OAAS,IAAiB,IAAXoB,GACxB,GAEEI,EAAcpL,EAChB6K,GAAgBA,EAAeC,EAAWC,IACzCzB,EAAQM,OAAS,IAAiB,IAAXoB,GACxB,GAEEK,EAAUrL,EACZ8K,GAAYD,EAAeC,EAAWC,IACrCzB,EAAQM,OAAS,IAAiB,IAAXoB,GACxB,GAEEM,EAAUtL,EACZ8K,GAAYD,EAAeC,EAAWC,IACrCzB,EAAQM,OAAS,IAAiB,IAAXoB,GACxB,GAEEO,EAAWvL,EACb+K,GAAaF,EAAeC,EAAWC,IACtCzB,EAAQM,OAAS,IAAiB,IAAXoB,GACxB,GAEEQ,EAAWxL,EACb+K,GAAaF,EAAeC,EAAWC,IACtCzB,EAAQM,OAAS,IAAiB,IAAXoB,GACxB,GAGJC,EAAQ3B,EAAQM,QAChBsB,EAAgB,CACdO,OAAQZ,EACRa,OAAQZ,EACRa,OAAQZ,EACRrG,KAAMyG,EACNxG,KAAMyG,EACNxG,KAAMyG,EACNxG,KAAMyG,EACNxG,KAAMyG,EACNxG,KAAMyG,K,EAIVI,sBAAwB,WAAO,IACrB/B,EAAoB,EAAKrP,MAAzBqP,gBACA1H,EAA0B0H,EAA1B1H,SAAUC,EAAgByH,EAAhBzH,KAAMC,EAAUwH,EAAVxH,MAFI,EAGmB,EAAKzG,MAA5CsP,EAHoB,EAGpBA,gBAAiBW,EAHG,EAGHA,QAASb,EAHN,EAGMA,SAClC,GAAI7I,EAAW,GAAKC,GAAQ,GAAKC,EAAQ,EAuCvC,OApBA6I,EAAgB,CACdO,OAAQtJ,EACRuJ,OAAQtJ,EACRuJ,OAAQtJ,EACRqC,KAtBkB1E,EAChBmC,GAAYA,EAAWC,EAAOC,IAAWwJ,EAAU,IAAiB,IAAXb,GAAmB,GAsB9ErG,KApBkB3E,EAChBmC,GAAYA,EAAWC,EAAOC,IAAWwJ,EAAU,IAAiB,IAAXb,GAAmB,GAoB9EpG,KAlBc5E,EACZoC,GAAQD,EAAWC,EAAOC,IAAWwJ,EAAU,IAAiB,IAAXb,GAAmB,GAkB1EnG,KAhBc7E,EACZoC,GAAQD,EAAWC,EAAOC,IAAWwJ,EAAU,IAAiB,IAAXb,GAAmB,GAgB1ElG,KAde9E,EACbqC,GAASF,EAAWC,EAAOC,IAAWwJ,EAAU,IAAiB,IAAXb,GAAmB,GAc3EjG,KAZe/E,EACbqC,GAASF,EAAWC,EAAOC,IAAWwJ,EAAU,IAAiB,IAAXb,GAAmB,UAa7E,EAAK5P,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZwO,gBAAiB,CACf1H,SAAU,EACVC,KAAM,EACNC,MAAO,EACPjF,OAAO,QAKb,EAAKhC,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZwO,gBAAgB,eACXxO,EAAUwO,gBADA,CAEbzM,OAAO,U,EAKb0O,iBAAmB,SAAC7Q,GAClBA,EAAE8O,UACF,EAAK3O,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZ4J,KAAM,CACJrH,OAAQ3C,EAAES,OAAOkC,MACjBR,OAAO,S,EAKb2O,eAAiB,WAAO,IACd9G,EAAS,EAAKzK,MAAdyK,MACa,KAAhBA,EAAKrH,QAWVoO,EADqB,EAAKpQ,MAAlBoQ,UACC/G,EAAKrH,OACd,EAAKxC,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZ4J,KAAM,CACJrH,OAAQ,EACRR,OAAO,SAfT,EAAKhC,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZ4J,KAAK,eACA5J,EAAU4J,KADX,CAEF7H,OAAO,U,uDAgBL,IAAD,EACoCzB,KAAKnB,MAAxC8O,EADD,EACCA,QAASO,EADV,EACUA,gBAAiB5E,EAD3B,EAC2BA,KAC1BsE,EAAsED,EAAtEC,SAAUC,EAA4DF,EAA5DE,WAAYC,EAAgDH,EAAhDG,IAAKC,EAA2CJ,EAA3CI,SAAUC,EAAiCL,EAAjCK,IAAYsC,EAAqB3C,EAA5BlM,MAAiBwM,EAAWN,EAAXM,OAC3DzH,EAA4C0H,EAA5C1H,SAAUC,EAAkCyH,EAAlCzH,KAAMC,EAA4BwH,EAA5BxH,MAAc6J,EAAcrC,EAArBzM,MACvBQ,EAA4BqH,EAA5BrH,MAAcuO,EAAclH,EAArB7H,MAJR,EAK0DzB,KAAKC,MAA9DiQ,EALD,EAKCA,QAAShB,EALV,EAKUA,aAAcC,EALxB,EAKwBA,SAAUC,EALlC,EAKkCA,UAAWC,EAL7C,EAK6CA,SAE9CG,EAAcnL,EAChB6K,GAAgBA,EAAeC,EAAWC,IAAec,EAAU,IAAiB,IAAXb,GACzE,GAEEI,EAAcpL,EAChB6K,GAAgBA,EAAeC,EAAWC,IAAec,EAAU,IAAiB,IAAXb,GACzE,GAEEK,EAAUrL,EACZ8K,GAAYD,EAAeC,EAAWC,IAAec,EAAU,IAAiB,IAAXb,GAAmB,GAEtFM,EAAUtL,EACZ8K,GAAYD,EAAeC,EAAWC,IAAec,EAAU,IAAiB,IAAXb,GAAmB,GAEtFO,EAAWvL,EACb+K,GAAaF,EAAeC,EAAWC,IAAec,EAAU,IAAiB,IAAXb,GAAmB,GAEvFQ,EAAWxL,EACb+K,GAAaF,EAAeC,EAAWC,IAAec,EAAU,IAAiB,IAAXb,GAAmB,GAG7F,OACE,oCACE,kBAAC,EAAD,CACErL,MAAM,gBACNC,SAAS,8HAET,yBAAK5D,UAAU,OACb,wBAAIA,UAAU,+CAAd,4BACwB6P,EADxB,UAGA,wBAAI7P,UAAU,+CAAd,qCACiC6O,EADjC,cACmDC,EADnD,cACiEC,IAEjE,wBAAI/O,UAAU,+CAAd,mBAEiB,IAAdgP,GAAmB,gBACN,IAAbA,GAAkB,eACL,IAAbA,GAAkB,eAJrB,uBAME,6BACA,6BAPF,WAQOa,EAAU,IAAiB,IAAXb,EARvB,YAQyCa,EAAU,IAAiB,IAAXb,GARzD,QASE,6BACA,6BACCG,IAAgBC,EAAhB,YACQA,EADR,kBAEQD,EAFR,YAEuBC,EAAc,EAFrC,MAE4C,IAb/C,WAeE,6BACCC,IAAYC,EAAZ,YAA2BA,EAA3B,kBAA8CD,EAA9C,YAAyDC,EAAU,EAAnE,MAhBH,QAiBE,6BACCC,IAAaC,EAAb,YAA6BA,EAA7B,kBAAiDD,EAAjD,YAA6DC,EAAW,EAAxE,MAA+E,IAlBlF,kBAsBF,6BACA,yBAAKxP,UAAU,OACb,wBAAIA,UAAU,+CAAd,sBACA,uBAAGA,UAAU,YAAb,oEAGA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,WACb,2BAAO+B,QAAQ,YAAY/B,UAAU,sCAArC,oBAEE,2BACEW,GAAG,YACHX,UAAU,QACVM,KAAK,SACLiM,IAAI,IACJtK,SAAUtC,KAAKmO,iBACflM,MAAO2L,MAIb,yBAAKvN,UAAU,WACb,2BAAO+B,QAAQ,cAAc/B,UAAU,sCAAvC,sBAEE,2BACEW,GAAG,cACHX,UAAU,QACVM,KAAK,SACLiM,IAAI,IACJtK,SAAUtC,KAAKqO,mBACfpM,MAAO4L,MAIb,yBAAKxN,UAAU,WACb,2BAAO+B,QAAQ,WAAW/B,UAAU,sCAApC,MAEE,2BACEW,GAAG,WACHX,UAAU,QACVM,KAAK,SACLiM,IAAI,IACJtK,SAAUtC,KAAKsO,gBACfrM,MAAO6L,OAKf,yBAAKzN,UAAU,yBACb,yBAAKA,UAAU,WACb,2BAAO+B,QAAQ,oBAAoB/B,UAAU,sCAA7C,oBAEE,yBAAKA,UAAU,UACb,4BACEiC,SAAUtC,KAAKuO,qBACftM,MAAO8L,EACP/M,GAAG,qBAEH,4BAAQiB,MAAM,KAAd,yBACA,4BAAQA,MAAM,OAAd,eACA,4BAAQA,MAAM,QAAd,UACA,4BAAQA,MAAM,QAAd,UACA,4BAAQA,MAAM,QAAd,OACA,4BAAQA,MAAM,QAAd,kBAKR,6BACA,yBAAK5B,UAAU,WACb,2BAAO+B,QAAQ,eAAe/B,UAAU,mBACtC,2BACEW,GAAG,eACHL,KAAK,QACL+E,KAAK,QACLzD,MAAM,IACNwO,QAAiB,IAARzC,EACT1L,SAAUtC,KAAKwO,kBAPnB,SAWA,2BAAOpM,QAAQ,aAAa/B,UAAU,mBACpC,2BACEW,GAAG,aACHL,KAAK,QACL+E,KAAK,MACLzD,MAAM,IACNwO,QAAiB,IAARzC,EACT1L,SAAUtC,KAAKwO,kBAPnB,UAcL8B,GACC,uBAAGjQ,UAAU,6BAAb,uCAED4N,GAAU,uBAAG5N,UAAU,2BAAb,eAAoD4N,GAC/D,6BACA,4BACEtN,KAAK,SACLN,UAAU,oBACVE,QAASP,KAAK0O,uBAHhB,aAOCT,GACC,4BAAQtN,KAAK,SAASN,UAAU,iBAAiBE,QAASP,KAAKiP,eAA/D,SAKJ,6BACA,yBAAK5O,UAAU,OACb,wBAAIA,UAAU,+CAAd,mCAGA,uBAAGA,UAAU,YAAb,yDACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,WACb,2BAAO+B,QAAQ,WAAW/B,UAAU,sCAApC,WAEE,2BACEW,GAAG,WACHX,UAAU,QACVM,KAAK,SACLiM,IAAI,IACJ3K,MAAOuE,EACPlE,SAAUtC,KAAK8O,wBAIrB,yBAAKzO,UAAU,WACb,2BAAO+B,QAAQ,OAAO/B,UAAU,sCAAhC,OAEE,2BACEW,GAAG,OACHX,UAAU,QACVM,KAAK,SACLiM,IAAI,IACJ3K,MAAOwE,EACPnE,SAAUtC,KAAK+O,qBAIrB,yBAAK1O,UAAU,WACb,2BAAO+B,QAAQ,QAAQ/B,UAAU,sCAAjC,gBAEE,2BACEW,GAAG,QACHX,UAAU,QACVM,KAAK,SACLiM,IAAI,IACJ3K,MAAOyE,EACPpE,SAAUtC,KAAKgP,wBAMxBuB,GACC,uBAAGlQ,UAAU,6BAAb,kDAIDmG,EAAW,GAAKC,GAAQ,GAAKC,EAAQ,GACpC,uBAAGrG,UAAU,2BAAb,mCAEOmG,EAFP,YAEmBC,EAFnB,YAE2BC,IAG7B,6BACA,4BAAQ/F,KAAK,SAASN,UAAU,iBAAiBE,QAASP,KAAKiQ,uBAA/D,SAKF,6BAEA,yBAAK5P,UAAU,OACb,wBAAIA,UAAU,+CAAd,sBACA,uBAAGA,UAAU,YAAb,4CAEA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,WACb,2BAAO+B,QAAQ,OAAO/B,UAAU,sCAAhC,YAEE,yBAAKA,UAAU,UACb,4BAAQW,GAAG,OAAOsB,SAAUtC,KAAKmQ,kBAC/B,4BAAQlO,MAAM,MAAd,oBACA,4BAAQA,MAAM,MAAd,gBACA,4BAAQA,MAAM,KAAd,eACA,4BAAQA,MAAM,KAAd,qBAOXuO,GACC,uBAAGnQ,UAAU,6BAAb,kDAID4B,GAAS,GACR,uBAAG5B,UAAU,2BAAb,oBAEc,IAAX4B,GAAgB,gBACN,IAAVA,GAAe,eACL,IAAVA,GAAe,gBAGpB,6BACA,4BAAQtB,KAAK,SAASN,UAAU,iBAAiBE,QAASP,KAAKoQ,gBAA/D,e,GA3jBgBlP,IAAMC,WAimBnBG,gBA5BS,SAACzC,GAAW,IAAD,EACaA,EAAM6J,OACpD,MAAO,CACLwH,QAH+B,EACzB7G,IAGN6F,aAJ+B,EACpBY,OAIXX,SAL+B,EACZY,OAKnBX,UAN+B,EACJY,OAM3BX,SAP+B,EACI/F,SAUZ,SAAC/H,GAAD,MAAe,CACxC+N,QAAS,SAACoB,GAAD,OAAenP,EhBlkBH,SAACmP,GACtB,MAAO,CACL/P,KA1BoB,WA2BpBgC,QAAS,CACP+N,cgB8jB6BC,CAAcD,KAC/CnB,gBAAiB,SAACqB,GAAD,OAAgBrP,EhB1jBJ,SAACqP,GAC9B,MAAO,CACLjQ,KAlC4B,mBAmC5BgC,QAAS,CACPiO,egBsjBsCC,CAAsBD,KAChEP,SAAU,SAAC/G,GAAD,OAAU/H,EhBljBE,SAAC+H,GACvB,MAAO,CACL3I,KA1CqB,YA2CrBgC,QAAS,CACP2G,SgB8iByBwH,CAAexH,QAc/BhI,CAA6CoM,I,uCCrmBtDqD,G,4MACJlS,MAAQ,CACN6G,KAAM,KACNjE,OAAO,EACPmE,KAAM,GACNoL,YAAY,EACZrQ,KAAM,GACNkF,YAAY,EACZC,aAAa,G,EAGfmL,MAAS,WAAO,IAAD,EACW,EAAKhR,MAArB8H,EADK,EACLA,MADK,IACET,KACI6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+G,KAE1C,OAJa,oBAIF+B,MAAM3D,KAAI,SAAC4D,GACpB,MAAM,GAAN,OACoD,IAAlD,IAAI9D,KAAK8D,EAAEnE,MAAMS,WAAWC,WAAWhD,OACnC,IAAI2C,KAAK8D,EAAEnE,MAAMS,WADrB,WAEQ,IAAIJ,KAAK8D,EAAEnE,MAAMS,YAH3B,YAKsD,IAApD,IAAIJ,KAAK8D,EAAEnE,MAAMW,aAAaD,WAAWhD,OACrC,IAAI2C,KAAK8D,EAAEnE,MAAMW,aADrB,WAEQ,IAAIN,KAAK8D,EAAEnE,MAAMW,kBAZtB,G,EAiBT2K,MAAS,WAAO,IAAD,EACW,EAAKjR,MAArBqH,EADK,EACLA,KAAMS,EADD,EACCA,MADD,EAECT,EAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+G,KAE1C,OAJa,oBAIF+B,MAAM3D,KAAI,SAAC4D,GAAD,OAAOA,EAAEpJ,QAJvB,G,EAOT5B,kBAAoB,WACLC,SAASiI,eAAe,iBAChCC,UAAUC,IAAI,gB,EAGrBhI,qBAAuB,WACRH,SAASiI,eAAe,iBAChCC,UAAUE,OAAO,gB,EAGxB+J,iBAAmB,SAAC7R,GAClB,EAAKG,SAAS,CACZiG,KAAMpG,EAAES,OAAOkC,MACfR,OAAO,K,EAIX2P,iBAAmB,SAACxL,GAAU,IACpBiC,EAAW,EAAK5H,MAAhB4H,OACHjC,KAGD,EAAKqL,MAAMxJ,SAAS7B,IAAUiC,EAMlC,EAAKpI,SAAS,CACZmG,OACAnE,OAAO,EACPuP,YAAY,IARZ,EAAKvR,SAAS,CACZuR,YAAY,M,EAWlBK,iBAAmB,SAAC/R,GAClB,EAAKG,SAAS,CACZkB,KAAMrB,EAAES,OAAOkC,S,EAInBqP,eAAiB,WAAO,IAAD,EACiC,EAAKzS,MAAnD+G,EADa,EACbA,KAAMF,EADO,EACPA,KAAM/E,EADC,EACDA,KAAMkF,EADL,EACKA,WAAYC,EADjB,EACiBA,YADjB,EAYjB,EAAK7F,MATP2H,EAHmB,EAGnBA,MACA2J,EAJmB,EAInBA,YACMC,EALa,EAKnB5L,KACM8E,EANa,EAMnBhF,KACM+L,EAPa,EAOnB9Q,KACA2G,EARmB,EAQnBA,KACAS,EATmB,EASnBA,MACAF,EAVmB,EAUnBA,OACA6J,EAXmB,EAWnBA,SAEIC,EAAQ/L,EAAK7D,MAAM,KACzB,GAAqB,IAAjB4P,EAAMrO,QAAiBuE,EAA3B,CAMA,IAAM+J,EAAa,IAAI3L,KAAKqB,EAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+G,KAAO,GAAGjB,MAGlE,GAFA8K,EAAWC,SAASF,EAAM,IAC1BC,EAAWE,WAAWH,EAAM,MAEzB9J,GAAWjC,GAASF,GAAS/E,GAAQiR,IAAeJ,KACnD3J,GAAYjC,GAASF,GAAS/E,GAQlC,OAAIkH,GACF,EAAKpI,SAAS,CACZuR,YAAY,EACZvP,OAAO,EACPoE,YAAY,EACZC,aAAa,IAEf4L,EACE3J,EACA,CACEpH,KAAMA,GAAQ8Q,EACd/L,KAAMA,GAAQgF,EACd9E,KAAMA,EAAOgM,EAAaJ,GAE5BC,QAEF7J,UAIG,EAAKqJ,MAAMxJ,SAAS7B,KACvB,EAAKnG,SAAS,CACZuR,YAAY,EACZvP,OAAO,EACPoE,YAAY,EACZC,aAAa,IAEfyL,EAAYxJ,EAAO,CACjBpH,OACA+E,OACAE,KAAMgM,EACN/L,WAAYA,GAAc,GAC1BC,YAAaA,GAAe,KAE9B8B,MAxCA,EAAKnI,SAAS,CACZgC,OAAO,SAbT,EAAKhC,SAAS,CACZgC,OAAO,K,EAuDbwJ,oBAAsB,SAAC3L,GAAO,IAAD,EACJ,EAAKW,MAApBgK,WACkBkB,QAAO,SAACpB,GAAD,OAAOA,EAAErE,OAASpG,EAAES,OAAOkC,SAArD8P,EAFoB,oBAGtBzS,EAAES,OAAOkC,OAAU8P,EASpBzS,EAAES,OAAOkC,OACX,EAAKxC,SAAS,CACZiG,KAAMqM,EAAKrM,KACXG,WAAYkM,EAAKlM,WACjBC,YAAaiM,EAAKjM,cAZpB,EAAKrG,SAAS,CACZiG,KAAM,GACNG,YAAY,EACZC,aAAa,K,uDAcT,IAAD,EAC4D9F,KAAKnB,MAAhE6G,EADD,EACCA,KAAME,EADP,EACOA,KAAMnE,EADb,EACaA,MAAOuP,EADpB,EACoBA,WAAYnL,EADhC,EACgCA,WAAYC,EAD5C,EAC4CA,YAD5C,EAE+B9F,KAAKC,MAAnC4H,EAFD,EAECA,OAAQD,EAFT,EAESA,MAAOqC,EAFhB,EAEgBA,WAEvB,OACE,yBAAK5J,UAAU,SACb,yBAAKA,UAAU,oBAAf,KACA,yBAAKA,UAAU,cACb,4BAAQA,UAAU,mBAChB,uBAAGA,UAAU,gCAAgCwH,EAAS,YAAc,gBACpE,4BAAQlH,KAAK,SAASN,UAAU,SAASO,aAAW,QAAQL,QAASqH,KAEvE,iCACE,yBAAKvH,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WACb,2BAAO+B,QAAQ,YAAY/B,UAAU,sCAArC,gBAEE,2BACEW,GAAG,YACHX,UAAU,QACVM,KAAK,OACL2B,SAAUtC,KAAKmR,iBACflP,MAAOyD,MAIb,yBAAKrF,UAAU,WACb,uBAAGA,UAAU,sCAAb,gBAEE,kBAAC,KAAD,CACEA,UAAU,QACVW,GAAG,YACHsB,SAAUtC,KAAKoR,iBACfnP,MAAO2D,EACPoM,UAAU,SACVC,UAAW,SAIjB,yBAAK5R,UAAU,WACb,2BAAO+B,QAAQ,YAAY/B,UAAU,sCAArC,sBAEE,yBAAKA,UAAU,UACb,4BAAQiC,SAAUtC,KAAKqR,iBAAkBrQ,GAAG,aAC1C,4BAAQiB,MAAO,MAAf,uBACEjC,KAAKkR,MAAMzJ,SAAS,cACpB,4BAAQxF,MAAM,aAAd,cAEAjC,KAAKkR,MAAMzJ,SAAS,qBACpB,4BAAQxF,MAAM,oBAAd,qBAEAjC,KAAKkR,MAAMzJ,SAAS,UAAY,4BAAQxF,MAAM,SAAd,UAChCjC,KAAKkR,MAAMzJ,SAAS,WAAa,4BAAQxF,MAAM,UAAd,WACjCjC,KAAKkR,MAAMzJ,SAAS,YACpB,4BAAQxF,MAAM,WAAd,YAEAjC,KAAKkR,MAAMzJ,SAAS,YACpB,4BAAQxF,MAAM,WAAd,YAEAjC,KAAKkR,MAAMzJ,SAAS,YACpB,4BAAQxF,MAAM,WAAd,YAEAjC,KAAKkR,MAAMzJ,SAAS,WAAa,4BAAQxF,MAAM,UAAd,eAM7C,yBAAK5B,UAAU,kBACb,yBAAKA,UAAU,WACb,2BAAO+B,QAAQ,iBAAiB/B,UAAU,sCAA1C,wBAEE,yBAAKA,UAAU,UACb,4BAAQiC,SAAUtC,KAAKiL,oBAAqBjK,GAAG,kBAC7C,wCACCiJ,EAAW9D,KAAI,SAAC4D,GAAD,OACd,4BAAQ9H,MAAO8H,EAAErE,MAAOqE,EAAErE,aAMnCG,GAAcC,GACb,uBAAGzF,UAAU,2BACX,0BAAMA,UAAU,4BAAhB,yCACyC,KAEzC,6BACCyF,EAAYK,KAAI,SAACC,GAAD,OACf,oCACE,8BACGA,EAAEV,KADL,MACcU,EAAE+D,SADhB,KAGA,oCAOX1I,GAAS,uBAAGpB,UAAU,mBAAb,6BACT2Q,GAAc,uBAAG3Q,UAAU,mBAAb,8BACf,6BACA,4BAAQM,KAAK,SAASN,UAAU,oBAAoBE,QAASqH,GAA7D,QAGA,4BAAQjH,KAAK,SAASN,UAAU,iBAAiBE,QAASP,KAAKsR,gBAA/D,e,GAnRYpQ,IAAMC,WAuTfG,gBArBS,SAACzC,GAEvB,MAAO,CACLyI,KAF2BzI,EAArByI,KAGN2C,WAH2BpL,EAAfoL,eANW,SAAC1I,GAAD,MAAe,CACxCgQ,YAAa,SAACxJ,EAAO6I,GAAR,OAAuBrP,EjB/LX,SAACwG,EAAO6I,GACjC,MAAO,CACLjQ,KAjGyB,gBAkGzBgC,QAAS,CACPoF,QACA6I,eiB0LyCsB,CAAkBnK,EAAO6I,KACtEc,SAAU,SAAC3J,EAAO6I,EAAYa,GAApB,OAAiClQ,EjBtLrB,SAACwG,EAAO6I,EAAYa,GAC1C,MAAO,CACL9Q,KA1GqB,YA2GrBgC,QAAS,CACPoF,QACA6I,aACAa,aiBgLgDU,CAAepK,EAAO6I,EAAYa,QAwBzEnQ,CAA6CyP,IChTtDqB,G,4MACJvT,MAAQ,CACNuG,iBAAiB,EACjBiD,eAAe,EACfgK,qBAAqB,EACrBC,eAAe,G,EAGjBC,MAC0B,EAAKtS,MAArB6F,YACWK,KAAI,SAACC,GAAD,OAAOA,EAAEV,Q,EAQlCL,mBAAqB,SAAC/F,GACpBA,EAAEgG,iBACF,EAAK7F,SAAS,CACZ2F,iBAAiB,K,EAIrBkD,iBAAmB,SAAChJ,GAClBA,EAAEgG,iBACF,EAAK7F,SAAS,CACZ4I,eAAe,K,EAInB9C,iBAAmB,WACjB,EAAK9F,SAAS,CACZ4I,eAAe,K,EAInBmK,2BAA6B,WAC3B,EAAK/S,SAAS,CACZ4S,qBAAqB,K,EAIzB7M,kBAAoB,SAACC,GAAU,IAAD,EAC2B,EAAKxF,MAApD8H,EADoB,EACpBA,MAAOpH,EADa,EACbA,KAAM8R,EADO,EACPA,WAAYzH,EADL,EACKA,kBAC7BvF,IACFgN,EAAW1K,EAAOpH,GAClBqK,KAEF,EAAKvL,SAAS,CACZ2F,iBAAiB,EACjBiD,eAAe,K,EAInBqK,oBAAsB,SAACpT,GACrBA,EAAEgG,iBACF,EAAK7F,SAAS,CACZ4S,qBAAqB,K,EAIzBM,mBAAqB,SAACrT,GACpBA,EAAEgG,iBADwB,MAE8B,EAAKrF,MAArDyF,EAFkB,EAElBA,KAAMG,EAFY,EAEZA,WAAYC,EAFA,EAEAA,YAAa8M,EAFb,EAEaA,aACvC,EAAKnT,SAAS,CACZ6S,eAAe,IAEjBM,EAAalN,EAAMG,EAAYC,I,mEAxDX,IACZA,EAAgB9F,KAAKC,MAArB6F,YACR9F,KAAKuS,MAAQzM,EAAYK,KAAI,SAACC,GAAD,OAAOA,EAAEV,U,+BAyD9B,IAAD,SAC4E1F,KAAKC,MAAhF8D,EADD,EACCA,SAAU2B,EADX,EACWA,KAAM/E,EADjB,EACiBA,KAAMkF,EADvB,EACuBA,WAAYD,EADnC,EACmCA,KAAMmC,EADzC,EACyCA,MAAOkC,EADhD,EACgDA,WAAYnE,EAD5D,EAC4DA,YAD5D,EAEwE9F,KAAKnB,MAA5EuG,EAFD,EAECA,gBAAiBiD,EAFlB,EAEkBA,cAAegK,EAFjC,EAEiCA,oBAAqBC,EAFtD,EAEsDA,cACvDO,EAAU,IAAI5M,KAAKL,GACnBkN,EAAS,UAAMD,EAAQxM,WAAd,YAC8B,IAA3CwM,EAAQtM,aAAaD,WAAWhD,OAC5BuP,EAAQtM,aADZ,WAEQsM,EAAQtM,eAGlB,OACE,oCACGnB,GACC,kBAAC,EAAD,CACEpB,MAAM,gBACNC,SAAQ,2DAAsDyB,GAC9DtB,MAAOpE,KAAKwF,oBAGf6C,GACC,kBAAC,GAAD,CACE1H,KAAMA,EACN+E,KAAMA,EACNE,KAAMA,EACNmC,MAAOA,EACPH,MAAO5H,KAAKuF,iBACZsC,QAAM,IAGTwK,GACC,kBAAC,GAAD,CACEtK,MAAOA,EACP4C,gBAAiB3K,KAAKuS,MACtBzH,SAAUnK,EACViH,MAAO5H,KAAKwS,6BAGfF,GACC,kBAAC,GAAD,CACEtO,MAAM,kBACNC,SAAS,2CACTG,MAAO,kBAAM,EAAK3E,SAAS,CAAE6S,eAAe,OAGhD,yBAAKjS,UAAU,eACb,4BAAQA,UAAU,eAChB,wBAAIA,UAAU,+BAAd,UAAgDM,EAAhD,eAA2DmS,EAA3D,aAAyEpN,IACzE,yBAAKrF,UAAU,kCACb,uBACE6D,KAAM3F,EACNgC,QAASP,KAAK0S,oBACdrS,UAAU,oBAHZ,OAOA,uBACE6D,KAAM3F,EACNgC,QAASP,KAAKsI,iBACdjI,UAAU,oBAHZ,SAOE4J,EAAW9D,KAAI,SAACuG,GAAD,OAAOA,EAAEhH,QAAM+B,SAAS/B,MAAWI,EAAYxC,QAC9D,uBACEY,KAAM3F,EACN8B,UAAU,mBACVE,QAASP,KAAK2S,oBAHhB,YAQF,uBACEzO,KAAM3F,EACNgC,QAASP,KAAKqF,mBACdhF,UAAU,oCAHZ,YASJ,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,WAAW0D,IAE5B,4BAAQ1D,UAAU,2BAChB,uBAAGA,UAAU,8BAAb,YAEE,oCAAUwF,EAAWW,SAAWX,EAAWW,SAAW,IAAtD,MAEF,uBAAGnG,UAAU,8BAAb,QAEE,oCAAUwF,EAAWY,KAAOZ,EAAWY,KAAO,IAA9C,MAEF,uBAAGpG,UAAU,8BAAb,SAEE,oCAAUwF,EAAWa,MAAQb,EAAWa,MAAQ,IAAhD,MAEF,uBAAGrG,UAAU,8BAAb,YAEE,oCAAUwF,EAAWc,SAAWd,EAAWc,SAAW,IAAtD,iB,GA1KSzF,IAAMC,WAoN7BiR,GAAShR,aAAe,CACtByE,WAAYkN,KAAUC,MAAM,CAC1BxM,SAAU,EACVC,KAAM,EACNC,MAAO,EACPC,SAAU,KAICrF,oBAnCS,SAACzC,GAEvB,MAAO,CACLoL,WAFqBpL,EAAfoL,eARiB,SAAC1I,GAAD,MAAe,CACxCkR,WAAY,SAAC1K,EAAO+C,GAAR,OAAqBvJ,ElBjHT,SAACwG,EAAO+C,GAChC,MAAO,CACLnK,KAzEuB,cA0EvBgC,QAAS,CACPoF,QACA+C,akB4GsCmI,CAAiBlL,EAAO+C,KAClEE,kBAAmB,kBAAMzJ,ElBvElB,CACLZ,KAlH8B,wBkByLhCiS,aAAc,SAAClN,EAAMG,EAAYC,GAAnB,OACZvE,ElB/BwB,SAACmE,EAAMG,EAAYC,GAC7C,MAAO,CACLnF,KAzJyB,gBA0JzBgC,QAAS,CACP+C,OACAG,aACAC,gBkByBOoN,CAAmBxN,EAAMG,EAAYC,QAsCnCxE,CAA6C8Q,ICnOtDe,G,4MACJtU,MAAQ,CACN4K,aAAa,G,EAGfC,aAAe,SAACpK,GACdA,EAAEgG,iBACF,EAAK7F,SAAS,CACZgK,aAAa,K,EAIjBE,iBAAmB,WACjB,EAAKlK,SAAS,CACZgK,aAAa,K,uDAIP,IAAD,EACiBzJ,KAAKC,MAArBqH,EADD,EACCA,KAAM8L,EADP,EACOA,MACN3J,EAAgBzJ,KAAKnB,MAArB4K,YACF4J,EAAWD,EAAME,OAAOC,IACxBC,EAAQ,WAAOH,GACfI,EAAUnM,EAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEkB,OAAS+K,KAAU,GAElD3J,EAAY4J,EAAQ3J,MAAMxG,OAG9BmQ,EAAQ3J,MAAM3D,KAAI,SAAC4D,GACjB,IAAM2J,EAAkB3J,EAAEjE,YAAYxC,OAGpCyG,EAAEjE,YAAYK,KAAI,SAACC,GAAD,OAChB,kBAAC,GAAD,CACE4D,IAAG,UAAK5D,EAAEV,KAAP,YAAeqE,EAAEnE,MACpBF,KAAMU,EAAEV,KACRG,WAAYO,EAAEP,WACd8E,gBAAiBZ,EAAEjE,YAAYK,KAAI,SAACwN,GAAD,OAAOA,EAAEjO,QAC5CyE,SAAU/D,EAAE+D,SACZ1B,KAAMrC,EAAEqC,KACRqC,SAAUf,EAAEpJ,KACZoH,MAAO0L,EAAQzS,QAXnB,uBAAGX,UAAU,wCAAb,mCAeF,OACE,kBAAC,GAAD,CACE2J,IAAG,YAAOD,EAAEnE,MACZC,WAAYkE,EAAElE,WACdC,YAAaiE,EAAEjE,YACfJ,KAAMqE,EAAErE,KACRE,KAAMmE,EAAEnE,KACR6C,KAAMsB,EAAEtB,KACR9H,KAAMoJ,EAAEpJ,KACRoH,MAAO0L,EAAQzS,GACfsG,KAAMA,GAELoM,MA/BP,uBAAGrT,UAAU,wCAAb,4BAoCF,OACE,oCACGoJ,GAAe,kBAAC,GAAD,CAAWnC,KAAMA,EAAMS,MAAO0L,EAAQzS,GAAI4G,MAAO5H,KAAK2J,mBACtE,kBAAC,EAAD,CAAM3F,MAAK,cAASqP,GAAYpP,SAAS,mCACvC,yBAAK5D,UAAU,6BACb,uBAAGA,UAAU,8BAAb,6BACA,4BAAQM,KAAK,SAASN,UAAU,SAASE,QAASP,KAAK0J,cAAvD,aAIDG,Q,GAxEO3I,IAAMC,WAgGTG,gBAjBS,SAACzC,GAEvB,MAAO,CACLyI,KAFezI,EAATyI,QAgBKhG,CAAyB6R,I,yDChFlCS,GAAe,CACnBtM,KAAM,CACJ,CACEtG,GAAI,EACJ8F,KAAM,IAAIb,KAAK,KAAM,EAAG,IACxBwC,KAAM,cACN5C,WAAY,CACVW,SAAU,IACVC,KAAM,KACNC,MAAO,IACPC,SAAU,QAEZmD,MAAO,CACL,CACEnJ,KAAM,YACN+E,KAAM,sBACNE,KAAM,IAAIK,KAAK,KAAM,EAAG,GAAI,EAAG,IAAIK,WACnCT,WAAY,CACVW,SAAU,KACVC,KAAM,KACNC,MAAO,KACPC,SAAU,KAEZb,YAAa,CACX,CACEJ,KAAM,OACNyE,SAAU,IACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,IACNC,MAAO,IACPC,SAAU,MAGd,CACEjB,KAAM,UACNyE,SAAU,IACVtE,WAAY,CACVW,SAAU,KACVC,KAAM,IACNC,MAAO,GACPC,SAAU,MAGd,CACEjB,KAAM,iBACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,EACNC,MAAO,IACPC,SAAU,OAKlB,CACEhG,KAAM,QACN+E,KAAM,8BACNE,KAAM,IAAIK,KAAK,KAAM,EAAG,GAAI,GAAI,IAAIK,WACpCT,WAAY,CACVW,SAAU,MACVC,KAAM,KACNC,MAAO,KACPC,SAAU,OAEZb,YAAa,CACX,CACEJ,KAAM,UACNyE,SAAU,IACVtE,WAAY,CACVW,SAAU,KACVC,KAAM,IACNC,MAAO,IACPC,SAAU,QAGd,CACEjB,KAAM,OACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,KACVC,KAAM,GACNC,MAAO,KACPC,SAAU,QAGd,CACEjB,KAAM,SACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,IACNC,MAAO,KACPC,SAAU,KAGd,CACEjB,KAAM,cACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,IACNC,MAAO,KACPC,SAAU,SAKlB,CACEhG,KAAM,UACN+E,KAAM,sBACNE,KAAM,IAAIK,KAAK,KAAM,EAAG,GAAI,GAAI,GAAGK,WACnCT,WAAY,CACVW,SAAU,KACVC,KAAM,GACNC,MAAO,KACPC,SAAU,OAEZb,YAAa,CACX,CACEJ,KAAM,QACNyE,SAAU,IACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,GACNC,MAAO,KACPC,SAAU,KAGd,CACEjB,KAAM,YACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,KACNC,MAAO,IACPC,SAAU,UAKlB,CACEhG,KAAM,SACN+E,KAAM,gCACNE,KAAM,IAAIK,KAAK,KAAM,EAAG,GAAI,GAAI,GAAGK,WACnCT,WAAY,CACVW,SAAU,KACVC,KAAM,MACNC,MAAO,GACPC,SAAU,OAEZb,YAAa,CACX,CACEJ,KAAM,QACNyE,SAAU,IACVtE,WAAY,CACVW,SAAU,KACVC,KAAM,KACNC,MAAO,KACPC,SAAU,MAGd,CACEjB,KAAM,MACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,KACVC,KAAM,IACNC,MAAO,GACPC,SAAU,OAGd,CACEjB,KAAM,QACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,IACNC,MAAO,IACPC,SAAU,YAQxBsD,WAAY,CACV,CACEtJ,KAAM,YACN+E,KAAM,sBACNG,WAAY,CACVW,SAAU,KACVC,KAAM,KACNC,MAAO,KACPC,SAAU,KAEZb,YAAa,CACX,CACEJ,KAAM,OACNyE,SAAU,IACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,IACNC,MAAO,IACPC,SAAU,MAGd,CACEjB,KAAM,UACNyE,SAAU,IACVtE,WAAY,CACVW,SAAU,KACVC,KAAM,IACNC,MAAO,GACPC,SAAU,MAGd,CACEjB,KAAM,iBACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,EACNC,MAAO,IACPC,SAAU,OAKlB,CACEhG,KAAM,QACN+E,KAAM,8BACNE,KAAM,IAAIK,KAAK,KAAM,EAAG,GAAI,GAAI,IAAIK,WACpCT,WAAY,CACVW,SAAU,MACVC,KAAM,KACNC,MAAO,KACPC,SAAU,OAEZb,YAAa,CACX,CACEJ,KAAM,UACNyE,SAAU,IACVtE,WAAY,CACVW,SAAU,KACVC,KAAM,IACNC,MAAO,IACPC,SAAU,QAGd,CACEjB,KAAM,OACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,KACVC,KAAM,GACNC,MAAO,KACPC,SAAU,QAGd,CACEjB,KAAM,SACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,IACNC,MAAO,KACPC,SAAU,KAGd,CACEjB,KAAM,cACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,IACNC,MAAO,KACPC,SAAU,SAKlB,CACEhG,KAAM,QACN+E,KAAM,sBACNE,KAAM,IAAIK,KAAK,KAAM,EAAG,GAAI,GAAI,GAAGK,WACnCT,WAAY,CACVW,SAAU,KACVC,KAAM,GACNC,MAAO,KACPC,SAAU,OAEZb,YAAa,CACX,CACEJ,KAAM,QACNyE,SAAU,IACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,GACNC,MAAO,KACPC,SAAU,KAGd,CACEjB,KAAM,YACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,KACNC,MAAO,IACPC,SAAU,UAKlB,CACEhG,KAAM,SACN+E,KAAM,gCACNE,KAAM,IAAIK,KAAK,KAAM,EAAG,GAAI,GAAI,GAAGK,WACnCT,WAAY,CACVW,SAAU,KACVC,KAAM,MACNC,MAAO,GACPC,SAAU,OAEZb,YAAa,CACX,CACEJ,KAAM,QACNyE,SAAU,IACVtE,WAAY,CACVW,SAAU,KACVC,KAAM,KACNC,MAAO,KACPC,SAAU,MAGd,CACEjB,KAAM,MACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,KACVC,KAAM,IACNC,MAAO,GACPC,SAAU,OAGd,CACEjB,KAAM,QACNyE,SAAU,GACVtE,WAAY,CACVW,SAAU,IACVC,KAAM,IACNC,MAAO,IACPC,SAAU,UAMpBuE,iBAAkB,CAChB,CACExF,KAAM,QACNG,WAAY,CACVW,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,SAAU,KAGd,CACEjB,KAAM,UACNG,WAAY,CACVW,SAAU,GACVC,KAAM,IACNC,MAAO,EACPC,SAAU,OAIhB+B,OAAQ,CACNW,IAAK,KACLC,KAAM,EACNwG,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRjH,KAAM,IACNC,KAAM,IACNC,KAAM,GACNC,KAAM,GACNC,KAAM,IACNC,KAAM,KAERlJ,SAAU,IAwRG2T,GArRK,WAAmC,IACjDC,EADejV,EAAiC,uDAAzB+U,GAAcG,EAAW,uCAEpD,OAAQA,EAAOpT,MACb,IpBtaoB,WoBualB,OAAO8D,EAAO,eACT5F,EADQ,CAEX6J,OAAO,eACF7J,EAAM6J,OADL,CAEJW,IAAK0K,EAAOpR,QAAQ+N,eAG1B,IpB7a4B,mBoB8a1B,OAAOjM,EAAO,eACT5F,EADQ,CAEX6J,OAAO,eAAM7J,EAAM6J,OAAb,GAAwBqL,EAAOpR,QAAQiO,eAEjD,IpBjbqB,YoBkbnB,OAAOnM,EAAO,eACT5F,EADQ,CAEX6J,OAAO,eACF7J,EAAM6J,OADL,CAEJY,KAAMyK,EAAOpR,QAAQ2G,UAG3B,IpBxbwB,eoBybtB,OAAO7E,EAAO,eACT5F,EADQ,CAEXyI,KAAM,uBACDzI,EAAMyI,MADL,CAEJ,CACEtG,GAAIuD,KAAKyP,IAAL,MAAAzP,KAAI,aAAQ1F,EAAMyI,KAAKnB,KAAI,SAACoB,GAAD,OAAOA,EAAEvG,QAAO,EAC/C8F,KAAMiN,EAAOpR,QAAQmE,KACrBjB,WAAY,CACVW,SAAU,EACVC,KAAM,EACNC,MAAO,EACPC,SAAU,GAEZ8B,KAAK,IAAD,OAAMsL,EAAOpR,QAAQmE,KAAK8B,cAA1B,YACmD,IAArDmL,EAAOpR,QAAQmE,KAAK+B,WAAWvC,WAAWhD,OACtCyQ,EAAOpR,QAAQmE,KAAK+B,WAAa,EADrC,WAEQkL,EAAOpR,QAAQmE,KAAK+B,WAAa,GAHvC,YAKkD,IAApDkL,EAAOpR,QAAQmE,KAAKgC,UAAUxC,WAAWhD,OACrCyQ,EAAOpR,QAAQmE,KAAKgC,UADxB,WAEQiL,EAAOpR,QAAQmE,KAAKgC,YAE9BgB,MAAO,MAETmK,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIlO,KAAKiO,EAAEpN,MAAQ,IAAIb,KAAKkO,EAAErN,YAEnD,IpBldoB,WoBkdpB,MACajI,EAAMyI,KAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,SAD9D,mBAYE,OAXC+L,EADH,MAEShN,KAAOiN,EAAOpR,QAAQmE,KAC7BgN,EAAOrL,KAAP,WAAkBsL,EAAOpR,QAAQmE,KAAK8B,cAAtC,YACuD,IAArDmL,EAAOpR,QAAQmE,KAAK+B,WAAWvC,WAAWhD,OACtCyQ,EAAOpR,QAAQmE,KAAK+B,WAAa,EADrC,WAEQkL,EAAOpR,QAAQmE,KAAK+B,WAAa,GAH3C,YAKsD,IAApDkL,EAAOpR,QAAQmE,KAAKgC,UAAUxC,WAAWhD,OACrCyQ,EAAOpR,QAAQmE,KAAKgC,UADxB,WAEQiL,EAAOpR,QAAQmE,KAAKgC,YAEvBrE,EAAO,eACT5F,EADQ,CAEXyI,KAAM,uBAAIzI,EAAMyI,KAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,UAArD,CAA6D+L,IAAQG,MACzE,SAACC,EAAGC,GAAJ,OAAU,IAAIlO,KAAKiO,EAAEpN,MAAQ,IAAIb,KAAKkO,EAAErN,YAG9C,IpBjesB,aoBkepB,OAAOrC,EAAO,eACT5F,EADQ,CAEXyI,KAAMzI,EAAMyI,KACT6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQ3B,MACtCiT,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIlO,KAAKiO,EAAEpN,MAAQ,IAAIb,KAAKkO,EAAErN,YAEpD,IpBveuB,coBuevB,MACajI,EAAMyI,KAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,SAD9D,mBAGE,OAFC+L,EADH,MAEShK,MAAQgK,EAAOhK,MAAMqB,QAAO,SAACpB,GAAD,OAAOA,EAAEpJ,OAASoT,EAAOpR,QAAQmI,YAC7DrG,EAAO,eACT5F,EADQ,CAEXyI,KAAK,GAAD,oBAAMzI,EAAMyI,KAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,UAAvD,CAA+D+L,OAEvE,IpBjfyB,gBoBifzB,MACajV,EAAMyI,KAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,SAD9D,mBAQE,OAPC+L,EADH,MAEShK,MAAM7I,KAAb,eACK8S,EAAOpR,QAAQiO,aAEpBkD,EAAOhK,MAAMmK,MAAK,SAACC,EAAGC,GACpB,OAAO,IAAIlO,KAAKiO,EAAEtO,MAAQ,IAAIK,KAAKkO,EAAEvO,SAEhCnB,EAAO,eACT5F,EADQ,CAEXyI,KAAK,GAAD,oBAAMzI,EAAMyI,KAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,UAAvD,CAA+D+L,OAEvE,IpB5fqB,YoB4frB,MACajV,EAAMyI,KAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,SAD9D,mBAaE,OAZC+L,EADH,MAEShK,MAAQgK,EAAOhK,MACnB3D,KAAI,SAAC4D,GACJ,OAAIA,EAAEpJ,OAASoT,EAAOpR,QAAQ8O,SACrB,eACF1H,EADL,GAEKgK,EAAOpR,QAAQiO,YAGf7G,KAERkK,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIlO,KAAKiO,EAAEtO,MAAQ,IAAIK,KAAKkO,EAAEvO,SACzCnB,EAAO,eACT5F,EADQ,CAEXyI,KAAM,uBAAIzI,EAAMyI,KAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,UAArD,CAA6D+L,IAAQG,MACzE,SAACC,EAAGC,GAAJ,OAAU,IAAIlO,KAAKiO,EAAEpN,MAAQ,IAAIb,KAAKkO,EAAErN,YAG9C,IpB5gB8B,qBoByiB5B,OA5BAgN,EAASjV,EAAMyI,KAAKnB,KAAI,SAACoB,GACvB,IAAMgM,EAAMhM,EAyBZ,OAxBAgM,EAAIzJ,MAAQvC,EAAEuC,MAAM3D,KAAI,SAAC4D,GACvB,IAAMgI,EAAOhI,EAab,OAZAgI,EAAKlM,WAAWW,SAAWnC,EACzB0N,EAAKjM,YAAYsO,QAAO,SAACxI,EAAGtH,GAAJ,OAAUsH,EAAItH,EAAEuB,WAAWW,WAAU,IAE/DuL,EAAKlM,WAAWY,KAAOpC,EACrB0N,EAAKjM,YAAYsO,QAAO,SAACxI,EAAGtH,GAAJ,OAAUsH,EAAItH,EAAEuB,WAAWY,OAAM,IAE3DsL,EAAKlM,WAAWa,MAAQrC,EACtB0N,EAAKjM,YAAYsO,QAAO,SAACxI,EAAGtH,GAAJ,OAAUsH,EAAItH,EAAEuB,WAAWa,QAAO,IAE5DqL,EAAKlM,WAAWc,SAAWtC,EACzB0N,EAAKjM,YAAYsO,QAAO,SAACxI,EAAGtH,GAAJ,OAAUsH,EAAItH,EAAEuB,WAAWc,WAAU,IAExDoL,KAETwB,EAAI1N,WAAWW,SAAWnC,EACxBkD,EAAEuC,MAAMsK,QAAO,SAACxI,EAAGtH,GAAJ,OAAUsH,EAAItH,EAAEuB,WAAWW,WAAU,IAEtD+M,EAAI1N,WAAWY,KAAOpC,EAAWkD,EAAEuC,MAAMsK,QAAO,SAACxI,EAAGtH,GAAJ,OAAUsH,EAAItH,EAAEuB,WAAWY,OAAM,IACjF8M,EAAI1N,WAAWa,MAAQrC,EAAWkD,EAAEuC,MAAMsK,QAAO,SAACxI,EAAGtH,GAAJ,OAAUsH,EAAItH,EAAEuB,WAAWa,QAAO,IACnF6M,EAAI1N,WAAWc,SAAWtC,EACxBkD,EAAEuC,MAAMsK,QAAO,SAACxI,EAAGtH,GAAJ,OAAUsH,EAAItH,EAAEuB,WAAWc,WAAU,IAE/C4M,KAEF9O,EAAO,eACT5F,EADQ,CAEXiV,YAEJ,IpBviBkC,yBoBwiBhC,OAAOrP,EAAO,eACT5F,EADQ,CAEXoL,WAAYpL,EAAMoL,WAAWkB,QAC3B,SAACpB,GAAD,OAAOA,EAAErE,OAASqO,EAAOpR,QAAQ+C,MAAQqE,EAAEpJ,OAASoT,EAAOpR,QAAQhC,WAGzE,IpBnjB0B,iBoBmjB1B,MACa9B,EAAMyI,KAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,SAD9D,mBAYE,OAXC+L,EADH,MAEShK,MAAQgK,EAAOhK,MAAM3D,KAAI,SAAC4D,GAQ/B,OAPIA,EAAEpJ,OAASoT,EAAOpR,QAAQmI,UAC5Bf,EAAEjE,YAAY7E,KAAK,CACjByE,KAAMqO,EAAOpR,QAAQ+C,KACrByE,SAAU4J,EAAOpR,QAAQwH,SACzBtE,WAAYkO,EAAOpR,QAAQkD,aAGxBkE,KAEFtF,EAAO,eACT5F,EADQ,CAEXyI,KAAM,uBAAIzI,EAAMyI,KAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,UAArD,CAA6D+L,IAAQG,MACzE,SAACC,EAAGC,GAAJ,OAAU,IAAIlO,KAAKiO,EAAEpN,MAAQ,IAAIb,KAAKkO,EAAErN,YAG9C,IpBpkB6B,oBoBklB3B,OAbAgN,EAASjV,EAAMyI,KAAKnB,KAAI,SAACoB,GACvB,OAAIA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,OAC1BR,EAAEuC,MAAM3D,KAAI,SAAC4D,GACX,IAAMgI,EAAOhI,EAIb,OAHIA,EAAEpJ,OAASoT,EAAOpR,QAAQmI,WAC5BiH,EAAKjM,YAAL,aAAuBiE,EAAEjE,YAAYqF,QAAO,SAAC/E,GAAD,OAAOA,EAAEV,OAASqO,EAAOpR,QAAQ+C,UAExEqM,KAEFxK,GAEFA,KAEF9C,EAAO,eACT5F,EADQ,CAEXyI,KAAMwM,KAEV,IpBrlB2B,kBoBqlB3B,MACajV,EAAMyI,KAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,SAD9D,mBAyBE,OAxBC+L,EADH,MAEShK,MAAQgK,EAAOhK,MAAM3D,KAAI,SAAC4D,GAC/B,IAAMgI,EAAOhI,EAoBb,OAnBIA,EAAEpJ,OAASoT,EAAOpR,QAAQmI,WAC5BiH,EAAKjM,YAAciE,EAAEjE,YAAYK,KAAI,SAACC,GACpC,IAAMgF,EAAahF,EAcnB,OAZEA,EAAEV,OAASqO,EAAOpR,QAAQ+H,UACzBqJ,EAAOpR,QAAQ+C,OAASqO,EAAOpR,QAAQ+H,UAAoC,KAAxBqJ,EAAOpR,QAAQ+C,OAEnE0F,EAAWjB,SAAW4J,EAAOpR,QAAQwH,SACrCiB,EAAWvF,WAAakO,EAAOpR,QAAQkD,YAGvCO,EAAEV,OAASqO,EAAOpR,QAAQ+H,UAC1BqJ,EAAOpR,QAAQ+C,OAASqO,EAAOpR,QAAQ+H,WAEvCU,EAAW1F,KAAOqO,EAAOpR,QAAQ+C,MAE5BU,MAGJ2D,KAEFtF,EAAO,eACT5F,EADQ,CAEXyI,KAAM,uBAAIzI,EAAMyI,KAAK6D,QAAO,SAAC5D,GAAD,OAAOA,EAAEvG,KAAO+S,EAAOpR,QAAQoF,UAArD,CAA6D+L,IAAQG,MACzE,SAACC,EAAGC,GAAJ,OAAU,IAAIlO,KAAKiO,EAAEpN,MAAQ,IAAIb,KAAKkO,EAAErN,YAG9C,IpBnnByB,gBoBonBvB,OAAOrC,EAAO,eACT5F,EADQ,CAEXoL,WAAW,CACT,CACEvE,KAAMqO,EAAOpR,QAAQ+C,KACrBG,WAAYkO,EAAOpR,QAAQkD,WAC3BC,YAAaiO,EAAOpR,QAAQmD,cAJtB,oBAMLjH,EAAMoL,gBAGf,IpB5nBwC,+BoB8nBtC,OADA6J,EAASjV,EAAMqM,iBAAiBC,QAAO,SAAC/E,GAAD,OAAOA,EAAEV,OAASqO,EAAOpR,QAAQ+C,QACjEjB,EAAO,eACT5F,EADQ,CAEXqM,iBAAkB4I,KAEtB,IpBpoB+B,sBoBqoB7B,OAAOrP,EAAO,eACT5F,EADQ,CAEXqM,iBAAiB,CACf,CAAExF,KAAMqO,EAAOpR,QAAQ+C,KAAMG,WAAYkO,EAAOpR,QAAQkD,aAD1C,oBAEXhH,EAAMqM,sBAGf,IpBxoByB,gBoByoBvB,OAAI6I,EAAOpR,QAAQC,KAAKnB,MACf5C,GAET8F,aAAa0P,WAAW,SACxB1P,aAAa0P,WAAW,YACxB1P,aAAa2P,QAAQ,QAASP,EAAOpR,QAAQC,KAAK8B,OAClDC,aAAa2P,QAAQ,WAAYP,EAAOpR,QAAQC,KAAKlB,OAC9C,eAAK7C,EAAZ,CAAmBqB,SAAU6T,EAAOpR,QAAQC,KAAKlB,SAEnD,IpBjpBsB,aoBkpBpB,OAAIqS,EAAOpR,QAAQC,KAAKnB,MACf5C,GAET8F,aAAa0P,WAAW,SACxB1P,aAAa0P,WAAW,YACxB1P,aAAa2P,QAAQ,QAASP,EAAOpR,QAAQC,KAAK8B,OAClDC,aAAa2P,QAAQ,WAAYP,EAAOpR,QAAQC,KAAK/D,MAAMqB,UACpD6T,EAAOpR,QAAQC,KAAK/D,OAE7B,IpB1pBuB,coB6pBrB,OAFA8F,aAAa0P,WAAW,SACxB1P,aAAa0P,WAAW,YACjBT,GAET,QACE,OAAO/U,IChrBP0V,GAAgB,CACpBvK,IAAK,OACLwK,cAGIC,GAAmBC,aAAeH,GAAeV,IAGjDc,GAAmBlW,OAAOmW,sCAAwCC,KAClEC,GAAQC,aAAYN,GAAkBE,GAAiBK,aAAgBC,QAI9D,IAAEH,SAAOI,UAFNC,aAAaL,KCwBhBM,GA1BF,kBACX,kBAAC,IAAD,CAAUN,MAAOA,GAAMA,OACrB,kBAAC,IAAD,CAAaI,UAAWJ,GAAMI,WAC5B,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,8BACE,yBAAK7U,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgV,OAAK,EAAC5M,KAAMlK,GACjB,kBAAC,IAAD,CAAU+B,GAAI/B,KAEhB,kBAAC,IAAD,CAAO8W,OAAK,EAAC5M,KAAMlK,EAAc+W,UAAW9T,IAC5C,kBAAC,IAAD,CAAO6T,OAAK,EAAC5M,KAAMlK,EAAiB+W,UAAWvS,IAC/C,kBAAC,IAAD,CAAOsS,OAAK,EAAC5M,KAAMlK,EAAkB+W,UAAW9L,IAChD,kBAAC,IAAD,CAAO6L,OAAK,EAAC5M,KAAMlK,EAAc+W,UAAWC,IAC5C,kBAAC,IAAD,CAAOF,OAAK,EAAC5M,KAAMlK,EAAoB+W,UAAWE,KAClD,kBAAC,IAAD,CAAOH,OAAK,EAAC5M,KAAMlK,EAAe+W,UAAW5H,KAC7C,kBAAC,IAAD,CAAO2H,OAAK,EAAC5M,KAAMlK,EAAY+W,UAAWnC,Y,OC3BxDvT,IAAS6V,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF1W,SAASiI,eAAe,U,mBCT1B0O,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.6dcded76.chunk.js","sourcesContent":["// eslint-disable-next-line import/prefer-default-export\r\nexport const routes = {\r\n  home: '/',\r\n  dashboard: '/dashboard/',\r\n  day: '/dashboard/days/:day',\r\n  meals: '/meals/',\r\n  ingredients: '/ingredients/',\r\n  config: '/configuration',\r\n  login: '/login',\r\n  register: '/register',\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const SAVE_BMR = 'SAVE_BMR';\r\nexport const SAVE_PROPORTIONS = 'SAVE_PROPORTIONS';\r\nexport const SAVE_GOAL = 'SAVE_GOAL';\r\nexport const SAVE_NEW_DAY = 'SAVE_NEW_DAY';\r\nexport const EDIT_DAY = 'EDIT_DAY';\r\nexport const SAVE_NEW_MEAL = 'SAVE_NEW_MEAL';\r\nexport const EDIT_MEAL = 'EDIT_MEAL';\r\nexport const REMOVE_DAY = 'REMOVE_DAY';\r\nexport const REMOVE_MEAL = 'REMOVE_MEAL';\r\nexport const RECOUNT_SUBSTANCES = 'RECOUNT_SUBSTANCES';\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const EDIT_INGREDIENT = 'EDIT_INGREDIENT';\r\nexport const BOOKMARK_MEAL = 'BOOKMARK_MEAL';\r\nexport const BOOKMARK_INGREDIENT = 'BOOKMARK_INGREDIENT';\r\nexport const REMOVE_BOOKMARKED_MEAL = 'REMOVE_BOOKMARKED_MEAL';\r\nexport const REMOVE_BOOKMARKED_INGREDIENT = 'REMOVE_BOOKMARKED_INGREDIENT';\r\n\r\nexport const USER_REGISTER = 'USER_REGISTER';\r\nexport const USER_LOGIN = 'USER_LOGIN';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nconst urlOrigin = window.location.origin;\r\n\r\nexport const saveBMR = (BMRresult) => {\r\n  return {\r\n    type: SAVE_BMR,\r\n    payload: {\r\n      BMRresult,\r\n    },\r\n  };\r\n};\r\n\r\nexport const saveProportions = (properties) => {\r\n  return {\r\n    type: SAVE_PROPORTIONS,\r\n    payload: {\r\n      properties,\r\n    },\r\n  };\r\n};\r\n\r\nexport const saveGoal = (goal) => {\r\n  return {\r\n    type: SAVE_GOAL,\r\n    payload: {\r\n      goal,\r\n    },\r\n  };\r\n};\r\n\r\nexport const saveNewDay = (date) => {\r\n  return {\r\n    type: SAVE_NEW_DAY,\r\n    payload: {\r\n      date,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editDay = (dayId, date) => {\r\n  return {\r\n    type: EDIT_DAY,\r\n    payload: {\r\n      dayId,\r\n      date,\r\n    },\r\n  };\r\n};\r\n\r\nexport const removeDay = (id) => {\r\n  return {\r\n    type: REMOVE_DAY,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const removeMeal = (dayId, mealType) => {\r\n  return {\r\n    type: REMOVE_MEAL,\r\n    payload: {\r\n      dayId,\r\n      mealType,\r\n    },\r\n  };\r\n};\r\n\r\nexport const removeIngredient = (dayId, mealType, name) => {\r\n  return {\r\n    type: REMOVE_INGREDIENT,\r\n    payload: {\r\n      dayId,\r\n      mealType,\r\n      name,\r\n    },\r\n  };\r\n};\r\n\r\nexport const saveNewMeal = (dayId, properties) => {\r\n  return {\r\n    type: SAVE_NEW_MEAL,\r\n    payload: {\r\n      dayId,\r\n      properties,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editMeal = (dayId, properties, prevType) => {\r\n  return {\r\n    type: EDIT_MEAL,\r\n    payload: {\r\n      dayId,\r\n      properties,\r\n      prevType,\r\n    },\r\n  };\r\n};\r\n\r\nexport const recountSubstances = () => {\r\n  return {\r\n    type: RECOUNT_SUBSTANCES,\r\n  };\r\n};\r\n\r\nexport const removeBookmarkedMeal = (type, name) => {\r\n  return {\r\n    type: REMOVE_BOOKMARKED_MEAL,\r\n    payload: {\r\n      type,\r\n      name,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addIngredient = (dayId, mealType, name, quantity, substances) => {\r\n  return {\r\n    type: ADD_INGREDIENT,\r\n    payload: {\r\n      dayId,\r\n      mealType,\r\n      name,\r\n      quantity,\r\n      substances,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editIngredient = (dayId, mealType, name, quantity, substances, prevName) => {\r\n  return {\r\n    type: EDIT_INGREDIENT,\r\n    payload: {\r\n      dayId,\r\n      mealType,\r\n      name,\r\n      quantity,\r\n      substances,\r\n      prevName,\r\n    },\r\n  };\r\n};\r\n\r\nexport const bookmarkMeal = (name, substances, ingredients) => {\r\n  return {\r\n    type: BOOKMARK_MEAL,\r\n    payload: {\r\n      name,\r\n      substances,\r\n      ingredients,\r\n    },\r\n  };\r\n};\r\n\r\nexport const removeBookmarkedIngredient = (name) => {\r\n  return {\r\n    type: REMOVE_BOOKMARKED_INGREDIENT,\r\n    payload: {\r\n      name,\r\n    },\r\n  };\r\n};\r\n\r\nexport const bookmarkIngredient = (name, substances) => {\r\n  return {\r\n    type: BOOKMARK_INGREDIENT,\r\n    payload: {\r\n      name,\r\n      substances,\r\n    },\r\n  };\r\n};\r\n\r\nexport const register = (email, password, state, registerErr, registerSuccess) => (dispatch) => {\r\n  const newState = {\r\n    ...state,\r\n    loggedAs: email,\r\n  };\r\n  return axios\r\n    .post(`${urlOrigin}/api/register`, { email, password, state: newState })\r\n    .then((payload) => {\r\n      if (payload.data.error) {\r\n        registerErr(payload.data.error);\r\n        return;\r\n      }\r\n      dispatch({\r\n        type: USER_REGISTER,\r\n        payload,\r\n      });\r\n      registerSuccess();\r\n    })\r\n    .catch(() => {\r\n      registerErr('An error occured during processing your request. Check if you are online');\r\n    });\r\n};\r\n\r\nexport const login = (email, password, error, loginSuccess) => (dispatch) => {\r\n  return axios\r\n    .post(`${urlOrigin}/api/login`, {\r\n      email,\r\n      password,\r\n    })\r\n    .then((payload) => {\r\n      if (payload.data.error) {\r\n        error(payload.data.error);\r\n        return;\r\n      }\r\n      dispatch({\r\n        type: USER_LOGIN,\r\n        payload,\r\n      });\r\n      loginSuccess();\r\n    })\r\n    .catch(() => {\r\n      error('An error occured during processing your request. Check if you are online');\r\n    });\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: USER_LOGOUT,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport logo from '../assets/logo.svg';\r\nimport { routes } from '../routes';\r\nimport { logout as logoutAction } from '../actions';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    navOpened: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    document.addEventListener('click', this.handleClickOutside, true);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    document.removeEventListener('click', this.handleClickOutside, true);\r\n  };\r\n\r\n  handleNavClick = (e) => {\r\n    const width = document.body.clientWidth;\r\n    if (width < 1024) {\r\n      this.setState((prevState) => ({\r\n        navOpened: !prevState.navOpened,\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleClickOutside = (e) => {\r\n    const domNode = ReactDOM.findDOMNode(this);\r\n\r\n    if (!domNode || !domNode.contains(e.target)) {\r\n      this.setState({\r\n        navOpened: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { loggedAs, logout, history } = this.props;\r\n    const { navOpened } = this.state;\r\n    return (\r\n      <header>\r\n        <nav className=\"navbar\">\r\n          <div className=\"container\">\r\n            <div className=\"navbar-brand\">\r\n              <Link className=\"navbar-item\" to={routes.home} onClick={this.handleNavClick}>\r\n                <img src={logo} alt=\"Diet menu planner logo\" />\r\n                <span className=\"navbar-title\">Diet menu planner</span>\r\n              </Link>\r\n              <button\r\n                type=\"button\"\r\n                className=\"navbar-burger burger\"\r\n                aria-label=\"menu\"\r\n                aria-expanded={`${navOpened}`}\r\n                data-target=\"mainNavbar\"\r\n                onClick={this.handleNavClick}\r\n              >\r\n                <span aria-hidden=\"true\" />\r\n                <span aria-hidden=\"true\" />\r\n                <span aria-hidden=\"true\" />\r\n              </button>\r\n            </div>\r\n            <div id=\"mainNavbar\" className={`navbar-menu ${navOpened ? 'active' : ''}`}>\r\n              <div className=\"navbar-start\">\r\n                <Link className=\"navbar-item\" to={routes.dashboard} onClick={this.handleNavClick}>\r\n                  Dashboard\r\n                </Link>\r\n                <Link className=\"navbar-item\" to={routes.meals} onClick={this.handleNavClick}>\r\n                  Meals\r\n                </Link>\r\n                <Link className=\"navbar-item\" to={routes.ingredients} onClick={this.handleNavClick}>\r\n                  Ingredients\r\n                </Link>\r\n                <Link className=\"navbar-item\" to={routes.config} onClick={this.handleNavClick}>\r\n                  Configuration\r\n                </Link>\r\n              </div>\r\n              <div className=\"navbar-end\">\r\n                <div className=\"navbar-item\">\r\n                  <div className=\"buttons\">\r\n                    <Link\r\n                      className=\"button is-primary\"\r\n                      to={routes.register}\r\n                      onClick={this.handleNavClick}\r\n                    >\r\n                      Register\r\n                    </Link>\r\n                    {!loggedAs && (\r\n                      <Link\r\n                        className=\"button is-light\"\r\n                        to={routes.login}\r\n                        onClick={this.handleNavClick}\r\n                      >\r\n                        Log in\r\n                      </Link>\r\n                    )}\r\n                    {loggedAs && (\r\n                      <button\r\n                        onClick={() => {\r\n                          logout();\r\n                          history.push(routes.dashboard);\r\n                        }}\r\n                        type=\"button\"\r\n                        className=\"button is-light\"\r\n                      >\r\n                        Log out\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => dispatch(logoutAction()),\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { loggedAs } = state;\r\n  return {\r\n    loggedAs,\r\n  };\r\n};\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  loggedAs: PropTypes.string,\r\n  history: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  loggedAs: '',\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { login as loginAction } from '../actions';\r\nimport { routes } from '../routes';\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    error: '',\r\n    email: '',\r\n    password: '',\r\n    loginError: false,\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const [, attr] = e.target.getAttribute('id').split('-');\r\n    this.setState({\r\n      error: '',\r\n      loginError: false,\r\n      [attr]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleLoginButton = () => {\r\n    const { email, password } = this.state;\r\n    const { login, history } = this.props;\r\n    if (!email || !password) {\r\n      this.setState({\r\n        error: 'Provide correct data and try again',\r\n      });\r\n      return;\r\n    }\r\n\r\n    login(\r\n      email,\r\n      password,\r\n      (e) => {\r\n        this.setState({ loginError: e });\r\n      },\r\n      () => {\r\n        history.push(routes.dashboard);\r\n      },\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error, loginError } = this.state;\r\n    return (\r\n      <div className=\"card-form\">\r\n        <div className=\"card\">\r\n          <div className=\"card-content has-text-centered\">\r\n            <p className=\"title\">Log in</p>\r\n            <p className=\"subtitle\">\r\n              Please, log in filling your e-mail address and password given by registration.\r\n            </p>\r\n            <div className=\"field has-text-left\">\r\n              <p className=\"control has-icons-left has-icons-right\">\r\n                <label className=\"label\" htmlFor=\"user-email\">\r\n                  User e-mail address\r\n                  <input\r\n                    id=\"user-email\"\r\n                    className=\"input\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                  <span className=\"icon is-small is-left\">\r\n                    <i className=\"fas fa-envelope\" />\r\n                  </span>\r\n                  <span className=\"icon is-small is-right\">\r\n                    <i className=\"fas fa-check\" />\r\n                  </span>\r\n                </label>\r\n              </p>\r\n            </div>\r\n            <div className=\"field has-text-left\">\r\n              <p className=\"control has-icons-left\">\r\n                <label className=\"label\" htmlFor=\"user-password\">\r\n                  User password\r\n                  <input\r\n                    id=\"user-password\"\r\n                    className=\"input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                  <span className=\"icon is-small is-left\">\r\n                    <i className=\"fas fa-lock\" />\r\n                  </span>\r\n                </label>\r\n              </p>\r\n              {error && <p className=\"has-text-danger\">{error}</p>}\r\n              {loginError && <p className=\"has-text-danger\">{loginError}</p>}\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <button\r\n                  className=\"button is-success\"\r\n                  type=\"submit\"\r\n                  onClick={this.handleLoginButton}\r\n                >\r\n                  Login\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  history: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (email, password, error, loginSuccess) =>\r\n    dispatch(loginAction(email, password, error, loginSuccess)),\r\n});\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Login));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { register as registerAction } from '../actions';\r\nimport { routes } from '../routes';\r\n\r\nclass Register extends React.Component {\r\n  state = {\r\n    errorPswd: false,\r\n    errorEmail: false,\r\n    password: '',\r\n    password2: '',\r\n    email: '',\r\n    registerError: false,\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const [, attr] = e.target.getAttribute('id').split('-');\r\n    if (attr === 'email') {\r\n      this.setState({\r\n        errorEmail: false,\r\n        registerError: false,\r\n        [attr]: e.target.value,\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      errorPswd: false,\r\n      [attr]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleInputBlur = (e) => {\r\n    const { password, password2, email } = this.state;\r\n    const [, attr] = e.target.getAttribute('id').split('-');\r\n    if (attr === 'email' && !/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/.test(email) && email) {\r\n      this.setState({\r\n        errorEmail: true,\r\n      });\r\n      return;\r\n    }\r\n    if (\r\n      (attr === 'password2' || (attr === 'password' && password && password2)) &&\r\n      (password !== password2 || password.length < 8 || password2.length < 8)\r\n    ) {\r\n      this.setState({\r\n        errorPswd: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRegisterButton = () => {\r\n    const { errorEmail, errorPswd, email, password, password2 } = this.state;\r\n    const { state, register, history } = this.props;\r\n    if (errorEmail || errorPswd || !email || !password || !password2) {\r\n      return;\r\n    }\r\n\r\n    register(\r\n      email,\r\n      password,\r\n      state,\r\n      (e) => {\r\n        this.setState({ registerError: e });\r\n      },\r\n      () => {\r\n        history.push(routes.dashboard);\r\n      },\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { password, password2, email, errorPswd, errorEmail, registerError } = this.state;\r\n    return (\r\n      <div className=\"card-form\">\r\n        <div className=\"card\">\r\n          <div className=\"card-content has-text-centered\">\r\n            <p className=\"title\">Registration</p>\r\n            <p className=\"subtitle\">\r\n              You only need to provide e-mail address and password to create account and\r\n              automatically log in. All days and meals you provided before registration will be\r\n              added to your accout.\r\n            </p>\r\n            <div className=\"field has-text-left\">\r\n              <p className=\"control has-icons-left has-icons-right\">\r\n                <label className=\"label\" htmlFor=\"user-email\">\r\n                  User e-mail address\r\n                  <input\r\n                    className=\"input\"\r\n                    id=\"user-email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={this.handleInputChange}\r\n                    onBlur={this.handleInputBlur}\r\n                  />\r\n                  <span className=\"icon is-small is-left\">\r\n                    <i className=\"fas fa-envelope\" />\r\n                  </span>\r\n                </label>\r\n              </p>\r\n              {errorEmail && <p className=\"has-text-danger\">This is not valid email address</p>}\r\n            </div>\r\n            <div className=\"field has-text-left\">\r\n              <p className=\"control has-icons-left\">\r\n                <label className=\"label\" htmlFor=\"user-password\">\r\n                  User password\r\n                  <input\r\n                    className=\"input\"\r\n                    id=\"user-password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    value={password}\r\n                    onChange={this.handleInputChange}\r\n                    onBlur={this.handleInputBlur}\r\n                  />\r\n                  <span className=\"icon is-small is-left\">\r\n                    <i className=\"fas fa-lock\" />\r\n                  </span>\r\n                </label>\r\n              </p>\r\n            </div>\r\n            <div className=\"field has-text-left\">\r\n              <p className=\"control has-icons-left\">\r\n                <label className=\"label\" htmlFor=\"user-password2\">\r\n                  Confirm password\r\n                  <input\r\n                    className=\"input\"\r\n                    id=\"user-password2\"\r\n                    type=\"password\"\r\n                    placeholder=\"Repeat password\"\r\n                    value={password2}\r\n                    onChange={this.handleInputChange}\r\n                    onBlur={this.handleInputBlur}\r\n                  />\r\n                  <span className=\"icon is-small is-left\">\r\n                    <i className=\"fas fa-lock\" />\r\n                  </span>\r\n                </label>\r\n              </p>\r\n              {errorPswd && (\r\n                <p className=\"has-text-danger\">\r\n                  Password must match in both fields and consist at least of 8 characters\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <button\r\n                  className=\"button is-success\"\r\n                  type=\"submit\"\r\n                  onClick={this.handleRegisterButton}\r\n                >\r\n                  Register\r\n                </button>\r\n              </p>\r\n              {registerError && <p className=\"has-text-danger\">{registerError}</p>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  register: PropTypes.func.isRequired,\r\n  history: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  state: PropTypes.shape({\r\n    days: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    savedMeals: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    savedIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    history: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    config: PropTypes.shape({\r\n      BMR: PropTypes.number.isRequired,\r\n      goal: PropTypes.number.isRequired,\r\n      ratioP: PropTypes.number.isRequired,\r\n      ratioF: PropTypes.number.isRequired,\r\n      ratioC: PropTypes.number.isRequired,\r\n      Pmin: PropTypes.number.isRequired,\r\n      Pmax: PropTypes.number.isRequired,\r\n      Fmin: PropTypes.number.isRequired,\r\n      Fmax: PropTypes.number.isRequired,\r\n      Cmin: PropTypes.number.isRequired,\r\n      Cmax: PropTypes.number.isRequired,\r\n    }),\r\n    loggedAs: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  register: (email, password, state, registerErr, registerSuccess) =>\r\n    dispatch(registerAction(email, password, state, registerErr, registerSuccess)),\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Register));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Card = ({ children, title, subtitle }) => (\r\n  <>\r\n    <div className=\"card\">\r\n      <h1 className=\"title has-text-centered\">{title}</h1>\r\n      <p className=\"subtitle has-text-centered\">{subtitle}</p>\r\n    </div>\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">{children}</div>\r\n    </div>\r\n    <div className=\"has-text-centered\">\r\n      <a href=\"https://world.openfoodfacts.org/\">Powered By OpenFoodFacts.org</a>\r\n    </div>\r\n  </>\r\n);\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RemoveModal = ({ title, subtitle, click }) => (\r\n  <div className=\"modal\">\r\n    <div className=\"modal-background\" />\r\n    <div className=\"modal-card\">\r\n      <header className=\"modal-card-head\">\r\n        <p className=\"modal-card-title\">{title}</p>\r\n      </header>\r\n      <section className=\"modal-card-body\">\r\n        <p className=\"subtitle\">{subtitle}</p>\r\n\r\n        <button type=\"button\" onClick={() => click(true)} className=\"button is-danger\">\r\n          Delete\r\n        </button>\r\n        <button type=\"button\" onClick={() => click(false)} className=\"button is-success\">\r\n          Cancel\r\n        </button>\r\n      </section>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nRemoveModal.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n  click: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RemoveModal;\r\n","import axios from 'axios';\r\n\r\nconst floorToOne = (n) => {\r\n  const temp = Math.floor(n * 10);\r\n  return temp / 10;\r\n};\r\n\r\nconst saveDB = (state) => {\r\n  const urlOrigin = window.location.origin;\r\n  let token = localStorage.getItem('token');\r\n  if (Array.isArray(token)) {\r\n    token = token.join('');\r\n  }\r\n\r\n  if (token) {\r\n    axios({\r\n      url: `${urlOrigin}/api/`,\r\n      method: 'post',\r\n      data: {\r\n        state,\r\n      },\r\n      headers: {\r\n        'x-auth-token': token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  }\r\n  return state;\r\n};\r\n\r\nexport { floorToOne, saveDB };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport RemoveModal from './RemoveModal';\r\nimport { removeBookmarkedMeal as removeBookmarkedMealAction } from '../actions';\r\nimport { floorToOne } from '../utils';\r\n\r\nclass MealSnippet extends React.Component {\r\n  state = {\r\n    removeModalShow: false,\r\n  };\r\n\r\n  handleRemoveButton = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      removeModalShow: true,\r\n    });\r\n  };\r\n\r\n  handleBackButton = () => {\r\n    this.setState({\r\n      removeModalShow: false,\r\n    });\r\n  };\r\n\r\n  handleRemoveModal = (sure) => {\r\n    const { type, name, removeBookmarkedMeal } = this.props;\r\n    if (sure) {\r\n      removeBookmarkedMeal(type, name);\r\n    }\r\n    this.setState({\r\n      removeModalShow: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, type, time, substances, ingredients, isRemovable } = this.props;\r\n    const { removeModalShow } = this.state;\r\n    const thetime = new Date(time);\r\n    const ingredientsList = ingredients.map((i) => i.name).join(', ');\r\n    return (\r\n      <>\r\n        {isRemovable && removeModalShow && (\r\n          <RemoveModal\r\n            title=\"Are you sure?\"\r\n            subtitle={`Do you really want to delete saved meal called: ${name}`}\r\n            click={this.handleRemoveModal}\r\n          />\r\n        )}\r\n        <div className=\"box meal-snippet has-text-grey-darker\">\r\n          <h3 className=\"title is-size-5\">{name}</h3>\r\n          {time && (\r\n            <h4 className=\"subtitle has-text-grey is-size-6\">\r\n              {`${type} ${\r\n                thetime.getHours().toString().length === 2\r\n                  ? thetime.getHours()\r\n                  : `0${thetime.getHours()}`\r\n              }:${\r\n                thetime.getMinutes().toString().length === 2\r\n                  ? thetime.getMinutes()\r\n                  : `0${thetime.getMinutes()}`\r\n              } `}\r\n            </h4>\r\n          )}\r\n          {isRemovable && <h4 className=\"subtitle has-text-grey is-size-6\">{ingredientsList}</h4>}\r\n          {isRemovable && (\r\n            <a href=\"/\" onClick={this.handleRemoveButton} className=\"has-text-danger\">\r\n              Remove\r\n            </a>\r\n          )}\r\n          <footer className=\"is-size-7\">\r\n            <p>\r\n              <span>\r\n                Proteins:\r\n                <b> {substances.proteins ? floorToOne(substances.proteins) : '-- '}g</b>\r\n              </span>\r\n              <span>\r\n                Fats:\r\n                <b> {substances.fats ? floorToOne(substances.fats) : '-- '}g</b>\r\n              </span>\r\n              <span>\r\n                Carbs:\r\n                <b> {substances.carbs ? floorToOne(substances.carbs) : '-- '}g</b>\r\n              </span>\r\n              <span>\r\n                kcal:\r\n                <b> {substances.calories ? floorToOne(substances.calories) : '-- '}kcal</b>\r\n              </span>\r\n            </p>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeBookmarkedMeal: (type, name) => dispatch(removeBookmarkedMealAction(type, name)),\r\n});\r\n\r\nMealSnippet.propTypes = {\r\n  time: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  removeBookmarkedMeal: PropTypes.func.isRequired,\r\n  isRemovable: PropTypes.bool,\r\n  ingredients: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      substrances: PropTypes.object.isRequired,\r\n    }),\r\n  ),\r\n  substances: PropTypes.shape({\r\n    proteins: PropTypes.number.isRequired,\r\n    fats: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    calories: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nMealSnippet.defaultProps = {\r\n  isRemovable: false,\r\n  ingredients: [],\r\n  type: '',\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(MealSnippet);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport PropTypes from 'prop-types';\r\nimport { editDay as editDayAction, saveNewDay as saveNewDayAction } from '../actions';\r\n\r\nclass DayModal extends React.Component {\r\n  state = {\r\n    date: null,\r\n    isSelected: false,\r\n    error: false,\r\n    dateExists: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const html = document.getElementById('document-root');\r\n    html.classList.add('no-overflow');\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    const html = document.getElementById('document-root');\r\n    html.classList.remove('no-overflow');\r\n  };\r\n\r\n  handleDateChange = (date) => {\r\n    const { days } = this.props;\r\n    const dates = days.map((d) => {\r\n      return new Date(d.date).getTime();\r\n    });\r\n    if (dates.includes(new Date(date).getTime())) {\r\n      this.setState({\r\n        date: null,\r\n        dateExists: true,\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      date,\r\n      isSelected: true,\r\n      dateExists: false,\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  handleSaveDay = () => {\r\n    const { date, isSelected } = this.state;\r\n    const { saveNewDay, close, isEdit, editDay, dayId } = this.props;\r\n\r\n    if (!isSelected) {\r\n      this.setState({\r\n        error: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (isEdit) {\r\n      this.setState({\r\n        isSelected: false,\r\n        dateExists: false,\r\n      });\r\n      editDay(dayId, date);\r\n      close();\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      isSelected: false,\r\n      dateExists: false,\r\n    });\r\n\r\n    saveNewDay(date);\r\n    close();\r\n  };\r\n\r\n  render() {\r\n    const { date, error, dateExists } = this.state;\r\n    const { isEdit, close } = this.props;\r\n\r\n    return (\r\n      <div className=\"modal\">\r\n        <div className=\"modal-background\"> </div>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <h1 className=\"is-size-4\">{isEdit ? 'Edit day' : 'Add new day'}</h1>\r\n          </header>\r\n          <section>\r\n            <div className=\"control\">\r\n              <h2 className=\"is-size-5 has-text-weight-semibold\">Select date:</h2>\r\n              <DatePicker\r\n                className=\"input\"\r\n                selected={date}\r\n                onChange={this.handleDateChange}\r\n                shouldCloseOnSelect\r\n              />\r\n            </div>\r\n            {error && <p className=\"has-text-danger\">Select date before saving</p>}\r\n            {dateExists && <p className=\"has-text-danger\">This day is already set</p>}\r\n            <br />\r\n            <button type=\"submit\" className=\"button is-success\" onClick={close}>\r\n              Back\r\n            </button>\r\n            <button type=\"submit\" className=\"button is-info\" onClick={this.handleSaveDay}>\r\n              Save\r\n            </button>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  editDay: (dayId, date) => dispatch(editDayAction(dayId, date)),\r\n  saveNewDay: (date) => dispatch(saveNewDayAction(date)),\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { days } = state;\r\n  return {\r\n    days,\r\n    state,\r\n  };\r\n};\r\n\r\nDayModal.propTypes = {\r\n  editDay: PropTypes.func.isRequired,\r\n  saveNewDay: PropTypes.func.isRequired,\r\n  dayId: PropTypes.number.isRequired,\r\n  isEdit: PropTypes.bool.isRequired,\r\n  close: PropTypes.func.isRequired,\r\n  days: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DayModal);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { routes } from '../routes';\r\nimport { removeDay as removeDayAction } from '../actions';\r\nimport RemoveModal from './RemoveModal';\r\nimport DayModal from './DayModal';\r\n\r\nclass DayNote extends React.Component {\r\n  state = {\r\n    removeModalShow: false,\r\n    editModalShow: false,\r\n  };\r\n\r\n  handleEditButton = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      editModalShow: true,\r\n    });\r\n  };\r\n\r\n  handleRemoveButton = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      removeModalShow: true,\r\n    });\r\n  };\r\n\r\n  handleBackButton = () => {\r\n    this.setState({\r\n      editModalShow: false,\r\n    });\r\n  };\r\n\r\n  handleRemoveModal = (sure) => {\r\n    const { identity, removeDay } = this.props;\r\n    if (sure) {\r\n      removeDay(identity);\r\n    }\r\n    this.setState({\r\n      removeModalShow: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { children, path, date, substances, config, identity } = this.props;\r\n    const { removeModalShow, editModalShow } = this.state;\r\n    const numdate = new Date(date);\r\n    return (\r\n      <>\r\n        {removeModalShow && (\r\n          <RemoveModal\r\n            title=\"Are you sure?\"\r\n            subtitle=\"Do you really want to remove this day?\"\r\n            click={this.handleRemoveModal}\r\n          />\r\n        )}\r\n        {editModalShow && (\r\n          <DayModal\r\n            title=\"Change day's date\"\r\n            subtitle=\"Enter the new date for this day\"\r\n            date={date}\r\n            close={this.handleBackButton}\r\n            dayId={identity}\r\n            isEdit\r\n          />\r\n        )}\r\n        <div className=\"box day-box\">\r\n          <header className=\"card-header\">\r\n            <h2 className=\"card-header-title is-size-4\">\r\n              {`${numdate.getFullYear()}.${\r\n                numdate.getMonth().toString().length === 2\r\n                  ? numdate.getMonth() + 1\r\n                  : `0${numdate.getMonth() + 1}`\r\n              }.${\r\n                numdate.getDate().toString().length === 2\r\n                  ? numdate.getDate()\r\n                  : `0${numdate.getDate()}`\r\n              }`}\r\n            </h2>\r\n            <div className=\"is-pulled-right has-text-right\">\r\n              <a href={`/dashboard/days${path}`} className=\"card-header-item\">\r\n                Show\r\n              </a>\r\n              <a\r\n                href={routes.dashboard}\r\n                onClick={this.handleEditButton}\r\n                className=\"card-header-item\"\r\n              >\r\n                Edit\r\n              </a>\r\n              <a\r\n                href={routes.dashboard}\r\n                onClick={this.handleRemoveButton}\r\n                className=\"card-header-item has-text-danger\"\r\n              >\r\n                Remove\r\n              </a>\r\n            </div>\r\n          </header>\r\n          <div className=\"card-content\">\r\n            <div className=\"content\">{children}</div>\r\n          </div>\r\n          <footer className=\"card-footer ingredients\">\r\n            <p className=\"card-footer-item is-size-7\">\r\n              Proteins:\r\n              {substances.proteins < config.Pmin && (\r\n                <strong className=\"has-text-danger\"> {substances.proteins}g (L)</strong>\r\n              )}\r\n              {substances.proteins > config.Pmax && (\r\n                <strong className=\"has-text-danger\"> {substances.proteins}g (H)</strong>\r\n              )}\r\n              {substances.proteins > config.Pmin && substances.proteins < config.Pmax && (\r\n                <strong> {substances.proteins}g</strong>\r\n              )}\r\n            </p>\r\n            <p className=\"card-footer-item is-size-7\">\r\n              Fats:\r\n              {substances.fats < config.Fmin && (\r\n                <strong className=\"has-text-danger\"> {substances.fats}g (L)</strong>\r\n              )}\r\n              {substances.fats > config.Fmax && (\r\n                <strong className=\"has-text-danger\"> {substances.fats}g (H)</strong>\r\n              )}\r\n              {substances.fats > config.Fmin && substances.fats < config.Fmax && (\r\n                <strong> {substances.fats}g</strong>\r\n              )}\r\n            </p>\r\n            <p className=\"card-footer-item is-size-7\">\r\n              Carbs:\r\n              {substances.carbs < config.Cmin && (\r\n                <strong className=\"has-text-danger\"> {substances.carbs}g (L)</strong>\r\n              )}\r\n              {substances.carbs > config.Cmax && (\r\n                <strong className=\"has-text-danger\"> {substances.carbs}g (H)</strong>\r\n              )}\r\n              {substances.carbs > config.Cmin && substances.carbs < config.Cmax && (\r\n                <strong> {substances.carbs}g</strong>\r\n              )}\r\n            </p>\r\n            <p className=\"card-footer-item is-size-7\">\r\n              Calories:\r\n              {substances.calories < config.BMR - 100 + 300 * config.goal && (\r\n                <strong className=\"has-text-danger\"> {substances.calories}g (L)</strong>\r\n              )}\r\n              {substances.calories > config.BMR + 100 + 300 * config.goal && (\r\n                <strong className=\"has-text-danger\"> {substances.calories}g (H)</strong>\r\n              )}\r\n              {substances.calories > config.BMR - 100 + 300 * config.goal &&\r\n                substances.calories < config.BMR + 100 + 300 * config.goal && (\r\n                  <strong> {substances.calories} kcal</strong>\r\n                )}\r\n            </p>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeDay: (id) => dispatch(removeDayAction(id)),\r\n});\r\n\r\nDayNote.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n  identity: PropTypes.number.isRequired,\r\n  removeDay: PropTypes.func.isRequired,\r\n  substances: PropTypes.shape({\r\n    proteins: PropTypes.number,\r\n    fats: PropTypes.number,\r\n    carbs: PropTypes.number,\r\n    calories: PropTypes.number,\r\n  }),\r\n  config: PropTypes.shape({\r\n    Pmin: PropTypes.number.isRequired,\r\n    Pmax: PropTypes.number.isRequired,\r\n    Fmin: PropTypes.number.isRequired,\r\n    Fmax: PropTypes.number.isRequired,\r\n    Cmin: PropTypes.number.isRequired,\r\n    Cmax: PropTypes.number.isRequired,\r\n    BMR: PropTypes.number.isRequired,\r\n    goal: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nDayNote.defaultProps = {\r\n  substances: {\r\n    proteins: 0,\r\n    fats: 0,\r\n    carbs: 0,\r\n    calories: 0,\r\n  },\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(DayNote);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Card from '../templates/Card';\r\nimport MealSnippet from '../components/MealSnippet';\r\nimport DayNote from '../components/DayNote';\r\nimport DayModal from '../components/DayModal';\r\n\r\nclass Dashboard extends React.Component {\r\n  state = {\r\n    modalOpened: false,\r\n  };\r\n\r\n  handleAddNew = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      modalOpened: true,\r\n    });\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({\r\n      modalOpened: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { days, config, loggedAs } = this.props;\r\n    const { modalOpened } = this.state;\r\n    const dayList = !days.length ? (\r\n      <p className=\"subtitle is-size-4 has-text-centered\">No days in menu yet</p>\r\n    ) : (\r\n      days.map((d) => {\r\n        const mealList = !d.meals.length ? (\r\n          <p className=\"subtitle is-size-4 has-text-centered\">No meals in this day yet</p>\r\n        ) : (\r\n          d.meals.map((m) => (\r\n            <MealSnippet\r\n              key={`${m.name}-${d.id}`}\r\n              type={m.type}\r\n              name={m.name}\r\n              time={m.time}\r\n              substances={m.substances}\r\n            />\r\n          ))\r\n        );\r\n        return (\r\n          <>\r\n            <DayNote\r\n              key={`${d.id}`}\r\n              identity={d.id}\r\n              date={d.date}\r\n              path={d.path}\r\n              substances={d.substances}\r\n              config={config}\r\n            >\r\n              {mealList}\r\n            </DayNote>\r\n          </>\r\n        );\r\n      })\r\n    );\r\n    return (\r\n      <>\r\n        {modalOpened && <DayModal days={days} close={this.handleCloseModal} />}\r\n        <Card\r\n          title=\"Dashboard\"\r\n          subtitle={`${loggedAs && `Logged as ${loggedAs}. `} Organize your meals in each day`}\r\n        >\r\n          <div className=\"add-new has-text-centered\">\r\n            <p className=\"subtitle has-text-centered\">Add one day to menu:</p>\r\n            <button type=\"button\" className=\"button\" onClick={this.handleAddNew}>\r\n              Add day\r\n            </button>\r\n          </div>\r\n          {dayList}\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { days, config, loggedAs } = state;\r\n  return {\r\n    days,\r\n    config,\r\n    loggedAs,\r\n  };\r\n};\r\n\r\nDashboard.propTypes = {\r\n  days: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  config: PropTypes.shape({\r\n    Pmin: PropTypes.number.isRequired,\r\n    Pmax: PropTypes.number.isRequired,\r\n    Fmin: PropTypes.number.isRequired,\r\n    Fmax: PropTypes.number.isRequired,\r\n    Cmin: PropTypes.number.isRequired,\r\n    Cmax: PropTypes.number.isRequired,\r\n    BMR: PropTypes.number.isRequired,\r\n    goal: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '../templates/Card';\r\nimport MealSnippet from '../components/MealSnippet';\r\n\r\nconst SavedMeals = ({ savedMeals }) => {\r\n  const meals = savedMeals.map((m) => (\r\n    <MealSnippet\r\n      key={`${m.name}-${m.type}`}\r\n      name={m.name}\r\n      substances={m.substances}\r\n      ingredients={m.ingredients}\r\n      path={m.path}\r\n      isRemovable\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Card title=\"Saved Meals\" subtitle=\"You can organize here your saved meals\">\r\n      {meals.length === 0 && (\r\n        <p className=\"subtitle is-size-4 has-text-centered\">No saved meals at the moment</p>\r\n      )}\r\n      {meals}\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { savedMeals } = state;\r\n  return { savedMeals };\r\n};\r\n\r\nSavedMeals.propTypes = {\r\n  savedMeals: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(SavedMeals);\r\n","/* eslint-disable react/destructuring-assignment */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  addIngredient as addIngredientAction,\r\n  editIngredient as editIngredientAction,\r\n  recountSubstances as recountSubstancesAction,\r\n} from '../actions';\r\nimport { floorToOne } from '../utils';\r\n\r\nclass IngredientModal extends React.Component {\r\n  state = {\r\n    name: this.props.name || '',\r\n    quantity: this.props.quantity || 0,\r\n    proteins: this.props.substances.proteins || 0,\r\n    fats: this.props.substances.fats || 0,\r\n    carbs: this.props.substances.carbs || 0,\r\n    calories: this.props.substances.calories || 0,\r\n    error: false,\r\n    nameExists: false,\r\n    searchOpened: false,\r\n    searchField: '',\r\n    searchError: false,\r\n    searchServerFail: false,\r\n    searched: [],\r\n  };\r\n\r\n  prevName = (() => {\r\n    const { name } = this.props;\r\n    return name;\r\n  })();\r\n\r\n  componentDidMount = () => {\r\n    const html = document.getElementById('document-root');\r\n    html.classList.add('no-overflow');\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    const html = document.getElementById('document-root');\r\n    html.classList.remove('no-overflow');\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const { ingredientNames } = this.props;\r\n    const [, value] = e.target.getAttribute('id').split('-');\r\n    if (value === 'name' && !ingredientNames.includes(e.target.value)) {\r\n      this.setState({\r\n        [value]: e.target.value,\r\n        nameExists: false,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (value === 'name' && ingredientNames.includes(e.target.value)) {\r\n      this.setState({\r\n        [value]: e.target.value,\r\n        nameExists: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (value === 'search') {\r\n      this.setState({\r\n        searchField: e.target.value,\r\n        searchError: false,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      [value]: +e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSaveButton = () => {\r\n    const { name, quantity, proteins, fats, carbs, calories, nameExists } = this.state;\r\n    const {\r\n      ingredientNames,\r\n      addIngredient,\r\n      dayId,\r\n      mealType,\r\n      close,\r\n      isEdit,\r\n      editIngredient,\r\n      recountSubstances,\r\n    } = this.props;\r\n\r\n    if (ingredientNames.includes(name) && !isEdit) {\r\n      this.setState({\r\n        nameExists: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (\r\n      name &&\r\n      quantity &&\r\n      proteins >= 0 &&\r\n      fats >= 0 &&\r\n      carbs >= 0 &&\r\n      calories &&\r\n      !nameExists &&\r\n      !isEdit\r\n    ) {\r\n      this.setState({\r\n        error: false,\r\n        nameExists: false,\r\n      });\r\n\r\n      addIngredient(dayId, mealType, name, floorToOne(quantity), {\r\n        proteins: floorToOne((proteins * quantity) / 100),\r\n        fats: floorToOne((fats * quantity) / 100),\r\n        carbs: floorToOne((carbs * quantity) / 100),\r\n        calories: floorToOne((calories * quantity) / 100),\r\n      });\r\n      recountSubstances();\r\n      close();\r\n    }\r\n\r\n    if (quantity && proteins >= 0 && fats >= 0 && carbs >= 0 && calories && !nameExists && isEdit) {\r\n      this.setState({\r\n        error: false,\r\n        nameExists: false,\r\n      });\r\n\r\n      editIngredient(\r\n        dayId,\r\n        mealType,\r\n        name,\r\n        floorToOne(quantity),\r\n        {\r\n          proteins: floorToOne((proteins * quantity) / 100),\r\n          fats: floorToOne((fats * quantity) / 100),\r\n          carbs: floorToOne((carbs * quantity) / 100),\r\n          calories: floorToOne((calories * quantity) / 100),\r\n        },\r\n        this.prevName,\r\n      );\r\n      recountSubstances();\r\n      close();\r\n    }\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  };\r\n\r\n  handleFromBookmarks = (e) => {\r\n    const { savedIngredients } = this.props;\r\n    const { value } = e.target;\r\n    const [ingredient] = savedIngredients.filter((i) => i.name === value);\r\n    if (ingredient && value) {\r\n      this.setState({\r\n        name: value,\r\n        proteins: ingredient.substances.proteins,\r\n        fats: ingredient.substances.fats,\r\n        carbs: ingredient.substances.carbs,\r\n        calories: ingredient.substances.calories,\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      name: '',\r\n      proteins: 0,\r\n      fats: 0,\r\n      carbs: 0,\r\n      calories: 0,\r\n    });\r\n  };\r\n\r\n  handleOpenSearch = () => {\r\n    this.setState((prevState) => ({\r\n      searchOpened: !prevState.searchOpened,\r\n      searchServerFail: false,\r\n    }));\r\n  };\r\n\r\n  handleSearchProduct = () => {\r\n    const { searchField } = this.state;\r\n    if (searchField.length < 3) {\r\n      this.setState({ searchError: true });\r\n      return;\r\n    }\r\n\r\n    const urlOrigin = window.location.origin;\r\n    const ua = window.navigator.oscpu;\r\n\r\n    axios({\r\n      url: `${urlOrigin}/api/search`,\r\n      method: 'post',\r\n      data: {\r\n        search: searchField,\r\n        ua,\r\n      },\r\n    })\r\n      .then((data) => {\r\n        this.setState((prevState) => ({\r\n          searchServerFail: false,\r\n          searchError: false,\r\n          searched: data.data.products.map((p, i) => ({\r\n            id: +i,\r\n            name: p.generic_name || p.product_name || 'No name',\r\n            img: p.image_small_url,\r\n            substances: {\r\n              proteins: +p.nutriments.proteins_100g || 0,\r\n              fats: +p.nutriments.fat_100g || 0,\r\n              carbs: +p.nutriments.carbohydrates_100g || 0,\r\n              calories: +p.nutriments['energy-kcal_value'] || 0,\r\n            },\r\n          })),\r\n        }));\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        this.setState({\r\n          searchServerFail: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleUseProduct = (e) => {\r\n    e.preventDefault();\r\n    const id = +e.target.getAttribute('data-id');\r\n    const products = this.state.searched;\r\n    const [theProduct] = products.filter((p) => id === p.id);\r\n    this.setState({\r\n      name: theProduct.name,\r\n      proteins: +theProduct.substances.proteins,\r\n      fats: +theProduct.substances.fats,\r\n      carbs: +theProduct.substances.carbs,\r\n      calories: +theProduct.substances.calories,\r\n      searchOpened: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { close, savedIngredients, isEdit } = this.props;\r\n    const {\r\n      name,\r\n      quantity,\r\n      proteins,\r\n      fats,\r\n      carbs,\r\n      calories,\r\n      error,\r\n      nameExists,\r\n      searchOpened,\r\n      searchField,\r\n      searchError,\r\n      searchServerFail,\r\n      searched,\r\n    } = this.state;\r\n    const searchedProducts =\r\n      searched.length &&\r\n      searched.map((s) => (\r\n        <div key={`${s.calories}$-${s.name}`} className=\"product box\">\r\n          <div className=\"columns\">\r\n            <div className=\"column is-half\">\r\n              <p className=\"is-size-5 has-text-weight-semibold\">{s.name}</p>\r\n              <p className=\"nutrients\">\r\n                <span>Proteins: {s.substances.proteins}g</span>\r\n                <span>Fats: {s.substances.fats}g</span>\r\n                <span>Carbs: {s.substances.carbs}g</span>\r\n                <span>Calories: {s.substances.calories}g</span>\r\n              </p>\r\n            </div>\r\n            <div className=\"column is-half\">\r\n              <div className=\"img\">\r\n                <img src={`${s.img}`} alt={s.name} />\r\n              </div>\r\n              <a\r\n                type=\"button\"\r\n                className=\"button is-info\"\r\n                data-id={s.id}\r\n                onClick={this.handleUseProduct}\r\n                href=\"/\"\r\n              >\r\n                Use\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ));\r\n    return (\r\n      <div className=\"modal\">\r\n        <div className=\"modal-background\"> </div>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-header-title is-size-4\">{isEdit ? 'Edit' : 'Add new'} ingredient</p>\r\n            <button type=\"button\" className=\"delete\" aria-label=\"close\" onClick={close} />\r\n          </header>\r\n          {!searchOpened && (\r\n            <section className=\"scrollable\">\r\n              <div className=\"columns\">\r\n                <div className=\"column is-half\">\r\n                  <div className=\"control\">\r\n                    <label htmlFor=\"ingredient-name\" className=\"is-size-5 has-text-weight-semibold\">\r\n                      Name of ingredient:\r\n                      <input\r\n                        id=\"ingredient-name\"\r\n                        className=\"input\"\r\n                        type=\"text\"\r\n                        onChange={this.handleInputChange}\r\n                        value={name}\r\n                      />\r\n                    </label>\r\n                    {nameExists && (\r\n                      <p className=\"has-text-danger\">\r\n                        This ingredient&apos;s name already exists. Enter different.\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"control\">\r\n                    <label\r\n                      htmlFor=\"ingredient-proteins\"\r\n                      className=\"is-size-5 has-text-weight-semibold\"\r\n                    >\r\n                      Proteins (in 100g):\r\n                      <input\r\n                        id=\"ingredient-proteins\"\r\n                        className=\"input\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        onChange={this.handleInputChange}\r\n                        value={proteins}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"control\">\r\n                    <label htmlFor=\"ingredient-fats\" className=\"is-size-5 has-text-weight-semibold\">\r\n                      Fats (in 100g):\r\n                      <input\r\n                        id=\"ingredient-fats\"\r\n                        className=\"input\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        onChange={this.handleInputChange}\r\n                        value={fats}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"control\">\r\n                    <label\r\n                      htmlFor=\"ingredient-carbs\"\r\n                      className=\"is-size-5 has-text-weight-semibold\"\r\n                    >\r\n                      Carbs (in 100g):\r\n                      <input\r\n                        id=\"ingredient-carbs\"\r\n                        className=\"input\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        onChange={this.handleInputChange}\r\n                        value={carbs}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"control\">\r\n                    <label\r\n                      htmlFor=\"ingredient-calories\"\r\n                      className=\"is-size-5 has-text-weight-semibold\"\r\n                    >\r\n                      Calories (kcal in 100g):\r\n                      <input\r\n                        id=\"ingredient-calories\"\r\n                        className=\"input\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        onChange={this.handleInputChange}\r\n                        value={calories}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"control\">\r\n                    <label\r\n                      htmlFor=\"ingredient-quantity\"\r\n                      className=\"is-size-5 has-text-weight-semibold\"\r\n                    >\r\n                      Quantity (in g):\r\n                      <input\r\n                        id=\"ingredient-quantity\"\r\n                        className=\"input\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        onChange={this.handleInputChange}\r\n                        value={quantity}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"column is-half\">\r\n                  <div className=\"control\">\r\n                    <label\r\n                      htmlFor=\"ingredient-bookmark\"\r\n                      className=\"is-size-5 has-text-weight-semibold\"\r\n                    >\r\n                      Select from bookmarks\r\n                      <div className=\"select\">\r\n                        <select onChange={this.handleFromBookmarks} id=\"ingredient-bookmark\">\r\n                          <option value={null}>Select meal&apos;s type</option>\r\n                          {!!savedIngredients.length &&\r\n                            savedIngredients.map((i) => (\r\n                              <option key={`${i.name}-${i.calories}`} value={i.name}>\r\n                                {i.name}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </div>\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"control\">\r\n                    <p className=\"is-size-5 has-text-weight-semibold\">\r\n                      Search in OpenFoodFacts.org:\r\n                    </p>\r\n                    <br />\r\n                    <button\r\n                      id=\"search-ingredient\"\r\n                      className=\"button is-primary\"\r\n                      type=\"button\"\r\n                      onClick={this.handleOpenSearch}\r\n                    >\r\n                      Open Search\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <p className=\"subtitle has-text-link\">\r\n                <span className=\"has-text-weight-semibold\">These substances will be saved:</span>\r\n                <br />\r\n                {`Proteins: ${floorToOne((proteins * quantity) / 100)}g, `}\r\n                <br />\r\n                {`Fats: ${floorToOne((fats * quantity) / 100)}g, `}\r\n                <br />\r\n                {`Carbs: ${floorToOne((carbs * quantity) / 100)}g, `}\r\n                <br />\r\n                {`Calories: ${floorToOne((calories * quantity) / 100)} kcal`}\r\n              </p>\r\n              {error && <p className=\"has-text-danger\">Fill all fields correctly</p>}\r\n              <button type=\"submit\" className=\"button is-success\" onClick={close}>\r\n                Back\r\n              </button>\r\n              <button type=\"submit\" className=\"button is-info\" onClick={this.handleSaveButton}>\r\n                Save\r\n              </button>\r\n            </section>\r\n          )}\r\n          {searchOpened && (\r\n            <section className=\"scrollable\">\r\n              <div className=\"columns\">\r\n                <div className=\"column is-half\">\r\n                  <div className=\"control\">\r\n                    <label className=\"is-size-5 has-text-weight-semibold\" htmlFor=\"product-search\">\r\n                      Search for product\r\n                      <input\r\n                        id=\"product-search\"\r\n                        className=\"input\"\r\n                        type=\"text\"\r\n                        onChange={this.handleInputChange}\r\n                        value={searchField}\r\n                      />\r\n                    </label>\r\n                    {searchError && (\r\n                      <>\r\n                        <p className=\"has-text-danger\">\r\n                          You must provide at least 3 character in length product name\r\n                        </p>\r\n                        <br />\r\n                      </>\r\n                    )}\r\n                    {searchServerFail && (\r\n                      <>\r\n                        <p className=\"has-text-danger\">Server failed loading products</p>\r\n                        <br />\r\n                      </>\r\n                    )}\r\n                    <button\r\n                      className=\"button is-primary\"\r\n                      type=\"button\"\r\n                      onClick={this.handleSearchProduct}\r\n                    >\r\n                      Search\r\n                    </button>\r\n                    <button\r\n                      className=\"button is-info\"\r\n                      type=\"button\"\r\n                      onClick={this.handleOpenSearch}\r\n                    >\r\n                      Back\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"product-search\">{searchedProducts ? searchedProducts : null}</div>\r\n            </section>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIngredientModal.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  addIngredient: PropTypes.func.isRequired,\r\n  recountSubstances: PropTypes.func.isRequired,\r\n  quantity: PropTypes.number,\r\n  name: PropTypes.string,\r\n  substances: PropTypes.shape({\r\n    proteins: PropTypes.number,\r\n    fats: PropTypes.number,\r\n    carbs: PropTypes.number,\r\n    calories: PropTypes.number,\r\n  }),\r\n  ingredientNames: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  mealType: PropTypes.string.isRequired,\r\n  dayId: PropTypes.number.isRequired,\r\n  editIngredient: PropTypes.func.isRequired,\r\n  isEdit: PropTypes.bool,\r\n  savedIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nIngredientModal.defaultProps = {\r\n  name: '',\r\n  quantity: 0,\r\n  isEdit: false,\r\n  substances: {\r\n    proteins: 0,\r\n    fats: 0,\r\n    carbs: 0,\r\n    calories: 0,\r\n  },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { savedIngredients } = state;\r\n  return {\r\n    savedIngredients,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addIngredient: (dayId, mealType, name, quantity, substances) =>\r\n    dispatch(addIngredientAction(dayId, mealType, name, quantity, substances)),\r\n  editIngredient: (dayId, mealType, name, quantity, substances, prevName) =>\r\n    dispatch(editIngredientAction(dayId, mealType, name, quantity, substances, prevName)),\r\n  recountSubstances: () => dispatch(recountSubstancesAction()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientModal);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst OkModal = ({ title, subtitle, click }) => (\r\n  <div className=\"modal\">\r\n    <div className=\"modal-background\"> </div>\r\n    <div className=\"modal-card\">\r\n      <header className=\"modal-card-head\">\r\n        <h1 className=\"is-size-4\">{title}</h1>\r\n      </header>\r\n\r\n      <section>\r\n        <p className=\"is-size-5\">{subtitle}</p>\r\n        <br />\r\n        <button type=\"button\" className=\"button is-info\" onClick={click}>\r\n          OK\r\n        </button>\r\n      </section>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nOkModal.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n  click: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default OkModal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  removeIngredient as removeIngredientAction,\r\n  removeBookmarkedIngredient as removeBookmarkedIngredientAction,\r\n  recountSubstances as recountSubstancesAction,\r\n  bookmarkIngredient as bookmarkIngredientAction,\r\n} from '../actions';\r\nimport RemoveModal from './RemoveModal';\r\nimport IngredientModal from './IngredientModal';\r\nimport OkModal from './OkModal';\r\nimport { floorToOne } from '../utils';\r\n\r\nclass IngredientSnippet extends React.Component {\r\n  state = {\r\n    removeModalShow: false,\r\n    editModalShow: false,\r\n    bookmarkModalShow: false,\r\n  };\r\n\r\n  handleRemoveButton = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      removeModalShow: true,\r\n    });\r\n  };\r\n\r\n  handleEditButton = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      editModalShow: true,\r\n    });\r\n  };\r\n\r\n  handleBackButton = () => {\r\n    this.setState({\r\n      editModalShow: false,\r\n    });\r\n  };\r\n\r\n  handleRemoveModal = (sure) => {\r\n    const {\r\n      dayId,\r\n      mealType,\r\n      name,\r\n      removeIngredient,\r\n      recountSubstances,\r\n      removeBookmarkedIngredient,\r\n      isntEditable,\r\n    } = this.props;\r\n\r\n    if (sure && isntEditable) {\r\n      removeBookmarkedIngredient(name);\r\n      this.setState({\r\n        removeModalShow: false,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (sure) {\r\n      removeIngredient(dayId, mealType, name);\r\n      recountSubstances();\r\n    }\r\n    this.setState({\r\n      removeModalShow: false,\r\n    });\r\n  };\r\n\r\n  handleBookmarkIngredient = (e) => {\r\n    const { name, substances, bookmarkIngredient, quantity } = this.props;\r\n    e.preventDefault();\r\n    bookmarkIngredient(name, {\r\n      proteins: floorToOne((substances.proteins * 100) / quantity),\r\n      fats: floorToOne((substances.fats * 100) / quantity),\r\n      carbs: floorToOne((substances.carbs * 100) / quantity),\r\n      calories: floorToOne((substances.calories * 100) / quantity),\r\n    });\r\n    this.setState({\r\n      bookmarkModalShow: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      substances,\r\n      quantity,\r\n      ingredientNames,\r\n      dayId,\r\n      mealType,\r\n      savedIngredients,\r\n      isntEditable,\r\n    } = this.props;\r\n    const { removeModalShow, editModalShow, bookmarkModalShow } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {removeModalShow && (\r\n          <RemoveModal\r\n            title=\"Are you sure?\"\r\n            subtitle={`Do you really want to remove this ingredient: ${name}?`}\r\n            click={this.handleRemoveModal}\r\n          />\r\n        )}\r\n        {editModalShow && (\r\n          <IngredientModal\r\n            name={name}\r\n            quantity={quantity}\r\n            substances={substances}\r\n            close={this.handleBackButton}\r\n            ingredientNames={ingredientNames}\r\n            dayId={dayId}\r\n            mealType={mealType}\r\n            isEdit\r\n          />\r\n        )}\r\n        {bookmarkModalShow && (\r\n          <OkModal\r\n            title=\"Ingredient bookmarked\"\r\n            subtitle=\"You ingredient has been added to ingredients page\"\r\n            click={() => this.setState({ bookmarkModalShow: false })}\r\n          />\r\n        )}\r\n        <div className=\"box meal-snippet has-text-white has-text-grey-darker\">\r\n          <h3 className=\"title is-size-5\">{name}</h3>\r\n          {!isntEditable && <h4 className=\"subtitle has-text-grey is-size-6\">{`${quantity}g`}</h4>}\r\n          <div>\r\n            {!isntEditable && (\r\n              <a href=\"/\" onClick={this.handleEditButton}>\r\n                Edit\r\n              </a>\r\n            )}\r\n            {!savedIngredients.map((i) => i.name).includes(name) && (\r\n              <a href=\"/\" onClick={this.handleBookmarkIngredient}>\r\n                Bookmark\r\n              </a>\r\n            )}\r\n            <a href=\"/\" onClick={this.handleRemoveButton} className=\"has-text-danger\">\r\n              Remove\r\n            </a>\r\n          </div>\r\n          <footer className=\"is-size-7\">\r\n            <p>\r\n              <span>\r\n                Proteins:\r\n                <b> {floorToOne(substances.proteins)}g</b>\r\n              </span>\r\n              <span>\r\n                Fats:\r\n                <b> {floorToOne(substances.fats)}g</b>\r\n              </span>\r\n              <span>\r\n                Carbs:\r\n                <b> {floorToOne(substances.carbs)}g</b>\r\n              </span>\r\n              <span>\r\n                kcal:\r\n                <b> {floorToOne(substances.calories)}</b>\r\n              </span>\r\n            </p>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nIngredientSnippet.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  mealType: PropTypes.string.isRequired,\r\n  quantity: PropTypes.number,\r\n  dayId: PropTypes.number.isRequired,\r\n  ingredientNames: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  removeIngredient: PropTypes.func.isRequired,\r\n  bookmarkIngredient: PropTypes.func.isRequired,\r\n  removeBookmarkedIngredient: PropTypes.func.isRequired,\r\n  recountSubstances: PropTypes.func.isRequired,\r\n  savedIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  substances: PropTypes.shape({\r\n    proteins: PropTypes.number,\r\n    fats: PropTypes.number,\r\n    carbs: PropTypes.number,\r\n    calories: PropTypes.number,\r\n  }),\r\n  isntEditable: PropTypes.bool,\r\n};\r\n\r\nIngredientSnippet.defaultProps = {\r\n  quantity: 0,\r\n  substances: {\r\n    proteins: 0,\r\n    fats: 0,\r\n    carbs: 0,\r\n    calories: 0,\r\n  },\r\n  isntEditable: false,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { savedIngredients } = state;\r\n  return {\r\n    savedIngredients,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeIngredient: (dayId, mealType, name) =>\r\n    dispatch(removeIngredientAction(dayId, mealType, name)),\r\n  recountSubstances: () => dispatch(recountSubstancesAction()),\r\n  removeBookmarkedIngredient: (name) => dispatch(removeBookmarkedIngredientAction(name)),\r\n  bookmarkIngredient: (name, substances) => dispatch(bookmarkIngredientAction(name, substances)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientSnippet);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '../templates/Card';\r\nimport IngredientSnippet from '../components/IngredientSnippet';\r\n\r\nconst SavedIngredients = ({ savedIngredients }) => {\r\n  const ingredients = savedIngredients.map((i) => (\r\n    <IngredientSnippet key={i.name} name={i.name} substances={i.substances} isntEditable />\r\n  ));\r\n\r\n  return (\r\n    <Card title=\"Saved Ingredients\" subtitle=\"You can organize here your saved ingredients\">\r\n      {ingredients.length === 0 && (\r\n        <p className=\"subtitle is-size-4 has-text-centered\">No saved ingredients at the moment</p>\r\n      )}\r\n      {ingredients}\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { savedIngredients } = state;\r\n  return { savedIngredients };\r\n};\r\n\r\nSavedIngredients.propTypes = {\r\n  savedIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(SavedIngredients);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '../templates/Card';\r\nimport {\r\n  saveBMR as saveBMRAction,\r\n  saveProportions as saveProportionsAction,\r\n  saveGoal as saveGoalAction,\r\n} from '../actions';\r\nimport { floorToOne } from '../utils';\r\n\r\nclass Configuration extends React.Component {\r\n  state = {\r\n    bmrForm: {\r\n      bodyMass: 0,\r\n      bodyHeight: 0,\r\n      age: 0,\r\n      activity: 0,\r\n      sex: 0,\r\n      error: false,\r\n      result: null,\r\n    },\r\n    proportionsForm: {\r\n      proteins: 0,\r\n      fats: 0,\r\n      carbs: 0,\r\n      error: false,\r\n    },\r\n    goal: {\r\n      value: -2,\r\n      error: false,\r\n    },\r\n  };\r\n\r\n  handleMassChange = (e) => {\r\n    e.persist();\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      bmrForm: {\r\n        ...prevState.bmrForm,\r\n        bodyMass: +e.target.value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleHeightChange = (e) => {\r\n    e.persist();\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      bmrForm: {\r\n        ...prevState.bmrForm,\r\n        bodyHeight: +e.target.value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleAgeChange = (e) => {\r\n    e.persist();\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      bmrForm: {\r\n        ...prevState.bmrForm,\r\n        age: +e.target.value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleActivityChange = (e) => {\r\n    e.persist();\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      bmrForm: {\r\n        ...prevState.bmrForm,\r\n        activity: +e.target.value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleSexChange = (e) => {\r\n    e.persist();\r\n    const sex = +e.target.value;\r\n    let sexTo = null;\r\n    if (sex === 1) {\r\n      sexTo = 1;\r\n    }\r\n    if (sex === 2) {\r\n      sexTo = 2;\r\n    }\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      bmrForm: {\r\n        ...prevState.bmrForm,\r\n        sex: sexTo,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleCalculateButton = () => {\r\n    const { bmrForm } = this.state;\r\n    if (Object.values(bmrForm).indexOf(0) > -1) {\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        bmrForm: {\r\n          ...prevState.bmrForm,\r\n          error: true,\r\n          result: null,\r\n        },\r\n      }));\r\n      return;\r\n    }\r\n\r\n    const { bodyMass, bodyHeight, age, activity, sex } = bmrForm;\r\n    let result;\r\n\r\n    if (sex === 1) {\r\n      result = (9.99 * bodyMass + 6.25 * bodyHeight - 4.92 * age - 161) * activity;\r\n    }\r\n    if (sex === 2) {\r\n      result = (9.99 * bodyMass + 6.25 * bodyHeight - 4.92 * age + 5) * activity;\r\n    }\r\n\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      bmrForm: {\r\n        ...prevState.bmrForm,\r\n        error: false,\r\n        result: floorToOne(result),\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleProteinChange = (e) => {\r\n    e.persist();\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      proportionsForm: {\r\n        ...prevState.proportionsForm,\r\n        proteins: +e.target.value,\r\n        error: false,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleFatsChange = (e) => {\r\n    e.persist();\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      proportionsForm: {\r\n        ...prevState.proportionsForm,\r\n        fats: +e.target.value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleCarbsChange = (e) => {\r\n    e.persist();\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      proportionsForm: {\r\n        ...prevState.proportionsForm,\r\n        carbs: +e.target.value,\r\n        error: false,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleSaveBMR = () => {\r\n    const { yourProteins, yourFats, yourCarbs, yourGoal, saveBMR, saveProportions } = this.props;\r\n    const { bmrForm } = this.state;\r\n\r\n    const minProteins = floorToOne(\r\n      ((yourProteins / (yourProteins + yourFats + yourCarbs)) *\r\n        (bmrForm.result - 100 + yourGoal * 300)) /\r\n        4,\r\n    );\r\n    const maxProteins = floorToOne(\r\n      ((yourProteins / (yourProteins + yourFats + yourCarbs)) *\r\n        (bmrForm.result + 100 + yourGoal * 300)) /\r\n        4,\r\n    );\r\n    const minFats = floorToOne(\r\n      ((yourFats / (yourProteins + yourFats + yourCarbs)) *\r\n        (bmrForm.result - 100 + yourGoal * 300)) /\r\n        9,\r\n    );\r\n    const maxFats = floorToOne(\r\n      ((yourFats / (yourProteins + yourFats + yourCarbs)) *\r\n        (bmrForm.result + 100 + yourGoal * 300)) /\r\n        9,\r\n    );\r\n    const minCarbs = floorToOne(\r\n      ((yourCarbs / (yourProteins + yourFats + yourCarbs)) *\r\n        (bmrForm.result - 100 + yourGoal * 300)) /\r\n        4,\r\n    );\r\n    const maxCarbs = floorToOne(\r\n      ((yourCarbs / (yourProteins + yourFats + yourCarbs)) *\r\n        (bmrForm.result + 100 + yourGoal * 300)) /\r\n        4,\r\n    );\r\n\r\n    saveBMR(bmrForm.result);\r\n    saveProportions({\r\n      ratioP: yourProteins,\r\n      ratioF: yourFats,\r\n      ratioC: yourCarbs,\r\n      Pmin: minProteins,\r\n      Pmax: maxProteins,\r\n      Fmin: minFats,\r\n      Fmax: maxFats,\r\n      Cmin: minCarbs,\r\n      Cmax: maxCarbs,\r\n    });\r\n  };\r\n\r\n  handleSaveProportions = () => {\r\n    const { proportionsForm } = this.state;\r\n    const { proteins, fats, carbs } = proportionsForm;\r\n    const { saveProportions, yourBMR, yourGoal } = this.props;\r\n    if (proteins > 0 && fats >= 0 && carbs > 0) {\r\n      const minProteins = floorToOne(\r\n        ((proteins / (proteins + fats + carbs)) * (yourBMR - 100 + yourGoal * 300)) / 4,\r\n      );\r\n      const maxProteins = floorToOne(\r\n        ((proteins / (proteins + fats + carbs)) * (yourBMR + 100 + yourGoal * 300)) / 4,\r\n      );\r\n      const minFats = floorToOne(\r\n        ((fats / (proteins + fats + carbs)) * (yourBMR - 100 + yourGoal * 300)) / 9,\r\n      );\r\n      const maxFats = floorToOne(\r\n        ((fats / (proteins + fats + carbs)) * (yourBMR + 100 + yourGoal * 300)) / 9,\r\n      );\r\n      const minCarbs = floorToOne(\r\n        ((carbs / (proteins + fats + carbs)) * (yourBMR - 100 + yourGoal * 300)) / 4,\r\n      );\r\n      const maxCarbs = floorToOne(\r\n        ((carbs / (proteins + fats + carbs)) * (yourBMR + 100 + yourGoal * 300)) / 4,\r\n      );\r\n      saveProportions({\r\n        ratioP: proteins,\r\n        ratioF: fats,\r\n        ratioC: carbs,\r\n        Pmin: minProteins,\r\n        Pmax: maxProteins,\r\n        Fmin: minFats,\r\n        Fmax: maxFats,\r\n        Cmin: minCarbs,\r\n        Cmax: maxCarbs,\r\n      });\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        proportionsForm: {\r\n          proteins: 0,\r\n          fats: 0,\r\n          carbs: 0,\r\n          error: false,\r\n        },\r\n      }));\r\n      return;\r\n    }\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      proportionsForm: {\r\n        ...prevState.proportionsForm,\r\n        error: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleGoalChange = (e) => {\r\n    e.persist();\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      goal: {\r\n        value: +e.target.value,\r\n        error: false,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleSaveGoal = () => {\r\n    const { goal } = this.state;\r\n    if (+goal.value === -2) {\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        goal: {\r\n          ...prevState.goal,\r\n          error: true,\r\n        },\r\n      }));\r\n      return;\r\n    }\r\n    const { saveGoal } = this.props;\r\n    saveGoal(goal.value);\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      goal: {\r\n        value: -2,\r\n        error: false,\r\n      },\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { bmrForm, proportionsForm, goal } = this.state;\r\n    const { bodyMass, bodyHeight, age, activity, sex, error: errorBMR, result } = bmrForm;\r\n    const { proteins, fats, carbs, error: propError } = proportionsForm;\r\n    const { value, error: errorGoal } = goal;\r\n    const { yourBMR, yourProteins, yourFats, yourCarbs, yourGoal } = this.props;\r\n\r\n    const minProteins = floorToOne(\r\n      ((yourProteins / (yourProteins + yourFats + yourCarbs)) * (yourBMR - 100 + yourGoal * 300)) /\r\n        4,\r\n    );\r\n    const maxProteins = floorToOne(\r\n      ((yourProteins / (yourProteins + yourFats + yourCarbs)) * (yourBMR + 100 + yourGoal * 300)) /\r\n        4,\r\n    );\r\n    const minFats = floorToOne(\r\n      ((yourFats / (yourProteins + yourFats + yourCarbs)) * (yourBMR - 100 + yourGoal * 300)) / 9,\r\n    );\r\n    const maxFats = floorToOne(\r\n      ((yourFats / (yourProteins + yourFats + yourCarbs)) * (yourBMR + 100 + yourGoal * 300)) / 9,\r\n    );\r\n    const minCarbs = floorToOne(\r\n      ((yourCarbs / (yourProteins + yourFats + yourCarbs)) * (yourBMR - 100 + yourGoal * 300)) / 4,\r\n    );\r\n    const maxCarbs = floorToOne(\r\n      ((yourCarbs / (yourProteins + yourFats + yourCarbs)) * (yourBMR + 100 + yourGoal * 300)) / 4,\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Card\r\n          title=\"Configuration\"\r\n          subtitle=\"You can configure your BMR width activity factor and Protein:Fat:Carbohydrates proportions based on your BMR and activity.\"\r\n        >\r\n          <div className=\"box\">\r\n            <h2 className=\"subtitle is-size-4 has-text-weight-semibold\">\r\n              {`Your current BMR: ${yourBMR} kcal`}\r\n            </h2>\r\n            <h2 className=\"subtitle is-size-4 has-text-weight-semibold\">\r\n              {` Your current proportions: ${yourProteins} : ${yourFats} : ${yourCarbs}`}\r\n            </h2>\r\n            <h2 className=\"subtitle is-size-4 has-text-weight-semibold\">\r\n              Your goal is to\r\n              {yourGoal === -1 && ' loose weight'}\r\n              {yourGoal === 0 && ' keep weight'}\r\n              {yourGoal === 1 && ' gain weight'}\r\n              , so you should eat:\r\n              <br />\r\n              <br />\r\n              {` ${yourBMR - 100 + yourGoal * 300}-${yourBMR + 100 + yourGoal * 300}`} kcal\r\n              <br />\r\n              <br />\r\n              {minProteins === maxProteins\r\n                ? ` ~${maxProteins}g `\r\n                : ` ~${minProteins}-${maxProteins + 1}g `}{' '}\r\n              Proteins\r\n              <br />\r\n              {minFats === maxFats ? ` ~${maxFats}g ` : ` ~${minFats}-${maxFats + 1}g `} Fats\r\n              <br />\r\n              {minCarbs === maxCarbs ? ` ~${maxCarbs}g ` : ` ~${minCarbs}-${maxCarbs + 1}g `}{' '}\r\n              Carbohydrates\r\n            </h2>\r\n          </div>\r\n          <hr />\r\n          <div className=\"box\">\r\n            <h2 className=\"subtitle is-size-3 has-text-weight-semibold\">Calculate your BMR</h2>\r\n            <p className=\"subtitle\">\r\n              Enter the following data to calculate your basal metabolic rate:\r\n            </p>\r\n            <div className=\"columns\">\r\n              <div className=\"column is-one-quarter\">\r\n                <div className=\"control\">\r\n                  <label htmlFor=\"body-mass\" className=\"is-size-5 has-text-weight-semibold\">\r\n                    Body mass (in kg)\r\n                    <input\r\n                      id=\"body-mass\"\r\n                      className=\"input\"\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      onChange={this.handleMassChange}\r\n                      value={bodyMass}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"control\">\r\n                  <label htmlFor=\"body-height\" className=\"is-size-5 has-text-weight-semibold\">\r\n                    Body height (in cm)\r\n                    <input\r\n                      id=\"body-height\"\r\n                      className=\"input\"\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      onChange={this.handleHeightChange}\r\n                      value={bodyHeight}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"control\">\r\n                  <label htmlFor=\"body-age\" className=\"is-size-5 has-text-weight-semibold\">\r\n                    Age\r\n                    <input\r\n                      id=\"body-age\"\r\n                      className=\"input\"\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      onChange={this.handleAgeChange}\r\n                      value={age}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"column is-one-quarter\">\r\n                <div className=\"control\">\r\n                  <label htmlFor=\"physical-activity\" className=\"is-size-5 has-text-weight-semibold\">\r\n                    Physical activity\r\n                    <div className=\"select\">\r\n                      <select\r\n                        onChange={this.handleActivityChange}\r\n                        value={activity}\r\n                        id=\"physical-activity\"\r\n                      >\r\n                        <option value=\"0\">Select activity level</option>\r\n                        <option value=\"1.2\">Almost none</option>\r\n                        <option value=\"1.35\">Little</option>\r\n                        <option value=\"1.55\">Medium</option>\r\n                        <option value=\"1.75\">Big</option>\r\n                        <option value=\"2.05\">Very heavy</option>\r\n                      </select>\r\n                    </div>\r\n                  </label>\r\n                </div>\r\n                <br />\r\n                <div className=\"control\">\r\n                  <label htmlFor=\"woman-button\" className=\"radio is-size-5\">\r\n                    <input\r\n                      id=\"woman-button\"\r\n                      type=\"radio\"\r\n                      name=\"woman\"\r\n                      value=\"1\"\r\n                      checked={sex === 1}\r\n                      onChange={this.handleSexChange}\r\n                    />\r\n                    Woman\r\n                  </label>\r\n                  <label htmlFor=\"men-button\" className=\"radio is-size-5\">\r\n                    <input\r\n                      id=\"men-button\"\r\n                      type=\"radio\"\r\n                      name=\"men\"\r\n                      value=\"2\"\r\n                      checked={sex === 2}\r\n                      onChange={this.handleSexChange}\r\n                    />\r\n                    Men\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {errorBMR && (\r\n              <p className=\"has-text-danger is-size-6\">Please, fill up this form correctly</p>\r\n            )}\r\n            {result && <p className=\"has-text-info is-size-4\">Your BMR is {result}</p>}\r\n            <br />\r\n            <button\r\n              type=\"button\"\r\n              className=\"button is-primary\"\r\n              onClick={this.handleCalculateButton}\r\n            >\r\n              Calculate\r\n            </button>\r\n            {result && (\r\n              <button type=\"button\" className=\"button is-info\" onClick={this.handleSaveBMR}>\r\n                Save\r\n              </button>\r\n            )}\r\n          </div>\r\n          <hr />\r\n          <div className=\"box\">\r\n            <h2 className=\"subtitle is-size-3 has-text-weight-semibold\">\r\n              Provide ingredients proportions\r\n            </h2>\r\n            <p className=\"subtitle\">Enter the proportions of PROTEINS:FATS:CARBOHYDRATES:</p>\r\n            <div className=\"columns\">\r\n              <div className=\"column is-one-quarter\">\r\n                <div className=\"control\">\r\n                  <label htmlFor=\"proteins\" className=\"is-size-5 has-text-weight-semibold\">\r\n                    Proteins\r\n                    <input\r\n                      id=\"proteins\"\r\n                      className=\"input\"\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      value={proteins}\r\n                      onChange={this.handleProteinChange}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"control\">\r\n                  <label htmlFor=\"fats\" className=\"is-size-5 has-text-weight-semibold\">\r\n                    Fats\r\n                    <input\r\n                      id=\"fats\"\r\n                      className=\"input\"\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      value={fats}\r\n                      onChange={this.handleFatsChange}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"control\">\r\n                  <label htmlFor=\"carbs\" className=\"is-size-5 has-text-weight-semibold\">\r\n                    Carbohydrates\r\n                    <input\r\n                      id=\"carbs\"\r\n                      className=\"input\"\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      value={carbs}\r\n                      onChange={this.handleCarbsChange}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {propError && (\r\n              <p className=\"has-text-danger is-size-6\">\r\n                Proteins and carbohydrates must be more than 0\r\n              </p>\r\n            )}\r\n            {proteins > 0 && fats >= 0 && carbs > 0 && (\r\n              <p className=\"has-text-info is-size-4\">\r\n                Your proportions are:\r\n                {` ${proteins}:${fats}:${carbs}`}\r\n              </p>\r\n            )}\r\n            <br />\r\n            <button type=\"button\" className=\"button is-info\" onClick={this.handleSaveProportions}>\r\n              Save\r\n            </button>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div className=\"box\">\r\n            <h2 className=\"subtitle is-size-3 has-text-weight-semibold\">What is your goal?</h2>\r\n            <p className=\"subtitle\">Loose weight, Keep weight or gain weight</p>\r\n\r\n            <div className=\"columns\">\r\n              <div className=\"column is-one-quarter\">\r\n                <div className=\"control\">\r\n                  <label htmlFor=\"goal\" className=\"is-size-5 has-text-weight-semibold\">\r\n                    Your goal\r\n                    <div className=\"select\">\r\n                      <select id=\"goal\" onChange={this.handleGoalChange}>\r\n                        <option value=\"-2\">Select your goal</option>\r\n                        <option value=\"-1\">Loose weight</option>\r\n                        <option value=\"0\">Keep weight</option>\r\n                        <option value=\"1\">Gain weight</option>\r\n                      </select>\r\n                    </div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {errorGoal && (\r\n              <p className=\"has-text-danger is-size-6\">\r\n                Select option from dropdown menu before saving\r\n              </p>\r\n            )}\r\n            {value > -2 && (\r\n              <p className=\"has-text-info is-size-4\">\r\n                You selected to:\r\n                {value === -1 && ' loose weight'}\r\n                {value === 0 && ' keep weight'}\r\n                {value === 1 && ' gain weight'}\r\n              </p>\r\n            )}\r\n            <br />\r\n            <button type=\"button\" className=\"button is-info\" onClick={this.handleSaveGoal}>\r\n              Save\r\n            </button>\r\n          </div>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { BMR, ratioP, ratioF, ratioC, goal } = state.config;\r\n  return {\r\n    yourBMR: BMR,\r\n    yourProteins: ratioP,\r\n    yourFats: ratioF,\r\n    yourCarbs: ratioC,\r\n    yourGoal: goal,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  saveBMR: (BMRresult) => dispatch(saveBMRAction(BMRresult)),\r\n  saveProportions: (properties) => dispatch(saveProportionsAction(properties)),\r\n  saveGoal: (goal) => dispatch(saveGoalAction(goal)),\r\n});\r\n\r\nConfiguration.propTypes = {\r\n  yourBMR: PropTypes.number.isRequired,\r\n  yourProteins: PropTypes.number.isRequired,\r\n  yourFats: PropTypes.number.isRequired,\r\n  yourCarbs: PropTypes.number.isRequired,\r\n  yourGoal: PropTypes.number.isRequired,\r\n  saveBMR: PropTypes.func.isRequired,\r\n  saveProportions: PropTypes.func.isRequired,\r\n  saveGoal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Configuration);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport PropTypes from 'prop-types';\r\nimport TimePicker from 'react-time-picker';\r\nimport { saveNewMeal as saveNewMealAction, editMeal as editMealAction } from '../actions';\r\n\r\nclass MealModal extends React.Component {\r\n  state = {\r\n    name: null,\r\n    error: false,\r\n    time: '',\r\n    timeExists: false,\r\n    type: '',\r\n    substances: false,\r\n    ingredients: false,\r\n  };\r\n\r\n  times = (() => {\r\n    const { dayId, days } = this.props;\r\n    const [day] = days.filter((d) => d.id === dayId);\r\n\r\n    return day.meals.map((m) => {\r\n      return `${\r\n        new Date(m.time).getHours().toString().length === 2\r\n          ? new Date(m.time).getHours()\r\n          : `0${new Date(m.time).getHours()}`\r\n      }:${\r\n        new Date(m.time).getMinutes().toString().length === 2\r\n          ? new Date(m.time).getMinutes()\r\n          : `0${new Date(m.time).getMinutes()}`\r\n      }`;\r\n    });\r\n  })();\r\n\r\n  types = (() => {\r\n    const { days, dayId } = this.props;\r\n    const [day] = days.filter((d) => d.id === dayId);\r\n\r\n    return day.meals.map((m) => m.type);\r\n  })();\r\n\r\n  componentDidMount = () => {\r\n    const html = document.getElementById('document-root');\r\n    html.classList.add('no-overflow');\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    const html = document.getElementById('document-root');\r\n    html.classList.remove('no-overflow');\r\n  };\r\n\r\n  handleNameChange = (e) => {\r\n    this.setState({\r\n      name: e.target.value,\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  handleTimeChange = (time) => {\r\n    const { isEdit } = this.props;\r\n    if (!time) {\r\n      return;\r\n    }\r\n    if (this.times.includes(time) && !isEdit) {\r\n      this.setState({\r\n        timeExists: true,\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      time,\r\n      error: false,\r\n      timeExists: false,\r\n    });\r\n  };\r\n\r\n  handleTypeChange = (e) => {\r\n    this.setState({\r\n      type: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSaveMeal = () => {\r\n    const { time, name, type, substances, ingredients } = this.state;\r\n    const {\r\n      close,\r\n      saveNewMeal,\r\n      time: prevTime,\r\n      name: prevName,\r\n      type: prevType,\r\n      days,\r\n      dayId,\r\n      isEdit,\r\n      editMeal,\r\n    } = this.props;\r\n    const parts = time.split(':');\r\n    if (parts.length !== 2 && !isEdit) {\r\n      this.setState({\r\n        error: true,\r\n      });\r\n      return;\r\n    }\r\n    const timeFormat = new Date(days.filter((d) => d.id === dayId)[0].date);\r\n    timeFormat.setHours(parts[0]);\r\n    timeFormat.setMinutes(parts[1]);\r\n    if (\r\n      (isEdit && !time && !name && !type && timeFormat !== prevTime) ||\r\n      (!isEdit && (!time || !name || !type))\r\n    ) {\r\n      this.setState({\r\n        error: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (isEdit) {\r\n      this.setState({\r\n        timeExists: false,\r\n        error: false,\r\n        substances: false,\r\n        ingredients: false,\r\n      });\r\n      editMeal(\r\n        dayId,\r\n        {\r\n          type: type || prevType,\r\n          name: name || prevName,\r\n          time: time ? timeFormat : prevTime,\r\n        },\r\n        prevType,\r\n      );\r\n      close();\r\n      return;\r\n    }\r\n\r\n    if (!this.times.includes(time)) {\r\n      this.setState({\r\n        timeExists: false,\r\n        error: false,\r\n        substances: false,\r\n        ingredients: false,\r\n      });\r\n      saveNewMeal(dayId, {\r\n        type,\r\n        name,\r\n        time: timeFormat,\r\n        substances: substances || {},\r\n        ingredients: ingredients || [],\r\n      });\r\n      close();\r\n    }\r\n  };\r\n\r\n  handleFromBookmarks = (e) => {\r\n    const { savedMeals } = this.props;\r\n    const [meal] = savedMeals.filter((m) => m.name === e.target.value);\r\n    if (!e.target.value || !meal) {\r\n      this.setState({\r\n        name: '',\r\n        substances: false,\r\n        ingredients: false,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (e.target.value) {\r\n      this.setState({\r\n        name: meal.name,\r\n        substances: meal.substances,\r\n        ingredients: meal.ingredients,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, time, error, timeExists, substances, ingredients } = this.state;\r\n    const { isEdit, close, savedMeals } = this.props;\r\n\r\n    return (\r\n      <div className=\"modal\">\r\n        <div className=\"modal-background\"> </div>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-header-title is-size-4\">{isEdit ? 'Edit meal' : 'Add new meal'}</p>\r\n            <button type=\"button\" className=\"delete\" aria-label=\"close\" onClick={close} />\r\n          </header>\r\n          <section>\r\n            <div className=\"columns\">\r\n              <div className=\"column is-half\">\r\n                <div className=\"control\">\r\n                  <label htmlFor=\"meal-name\" className=\"is-size-5 has-text-weight-semibold\">\r\n                    Name of meal:\r\n                    <input\r\n                      id=\"meal-name\"\r\n                      className=\"input\"\r\n                      type=\"text\"\r\n                      onChange={this.handleNameChange}\r\n                      value={name}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"control\">\r\n                  <p className=\"is-size-5 has-text-weight-semibold\">\r\n                    Time of meal:\r\n                    <TimePicker\r\n                      className=\"input\"\r\n                      id=\"meal-time\"\r\n                      onChange={this.handleTimeChange}\r\n                      value={time}\r\n                      maxDetail=\"minute\"\r\n                      clearIcon={null}\r\n                    />\r\n                  </p>\r\n                </div>\r\n                <div className=\"control\">\r\n                  <label htmlFor=\"meal-type\" className=\"is-size-5 has-text-weight-semibold\">\r\n                    Select type of meal\r\n                    <div className=\"select\">\r\n                      <select onChange={this.handleTypeChange} id=\"meal-type\">\r\n                        <option value={null}>Select meal&apos;s type</option>\r\n                        {!this.types.includes('Breakfast') && (\r\n                          <option value=\"Breakfast\">Breakfast</option>\r\n                        )}\r\n                        {!this.types.includes('Second breakfast') && (\r\n                          <option value=\"Second breakfast\">Second Breakfast</option>\r\n                        )}\r\n                        {!this.types.includes('Lunch') && <option value=\"Lunch\">Lunch</option>}\r\n                        {!this.types.includes('Dinner') && <option value=\"Dinner\">Dinner</option>}\r\n                        {!this.types.includes('Snack 1') && (\r\n                          <option value=\"Snack 1\">Snack 1</option>\r\n                        )}\r\n                        {!this.types.includes('Snack 2') && (\r\n                          <option value=\"Snack 2\">Snack 2</option>\r\n                        )}\r\n                        {!this.types.includes('Snack 3') && (\r\n                          <option value=\"Snack 3\">Snack 3</option>\r\n                        )}\r\n                        {!this.types.includes('Supper') && <option value=\"Supper\">Supper</option>}\r\n                      </select>\r\n                    </div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"column is-half\">\r\n                <div className=\"control\">\r\n                  <label htmlFor=\"meal-bookmarks\" className=\"is-size-5 has-text-weight-semibold\">\r\n                    Select from bookmarks\r\n                    <div className=\"select\">\r\n                      <select onChange={this.handleFromBookmarks} id=\"meal-bookmarks\">\r\n                        <option>None</option>\r\n                        {savedMeals.map((m) => (\r\n                          <option value={m.name}>{m.name}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </label>\r\n                </div>\r\n                {substances && ingredients && (\r\n                  <p className=\"has-text-link is-size-5\">\r\n                    <span className=\"has-text-weight-semibold\">\r\n                      Following ingredients will be applied:{' '}\r\n                    </span>\r\n                    <br />\r\n                    {ingredients.map((i) => (\r\n                      <>\r\n                        <span>\r\n                          {i.name} - {i.quantity}g\r\n                        </span>\r\n                        <br />\r\n                      </>\r\n                    ))}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {error && <p className=\"has-text-danger\">Fill all fields correctly</p>}\r\n            {timeExists && <p className=\"has-text-danger\">This time has already meal</p>}\r\n            <br />\r\n            <button type=\"submit\" className=\"button is-success\" onClick={close}>\r\n              Back\r\n            </button>\r\n            <button type=\"submit\" className=\"button is-info\" onClick={this.handleSaveMeal}>\r\n              Save\r\n            </button>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  saveNewMeal: (dayId, properties) => dispatch(saveNewMealAction(dayId, properties)),\r\n  editMeal: (dayId, properties, prevType) => dispatch(editMealAction(dayId, properties, prevType)),\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { days, savedMeals } = state;\r\n  return {\r\n    days,\r\n    savedMeals,\r\n  };\r\n};\r\n\r\nMealModal.propTypes = {\r\n  saveNewMeal: PropTypes.func.isRequired,\r\n  editMeal: PropTypes.func.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  time: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  dayId: PropTypes.number.isRequired,\r\n  isEdit: PropTypes.bool.isRequired,\r\n  close: PropTypes.func.isRequired,\r\n  days: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  savedMeals: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MealModal);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { routes } from '../routes';\r\nimport {\r\n  removeMeal as removeMealAction,\r\n  recountSubstances as recountSubstancesAction,\r\n  bookmarkMeal as bookmarkMealAction,\r\n} from '../actions';\r\nimport RemoveModal from './RemoveModal';\r\nimport MealModal from './MealModal';\r\nimport IngredientModal from './IngredientModal';\r\nimport OkModal from './OkModal';\r\n\r\nclass MealNote extends React.Component {\r\n  state = {\r\n    removeModalShow: false,\r\n    editModalShow: false,\r\n    ingredientModalShow: false,\r\n    bookmarkModal: false,\r\n  };\r\n\r\n  names = (() => {\r\n    const { ingredients } = this.props;\r\n    return ingredients.map((i) => i.name);\r\n  })();\r\n\r\n  componentDidUpdate() {\r\n    const { ingredients } = this.props;\r\n    this.names = ingredients.map((i) => i.name);\r\n  }\r\n\r\n  handleRemoveButton = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      removeModalShow: true,\r\n    });\r\n  };\r\n\r\n  handleEditButton = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      editModalShow: true,\r\n    });\r\n  };\r\n\r\n  handleBackButton = () => {\r\n    this.setState({\r\n      editModalShow: false,\r\n    });\r\n  };\r\n\r\n  handleIngredientBackButton = () => {\r\n    this.setState({\r\n      ingredientModalShow: false,\r\n    });\r\n  };\r\n\r\n  handleRemoveModal = (sure) => {\r\n    const { dayId, type, removeMeal, recountSubstances } = this.props;\r\n    if (sure) {\r\n      removeMeal(dayId, type);\r\n      recountSubstances();\r\n    }\r\n    this.setState({\r\n      removeModalShow: false,\r\n      editModalShow: false,\r\n    });\r\n  };\r\n\r\n  handleAddIngredient = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      ingredientModalShow: true,\r\n    });\r\n  };\r\n\r\n  handleBookmarkMeal = (e) => {\r\n    e.preventDefault();\r\n    const { name, substances, ingredients, bookmarkMeal } = this.props;\r\n    this.setState({\r\n      bookmarkModal: true,\r\n    });\r\n    bookmarkMeal(name, substances, ingredients);\r\n  };\r\n\r\n  render() {\r\n    const { children, name, type, substances, time, dayId, savedMeals, ingredients } = this.props;\r\n    const { removeModalShow, editModalShow, ingredientModalShow, bookmarkModal } = this.state;\r\n    const timeObj = new Date(time);\r\n    const rightTime = `${timeObj.getHours()}:${\r\n      timeObj.getMinutes().toString().length === 2\r\n        ? timeObj.getMinutes()\r\n        : `0${timeObj.getMinutes()}`\r\n    }`;\r\n\r\n    return (\r\n      <>\r\n        {removeModalShow && (\r\n          <RemoveModal\r\n            title=\"Are you sure?\"\r\n            subtitle={`Do you really want to remove the following meal: ${name}`}\r\n            click={this.handleRemoveModal}\r\n          />\r\n        )}\r\n        {editModalShow && (\r\n          <MealModal\r\n            type={type}\r\n            name={name}\r\n            time={time}\r\n            dayId={dayId}\r\n            close={this.handleBackButton}\r\n            isEdit\r\n          />\r\n        )}\r\n        {ingredientModalShow && (\r\n          <IngredientModal\r\n            dayId={dayId}\r\n            ingredientNames={this.names}\r\n            mealType={type}\r\n            close={this.handleIngredientBackButton}\r\n          />\r\n        )}\r\n        {bookmarkModal && (\r\n          <OkModal\r\n            title=\"Meal bookmarked\"\r\n            subtitle=\"This meal now appears in your meals page\"\r\n            click={() => this.setState({ bookmarkModal: false })}\r\n          />\r\n        )}\r\n        <div className=\"box day-box\">\r\n          <header className=\"card-header\">\r\n            <h2 className=\"card-header-title is-size-4\">{`${type} at ${rightTime}: ${name}`}</h2>\r\n            <div className=\"is-pulled-right has-text-right\">\r\n              <a\r\n                href={routes.dashboard}\r\n                onClick={this.handleAddIngredient}\r\n                className=\"card-header-item\"\r\n              >\r\n                Add\r\n              </a>\r\n              <a\r\n                href={routes.dashboard}\r\n                onClick={this.handleEditButton}\r\n                className=\"card-header-item\"\r\n              >\r\n                Edit\r\n              </a>\r\n              {!savedMeals.map((s) => s.name).includes(name) && !!ingredients.length && (\r\n                <a\r\n                  href={routes.dashboard}\r\n                  className=\"card-header-item\"\r\n                  onClick={this.handleBookmarkMeal}\r\n                >\r\n                  Bookmark\r\n                </a>\r\n              )}\r\n              <a\r\n                href={routes.dashboard}\r\n                onClick={this.handleRemoveButton}\r\n                className=\"card-header-item has-text-danger\"\r\n              >\r\n                Remove\r\n              </a>\r\n            </div>\r\n          </header>\r\n          <div className=\"card-content\">\r\n            <div className=\"content\">{children}</div>\r\n          </div>\r\n          <footer className=\"card-footer ingredients\">\r\n            <p className=\"card-footer-item is-size-7\">\r\n              Proteins:\r\n              <strong> {substances.proteins ? substances.proteins : '0'}g</strong>\r\n            </p>\r\n            <p className=\"card-footer-item is-size-7\">\r\n              Fats:\r\n              <strong> {substances.fats ? substances.fats : '0'}g</strong>\r\n            </p>\r\n            <p className=\"card-footer-item is-size-7\">\r\n              Carbs:\r\n              <strong> {substances.carbs ? substances.carbs : '0'}g</strong>\r\n            </p>\r\n            <p className=\"card-footer-item is-size-7\">\r\n              Calories:\r\n              <strong> {substances.calories ? substances.calories : '0'} kcal</strong>\r\n            </p>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeMeal: (dayId, mealType) => dispatch(removeMealAction(dayId, mealType)),\r\n  recountSubstances: () => dispatch(recountSubstancesAction()),\r\n  bookmarkMeal: (name, substances, ingredients) =>\r\n    dispatch(bookmarkMealAction(name, substances, ingredients)),\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { savedMeals } = state;\r\n  return {\r\n    savedMeals,\r\n  };\r\n};\r\n\r\nMealNote.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\r\n  recountSubstances: PropTypes.func.isRequired,\r\n  bookmarkMeal: PropTypes.func.isRequired,\r\n  time: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  dayId: PropTypes.number.isRequired,\r\n  removeMeal: PropTypes.func.isRequired,\r\n  ingredients: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  substances: PropTypes.shape({\r\n    proteins: PropTypes.number,\r\n    fats: PropTypes.number,\r\n    carbs: PropTypes.number,\r\n    calories: PropTypes.number,\r\n  }),\r\n  savedMeals: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nMealNote.defaultProps = {\r\n  substances: PropTypes.shape({\r\n    proteins: 0,\r\n    fats: 0,\r\n    carbs: 0,\r\n    calories: 0,\r\n  }),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MealNote);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Card from '../templates/Card';\r\nimport IngredientSnippet from '../components/IngredientSnippet';\r\nimport MealNote from '../components/MealNote';\r\nimport MealModal from '../components/MealModal';\r\n\r\nclass Day extends React.Component {\r\n  state = {\r\n    modalOpened: false,\r\n  };\r\n\r\n  handleAddNew = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      modalOpened: true,\r\n    });\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({\r\n      modalOpened: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { days, match } = this.props;\r\n    const { modalOpened } = this.state;\r\n    const dayParam = match.params.day;\r\n    const thisDate = `/${dayParam}`;\r\n    const thisDay = days.filter((d) => d.path === thisDate)[0];\r\n\r\n    const mealList = !thisDay.meals.length ? (\r\n      <p className=\"subtitle is-size-4 has-text-centered\">No meals in this day yet</p>\r\n    ) : (\r\n      thisDay.meals.map((m) => {\r\n        const ingredientList = !m.ingredients.length ? (\r\n          <p className=\"subtitle is-size-4 has-text-centered\">No ingredients in this meal yet</p>\r\n        ) : (\r\n          m.ingredients.map((i) => (\r\n            <IngredientSnippet\r\n              key={`${i.name}-${m.time}`}\r\n              name={i.name}\r\n              substances={i.substances}\r\n              ingredientNames={m.ingredients.map((v) => v.name)}\r\n              quantity={i.quantity}\r\n              path={i.path}\r\n              mealType={m.type}\r\n              dayId={thisDay.id}\r\n            />\r\n          ))\r\n        );\r\n        return (\r\n          <MealNote\r\n            key={`mn${m.time}`}\r\n            substances={m.substances}\r\n            ingredients={m.ingredients}\r\n            name={m.name}\r\n            time={m.time}\r\n            path={m.path}\r\n            type={m.type}\r\n            dayId={thisDay.id}\r\n            days={days}\r\n          >\r\n            {ingredientList}\r\n          </MealNote>\r\n        );\r\n      })\r\n    );\r\n    return (\r\n      <>\r\n        {modalOpened && <MealModal days={days} dayId={thisDay.id} close={this.handleCloseModal} />}\r\n        <Card title={`Day ${dayParam}`} subtitle=\"Organize your meals in this day\">\r\n          <div className=\"add-new has-text-centered\">\r\n            <p className=\"subtitle has-text-centered\">Add new meal to this day:</p>\r\n            <button type=\"button\" className=\"button\" onClick={this.handleAddNew}>\r\n              Add meal\r\n            </button>\r\n          </div>\r\n          {mealList}\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { days } = state;\r\n  return {\r\n    days,\r\n  };\r\n};\r\n\r\nDay.propTypes = {\r\n  days: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  match: PropTypes.shape({\r\n    params: PropTypes.object.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    isExact: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Day);\r\n","import {\r\n  SAVE_BMR,\r\n  SAVE_PROPORTIONS,\r\n  SAVE_GOAL,\r\n  SAVE_NEW_DAY,\r\n  EDIT_DAY,\r\n  REMOVE_DAY,\r\n  SAVE_NEW_MEAL,\r\n  EDIT_MEAL,\r\n  REMOVE_MEAL,\r\n  RECOUNT_SUBSTANCES,\r\n  ADD_INGREDIENT,\r\n  REMOVE_INGREDIENT,\r\n  EDIT_INGREDIENT,\r\n  BOOKMARK_MEAL,\r\n  BOOKMARK_INGREDIENT,\r\n  REMOVE_BOOKMARKED_MEAL,\r\n  REMOVE_BOOKMARKED_INGREDIENT,\r\n  USER_REGISTER,\r\n  USER_LOGIN,\r\n  USER_LOGOUT,\r\n} from '../actions';\r\nimport { floorToOne, saveDB } from '../utils';\r\n\r\nconst initialState = {\r\n  days: [\r\n    {\r\n      id: 0,\r\n      date: new Date(2020, 3, 26),\r\n      path: '/2020-03-26',\r\n      substances: {\r\n        proteins: 111,\r\n        fats: 52.1,\r\n        carbs: 227,\r\n        calories: 1798.9,\r\n      },\r\n      meals: [\r\n        {\r\n          type: 'Breakfast',\r\n          name: 'Oatmeal with cheese',\r\n          time: new Date(2020, 3, 26, 7, 30).toString(),\r\n          substances: {\r\n            proteins: 27.8,\r\n            fats: 13.6,\r\n            carbs: 74.1,\r\n            calories: 543,\r\n          },\r\n          ingredients: [\r\n            {\r\n              name: 'Milk',\r\n              quantity: 200,\r\n              substances: {\r\n                proteins: 6.4,\r\n                fats: 6.4,\r\n                carbs: 9.4,\r\n                calories: 120,\r\n              },\r\n            },\r\n            {\r\n              name: 'Oatmeal',\r\n              quantity: 100,\r\n              substances: {\r\n                proteins: 11.9,\r\n                fats: 7.2,\r\n                carbs: 63,\r\n                calories: 378,\r\n              },\r\n            },\r\n            {\r\n              name: 'Cottage cheese',\r\n              quantity: 50,\r\n              substances: {\r\n                proteins: 9.5,\r\n                fats: 0,\r\n                carbs: 1.7,\r\n                calories: 45,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          type: 'Lunch',\r\n          name: 'Chicken with rice and salad',\r\n          time: new Date(2020, 3, 26, 12, 30).toString(),\r\n          substances: {\r\n            proteins: 48.66,\r\n            fats: 52.1,\r\n            carbs: 74.4,\r\n            calories: 463.5,\r\n          },\r\n          ingredients: [\r\n            {\r\n              name: 'Chicken',\r\n              quantity: 150,\r\n              substances: {\r\n                proteins: 34.5,\r\n                fats: 2.5,\r\n                carbs: 9.4,\r\n                calories: 160.5,\r\n              },\r\n            },\r\n            {\r\n              name: 'Rice',\r\n              quantity: 75,\r\n              substances: {\r\n                proteins: 11.9,\r\n                fats: 0.5,\r\n                carbs: 58.5,\r\n                calories: 262.5,\r\n              },\r\n            },\r\n            {\r\n              name: 'Carrot',\r\n              quantity: 50,\r\n              substances: {\r\n                proteins: 0.46,\r\n                fats: 0.22,\r\n                carbs: 3.05,\r\n                calories: 18,\r\n              },\r\n            },\r\n            {\r\n              name: 'Green beans',\r\n              quantity: 75,\r\n              substances: {\r\n                proteins: 1.8,\r\n                fats: 0.15,\r\n                carbs: 3.45,\r\n                calories: 22.5,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          type: 'Snack 1',\r\n          name: 'Apple and hazelnuts',\r\n          time: new Date(2020, 3, 26, 17, 0).toString(),\r\n          substances: {\r\n            proteins: 5.93,\r\n            fats: 25,\r\n            carbs: 21.5,\r\n            calories: 340.4,\r\n          },\r\n          ingredients: [\r\n            {\r\n              name: 'Apple',\r\n              quantity: 150,\r\n              substances: {\r\n                proteins: 0.33,\r\n                fats: 0.2,\r\n                carbs: 17.1,\r\n                calories: 75,\r\n              },\r\n            },\r\n            {\r\n              name: 'Hazelnuts',\r\n              quantity: 40,\r\n              substances: {\r\n                proteins: 5.6,\r\n                fats: 24.8,\r\n                carbs: 4.4,\r\n                calories: 265.4,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          type: 'Supper',\r\n          name: 'Sandwiches with ham and salad',\r\n          time: new Date(2020, 3, 26, 20, 0).toString(),\r\n          substances: {\r\n            proteins: 28.6,\r\n            fats: 10.14,\r\n            carbs: 57,\r\n            calories: 452.4,\r\n          },\r\n          ingredients: [\r\n            {\r\n              name: 'Bread',\r\n              quantity: 120,\r\n              substances: {\r\n                proteins: 10.2,\r\n                fats: 6.24,\r\n                carbs: 55.2,\r\n                calories: 335,\r\n              },\r\n            },\r\n            {\r\n              name: 'Ham',\r\n              quantity: 80,\r\n              substances: {\r\n                proteins: 16.8,\r\n                fats: 2.4,\r\n                carbs: 0.4,\r\n                calories: 90.4,\r\n              },\r\n            },\r\n            {\r\n              name: 'Salad',\r\n              quantity: 20,\r\n              substances: {\r\n                proteins: 1.6,\r\n                fats: 1.5,\r\n                carbs: 1.4,\r\n                calories: 27.2,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  savedMeals: [\r\n    {\r\n      type: 'Breakfast',\r\n      name: 'Oatmeal with cheese',\r\n      substances: {\r\n        proteins: 27.8,\r\n        fats: 13.6,\r\n        carbs: 74.1,\r\n        calories: 543,\r\n      },\r\n      ingredients: [\r\n        {\r\n          name: 'Milk',\r\n          quantity: 200,\r\n          substances: {\r\n            proteins: 6.4,\r\n            fats: 6.4,\r\n            carbs: 9.4,\r\n            calories: 120,\r\n          },\r\n        },\r\n        {\r\n          name: 'Oatmeal',\r\n          quantity: 100,\r\n          substances: {\r\n            proteins: 11.9,\r\n            fats: 7.2,\r\n            carbs: 63,\r\n            calories: 378,\r\n          },\r\n        },\r\n        {\r\n          name: 'Cottage cheese',\r\n          quantity: 50,\r\n          substances: {\r\n            proteins: 9.5,\r\n            fats: 0,\r\n            carbs: 1.7,\r\n            calories: 45,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      type: 'Lunch',\r\n      name: 'Chicken with rice and salad',\r\n      time: new Date(2020, 3, 26, 12, 30).toString(),\r\n      substances: {\r\n        proteins: 48.66,\r\n        fats: 3.37,\r\n        carbs: 74.4,\r\n        calories: 463.5,\r\n      },\r\n      ingredients: [\r\n        {\r\n          name: 'Chicken',\r\n          quantity: 150,\r\n          substances: {\r\n            proteins: 34.5,\r\n            fats: 2.5,\r\n            carbs: 9.4,\r\n            calories: 160.5,\r\n          },\r\n        },\r\n        {\r\n          name: 'Rice',\r\n          quantity: 75,\r\n          substances: {\r\n            proteins: 11.9,\r\n            fats: 0.5,\r\n            carbs: 58.5,\r\n            calories: 262.5,\r\n          },\r\n        },\r\n        {\r\n          name: 'Carrot',\r\n          quantity: 50,\r\n          substances: {\r\n            proteins: 0.46,\r\n            fats: 0.22,\r\n            carbs: 3.05,\r\n            calories: 18,\r\n          },\r\n        },\r\n        {\r\n          name: 'Green beans',\r\n          quantity: 75,\r\n          substances: {\r\n            proteins: 1.8,\r\n            fats: 0.15,\r\n            carbs: 3.45,\r\n            calories: 22.5,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      type: 'Snack',\r\n      name: 'Apple and hazelnuts',\r\n      time: new Date(2020, 3, 26, 17, 0).toString(),\r\n      substances: {\r\n        proteins: 5.93,\r\n        fats: 25,\r\n        carbs: 21.5,\r\n        calories: 340.4,\r\n      },\r\n      ingredients: [\r\n        {\r\n          name: 'Apple',\r\n          quantity: 150,\r\n          substances: {\r\n            proteins: 0.33,\r\n            fats: 0.2,\r\n            carbs: 17.1,\r\n            calories: 75,\r\n          },\r\n        },\r\n        {\r\n          name: 'Hazelnuts',\r\n          quantity: 40,\r\n          substances: {\r\n            proteins: 5.6,\r\n            fats: 24.8,\r\n            carbs: 4.4,\r\n            calories: 265.4,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      type: 'Supper',\r\n      name: 'Sandwiches with ham and salad',\r\n      time: new Date(2020, 3, 26, 20, 0).toString(),\r\n      substances: {\r\n        proteins: 28.6,\r\n        fats: 10.14,\r\n        carbs: 57,\r\n        calories: 452.4,\r\n      },\r\n      ingredients: [\r\n        {\r\n          name: 'Bread',\r\n          quantity: 120,\r\n          substances: {\r\n            proteins: 10.2,\r\n            fats: 6.24,\r\n            carbs: 55.2,\r\n            calories: 335,\r\n          },\r\n        },\r\n        {\r\n          name: 'Ham',\r\n          quantity: 80,\r\n          substances: {\r\n            proteins: 16.8,\r\n            fats: 2.4,\r\n            carbs: 0.4,\r\n            calories: 90.4,\r\n          },\r\n        },\r\n        {\r\n          name: 'Salad',\r\n          quantity: 20,\r\n          substances: {\r\n            proteins: 1.6,\r\n            fats: 1.5,\r\n            carbs: 1.4,\r\n            calories: 27.2,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  savedIngredients: [\r\n    {\r\n      name: 'Apple',\r\n      substances: {\r\n        proteins: 0.26,\r\n        fats: 0.17,\r\n        carbs: 11.41,\r\n        calories: 50,\r\n      },\r\n    },\r\n    {\r\n      name: 'Chicken',\r\n      substances: {\r\n        proteins: 21,\r\n        fats: 1.5,\r\n        carbs: 0,\r\n        calories: 100,\r\n      },\r\n    },\r\n  ],\r\n  config: {\r\n    BMR: 2200,\r\n    goal: 0,\r\n    ratioP: 2,\r\n    ratioF: 1,\r\n    ratioC: 3,\r\n    Pmin: 174,\r\n    Pmax: 191,\r\n    Fmin: 38,\r\n    Fmax: 42,\r\n    Cmin: 262,\r\n    Cmax: 287,\r\n  },\r\n  loggedAs: '',\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  let helper;\r\n  switch (action.type) {\r\n    case SAVE_BMR:\r\n      return saveDB({\r\n        ...state,\r\n        config: {\r\n          ...state.config,\r\n          BMR: action.payload.BMRresult,\r\n        },\r\n      });\r\n    case SAVE_PROPORTIONS:\r\n      return saveDB({\r\n        ...state,\r\n        config: { ...state.config, ...action.payload.properties },\r\n      });\r\n    case SAVE_GOAL:\r\n      return saveDB({\r\n        ...state,\r\n        config: {\r\n          ...state.config,\r\n          goal: action.payload.goal,\r\n        },\r\n      });\r\n    case SAVE_NEW_DAY:\r\n      return saveDB({\r\n        ...state,\r\n        days: [\r\n          ...state.days,\r\n          {\r\n            id: Math.max(...state.days.map((d) => d.id)) + 1,\r\n            date: action.payload.date,\r\n            substances: {\r\n              proteins: 0,\r\n              fats: 0,\r\n              carbs: 0,\r\n              calories: 0,\r\n            },\r\n            path: `/${action.payload.date.getFullYear()}-${\r\n              action.payload.date.getMonth().toString().length === 2\r\n                ? action.payload.date.getMonth() + 1\r\n                : `0${action.payload.date.getMonth() + 1}`\r\n            }-${\r\n              action.payload.date.getDate().toString().length === 2\r\n                ? action.payload.date.getDate()\r\n                : `0${action.payload.date.getDate()}`\r\n            }`,\r\n            meals: [],\r\n          },\r\n        ].sort((a, b) => new Date(a.date) > new Date(b.date)),\r\n      });\r\n    case EDIT_DAY:\r\n      [helper] = state.days.filter((d) => d.id === action.payload.dayId);\r\n      helper.date = action.payload.date;\r\n      helper.path = `/${action.payload.date.getFullYear()}-${\r\n        action.payload.date.getMonth().toString().length === 2\r\n          ? action.payload.date.getMonth() + 1\r\n          : `0${action.payload.date.getMonth() + 1}`\r\n      }-${\r\n        action.payload.date.getDate().toString().length === 2\r\n          ? action.payload.date.getDate()\r\n          : `0${action.payload.date.getDate()}`\r\n      }`;\r\n      return saveDB({\r\n        ...state,\r\n        days: [...state.days.filter((d) => d.id !== action.payload.dayId), helper].sort(\r\n          (a, b) => new Date(a.date) > new Date(b.date),\r\n        ),\r\n      });\r\n    case REMOVE_DAY:\r\n      return saveDB({\r\n        ...state,\r\n        days: state.days\r\n          .filter((d) => d.id !== action.payload.id)\r\n          .sort((a, b) => new Date(a.date) > new Date(b.date)),\r\n      });\r\n    case REMOVE_MEAL:\r\n      [helper] = state.days.filter((d) => d.id === action.payload.dayId);\r\n      helper.meals = helper.meals.filter((m) => m.type !== action.payload.mealType);\r\n      return saveDB({\r\n        ...state,\r\n        days: [...state.days.filter((d) => d.id !== action.payload.dayId), helper],\r\n      });\r\n    case SAVE_NEW_MEAL:\r\n      [helper] = state.days.filter((d) => d.id === action.payload.dayId);\r\n      helper.meals.push({\r\n        ...action.payload.properties,\r\n      });\r\n      helper.meals.sort((a, b) => {\r\n        return new Date(a.time) > new Date(b.time);\r\n      });\r\n      return saveDB({\r\n        ...state,\r\n        days: [...state.days.filter((d) => d.id !== action.payload.dayId), helper],\r\n      });\r\n    case EDIT_MEAL:\r\n      [helper] = state.days.filter((d) => d.id === action.payload.dayId);\r\n      helper.meals = helper.meals\r\n        .map((m) => {\r\n          if (m.type === action.payload.prevType) {\r\n            return {\r\n              ...m,\r\n              ...action.payload.properties,\r\n            };\r\n          }\r\n          return m;\r\n        })\r\n        .sort((a, b) => new Date(a.time) > new Date(b.time));\r\n      return saveDB({\r\n        ...state,\r\n        days: [...state.days.filter((d) => d.id !== action.payload.dayId), helper].sort(\r\n          (a, b) => new Date(a.date) > new Date(b.date),\r\n        ),\r\n      });\r\n    case RECOUNT_SUBSTANCES:\r\n      helper = state.days.map((d) => {\r\n        const day = d;\r\n        day.meals = d.meals.map((m) => {\r\n          const meal = m;\r\n          meal.substances.proteins = floorToOne(\r\n            meal.ingredients.reduce((p, n) => p + n.substances.proteins, 0),\r\n          );\r\n          meal.substances.fats = floorToOne(\r\n            meal.ingredients.reduce((p, n) => p + n.substances.fats, 0),\r\n          );\r\n          meal.substances.carbs = floorToOne(\r\n            meal.ingredients.reduce((p, n) => p + n.substances.carbs, 0),\r\n          );\r\n          meal.substances.calories = floorToOne(\r\n            meal.ingredients.reduce((p, n) => p + n.substances.calories, 0),\r\n          );\r\n          return meal;\r\n        });\r\n        day.substances.proteins = floorToOne(\r\n          d.meals.reduce((p, n) => p + n.substances.proteins, 0),\r\n        );\r\n        day.substances.fats = floorToOne(d.meals.reduce((p, n) => p + n.substances.fats, 0));\r\n        day.substances.carbs = floorToOne(d.meals.reduce((p, n) => p + n.substances.carbs, 0));\r\n        day.substances.calories = floorToOne(\r\n          d.meals.reduce((p, n) => p + n.substances.calories, 0),\r\n        );\r\n        return day;\r\n      });\r\n      return saveDB({\r\n        ...state,\r\n        helper,\r\n      });\r\n    case REMOVE_BOOKMARKED_MEAL:\r\n      return saveDB({\r\n        ...state,\r\n        savedMeals: state.savedMeals.filter(\r\n          (m) => m.name !== action.payload.name && m.type !== action.payload.type,\r\n        ),\r\n      });\r\n    case ADD_INGREDIENT:\r\n      [helper] = state.days.filter((d) => d.id === action.payload.dayId);\r\n      helper.meals = helper.meals.map((m) => {\r\n        if (m.type === action.payload.mealType) {\r\n          m.ingredients.push({\r\n            name: action.payload.name,\r\n            quantity: action.payload.quantity,\r\n            substances: action.payload.substances,\r\n          });\r\n        }\r\n        return m;\r\n      });\r\n      return saveDB({\r\n        ...state,\r\n        days: [...state.days.filter((d) => d.id !== action.payload.dayId), helper].sort(\r\n          (a, b) => new Date(a.date) > new Date(b.date),\r\n        ),\r\n      });\r\n    case REMOVE_INGREDIENT:\r\n      helper = state.days.map((d) => {\r\n        if (d.id === action.payload.dayId) {\r\n          d.meals.map((m) => {\r\n            const meal = m;\r\n            if (m.type === action.payload.mealType) {\r\n              meal.ingredients = [...m.ingredients.filter((i) => i.name !== action.payload.name)];\r\n            }\r\n            return meal;\r\n          });\r\n          return d;\r\n        }\r\n        return d;\r\n      });\r\n      return saveDB({\r\n        ...state,\r\n        days: helper,\r\n      });\r\n    case EDIT_INGREDIENT:\r\n      [helper] = state.days.filter((d) => d.id === action.payload.dayId);\r\n      helper.meals = helper.meals.map((m) => {\r\n        const meal = m;\r\n        if (m.type === action.payload.mealType) {\r\n          meal.ingredients = m.ingredients.map((i) => {\r\n            const ingredient = i;\r\n            if (\r\n              i.name === action.payload.prevName &&\r\n              (action.payload.name === action.payload.prevName || action.payload.name === '')\r\n            ) {\r\n              ingredient.quantity = action.payload.quantity;\r\n              ingredient.substances = action.payload.substances;\r\n            }\r\n            if (\r\n              i.name === action.payload.prevName &&\r\n              action.payload.name !== action.payload.prevName\r\n            ) {\r\n              ingredient.name = action.payload.name;\r\n            }\r\n            return i;\r\n          });\r\n        }\r\n        return m;\r\n      });\r\n      return saveDB({\r\n        ...state,\r\n        days: [...state.days.filter((d) => d.id !== action.payload.dayId), helper].sort(\r\n          (a, b) => new Date(a.date) > new Date(b.date),\r\n        ),\r\n      });\r\n    case BOOKMARK_MEAL:\r\n      return saveDB({\r\n        ...state,\r\n        savedMeals: [\r\n          {\r\n            name: action.payload.name,\r\n            substances: action.payload.substances,\r\n            ingredients: action.payload.ingredients,\r\n          },\r\n          ...state.savedMeals,\r\n        ],\r\n      });\r\n    case REMOVE_BOOKMARKED_INGREDIENT:\r\n      helper = state.savedIngredients.filter((i) => i.name !== action.payload.name);\r\n      return saveDB({\r\n        ...state,\r\n        savedIngredients: helper,\r\n      });\r\n    case BOOKMARK_INGREDIENT:\r\n      return saveDB({\r\n        ...state,\r\n        savedIngredients: [\r\n          { name: action.payload.name, substances: action.payload.substances },\r\n          ...state.savedIngredients,\r\n        ],\r\n      });\r\n    case USER_REGISTER: {\r\n      if (action.payload.data.error) {\r\n        return state;\r\n      }\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('loggedAs');\r\n      localStorage.setItem('token', action.payload.data.token);\r\n      localStorage.setItem('loggedAs', action.payload.data.email);\r\n      return { ...state, loggedAs: action.payload.data.email };\r\n    }\r\n    case USER_LOGIN: {\r\n      if (action.payload.data.error) {\r\n        return state;\r\n      }\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('loggedAs');\r\n      localStorage.setItem('token', action.payload.data.token);\r\n      localStorage.setItem('loggedAs', action.payload.data.state.loggedAs);\r\n      return action.payload.data.state;\r\n    }\r\n    case USER_LOGOUT: {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('loggedAs');\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport thunk from 'redux-thunk';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport rootReducer from '../reducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// eslint-disable-next-line no-undef\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { routes } from '../routes';\r\nimport Header from '../templates/Header';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport Dashboard from './Dashboard';\r\nimport SavedMeals from './SavedMeals';\r\nimport SavedIngredients from './SavedIngredients';\r\nimport Configuration from './Configuration';\r\nimport Day from './Day';\r\nimport store from '../store';\r\n\r\nconst Root = () => (\r\n  <Provider store={store.store}>\r\n    <PersistGate persistor={store.persistor}>\r\n      <Router>\r\n        <Header />\r\n        <main>\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path={routes.home}>\r\n                <Redirect to={routes.dashboard} />\r\n              </Route>\r\n              <Route exact path={routes.login} component={Login} />\r\n              <Route exact path={routes.register} component={Register} />\r\n              <Route exact path={routes.dashboard} component={Dashboard} />\r\n              <Route exact path={routes.meals} component={SavedMeals} />\r\n              <Route exact path={routes.ingredients} component={SavedIngredients} />\r\n              <Route exact path={routes.config} component={Configuration} />\r\n              <Route exact path={routes.day} component={Day} />\r\n            </Switch>\r\n          </div>\r\n        </main>\r\n      </Router>\r\n    </PersistGate>\r\n  </Provider>\r\n);\r\n\r\nexport default Root;\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Root from \"./views/Root.js\"\r\nimport \"./theme/custom.scss\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n)\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.9a9864f6.svg\";"],"sourceRoot":""}